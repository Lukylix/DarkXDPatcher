
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:res="using:sparkler.resources" xmlns:components="using:sparkler.components" xmlns:corecomponents="using:sparkler.core.components" xmlns:converter="using:sparkler.converters" xmlns:coreconverters="using:sparkler.core.converters" xmlns:utils="using:sparkler.utils" xmlns:contract6Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,6)">
  <ResourceDictionary.ThemeDictionaries>
    <ResourceDictionary x:Key="Light">
      <Color x:Key="Grey1">#000000</Color>
      <Color x:Key="Grey2">#000000</Color>
      <Color x:Key="Grey3">#000000</Color>
      <Color x:Key="Grey4">#ff6b6b6b</Color>
      <Color x:Key="Grey5">#ff707070</Color>
      <Color x:Key="Grey6">#ff848484</Color>
      <Color x:Key="Grey7">#ffa2a2a2</Color>
      <Color x:Key="Grey8">#ffcbcbcb</Color>
      <Color x:Key="Grey9">#CDCDCD</Color>
      <Color x:Key="Grey10">#FCFCFC</Color>
      <Color x:Key="LabelColor">#ffc0c0c0</Color>
      <Color x:Key="ForegroundColor">#ffc0c0c0</Color>
      <Color x:Key="TextControlForeground">#ffc0c0c0</Color>
      <Color x:Key="TextControlForegroundPointerOver">#ffc0c0c0</Color>
      <Color x:Key="TextControlForegroundFocused">#ffc0c0c0</Color>
      <Color x:Key="PlaceholderForegroundColor">#66717171</Color>
      <Color x:Key="BorderColor">#ff393939</Color>
      <Color x:Key="SecondaryForegroundColor">#ff717171</Color>
      <Color x:Key="SecondaryForegroundColor60">#ff717171</Color>
      <Color x:Key="SystemAccentColor">#ff717171</Color>
      <Color x:Key="TextSelectionHighlightColor">#1592E6</Color>
      <Color x:Key="ToolNormalColor">#FFF9F9F9</Color>
      <Color x:Key="ToolCheckedColor">#FF177DDE</Color>
      <Color x:Key="ToolDisabledColor">#88858585</Color>
      <x:Double x:Key="ControlDisabledOpacity">0.35</x:Double>
      <Color x:Key="ControlNormalFillColor">#ff989898</Color>
      <Color x:Key="ControlDisabledFillColor">#ff404040</Color>
      <Color x:Key="ApplicationBackgroundColor">#000000</Color>
      <Color x:Key="PanelBackgroundColor">#000000</Color>
      <Color x:Key="DialogBackgroundColor">#000000</Color>
      <Color x:Key="UiTextColour">#ffc0c0c0</Color>
      <Color x:Key="UiTextColourLight">#ffc0c0c0</Color>
      <Color x:Key="UiChromeColour">#ff404040</Color>
      <Color x:Key="SelectedBorder">#FF008DE9</Color>
      <Color x:Key="HoverBorder">#ff4c4c4c</Color>
      <Color x:Key="UiBackgroundColour">#000000</Color>
      <Color x:Key="BtnBackground">#000000</Color>
      <Color x:Key="BtnLightByBackground">#000000</Color>
      <Color x:Key="BtnDarkByBackground">#ff333333</Color>
      <Color x:Key="BtnSelectedForeground">#FFFF0000</Color>
      <Color x:Key="BtnPrimaryForegroundColor">#ff989898</Color>
      <Color x:Key="BtnSecondaryForegroundColor">#ff989898</Color>
      <Color x:Key="EyeDropperCursorStroke">#ffadadad</Color>
      <Color x:Key="ColorButtonIndeterminateDashColor">#000000</Color>
      <SolidColorBrush x:Key="IndeterminateBorderBrush" Color="#000" Opacity="0.16"></SolidColorBrush>
      <Color x:Key="DropdownBorderColor">#ff404040</Color>
      <Color x:Key="DropdownSeparatorColor">#ff404040</Color>
      <Color x:Key="DropdownFillColor">#000000</Color>
      <Color x:Key="DropdownPopupFillColor">#000000</Color>
      <Color x:Key="DropdownPopupHoverColor">#FAFAFA</Color>
      <Color x:Key="DropdownTextColor">#ff717171</Color>
      <Color x:Key="DropdownSelectedFillColor">#1592E6</Color>
      <Color x:Key="DropdownSelectedHoverColor">#1592E6</Color>
      <Color x:Key="DropdownSelectedTextColor">#FFFFFF</Color>
      <Color x:Key="DropdownDisabledColor">#ffc0c0c0</Color>
      <x:Double x:Key="DropdownDisabledImageOpacity">0.7</x:Double>
      <Color x:Key="InteractionBorderColor">#000000</Color>
      <Color x:Key="InteractionBackgroundColor">#000000</Color>
      <Color x:Key="AppMenuListItemOverColor">#000000</Color>
      <Color x:Key="ArtboardListHoverColor">#EEEEEE</Color>
      <Color x:Key="TooltipBackgroundColor">#ff717171</Color>
      <Color x:Key="DropAreaBackgroundColor">#1592E6</Color>
      <Color x:Key="HighlightedButtonColor">#009D00</Color>
      <Color x:Key="CircularProgressBarColor">#09A4EB</Color>
      <Color x:Key="LayerPanelTextHighlightColor">#1592E6</Color>
      <Color x:Key="LayerPanelEditTextBackgroundColor">#000000</Color>
      <Color x:Key="ComboboxItemBackgroundHover">#000000</Color>
      <Color x:Key="ComboboxItemForegroundHover">#000000</Color>
      <Color x:Key="ComboboxItemForegroundSelected">#1592E6</Color>
    </ResourceDictionary>
    <ResourceDictionary x:Key="Dark">
      <Color x:Key="Grey1">#000000</Color>
      <Color x:Key="Grey2">#000000</Color>
      <Color x:Key="Grey3">#000000</Color>
      <Color x:Key="Grey4">#ff6b6b6b</Color>
      <Color x:Key="Grey5">#ff707070</Color>
      <Color x:Key="Grey6">#ff848484</Color>
      <Color x:Key="Grey7">#ffa2a2a2</Color>
      <Color x:Key="Grey8">#ffcbcbcb</Color>
      <Color x:Key="Grey9">#CDCDCD</Color>
      <Color x:Key="Grey10">#FCFCFC</Color>
      <Color x:Key="LabelColor">#ffc0c0c0</Color>
      <Color x:Key="ForegroundColor">#ffc0c0c0</Color>
      <Color x:Key="TextControlForeground">#ffc0c0c0</Color>
      <Color x:Key="TextControlForegroundPointerOver">#ffc0c0c0</Color>
      <Color x:Key="TextControlForegroundFocused">#ffc0c0c0</Color>
      <Color x:Key="PlaceholderForegroundColor">#66717171</Color>
      <Color x:Key="BorderColor">#ff393939</Color>
      <Color x:Key="SecondaryForegroundColor">#ff717171</Color>
      <Color x:Key="SecondaryForegroundColor60">#ff717171</Color>
      <Color x:Key="SystemAccentColor">#ff717171</Color>
      <Color x:Key="TextSelectionHighlightColor">#1592E6</Color>
      <Color x:Key="ToolNormalColor">#FFF9F9F9</Color>
      <Color x:Key="ToolCheckedColor">#FF177DDE</Color>
      <Color x:Key="ToolDisabledColor">#88858585</Color>
      <x:Double x:Key="ControlDisabledOpacity">0.35</x:Double>
      <Color x:Key="ControlNormalFillColor">#ff989898</Color>
      <Color x:Key="ControlDisabledFillColor">#ff404040</Color>
      <Color x:Key="ApplicationBackgroundColor">#000000</Color>
      <Color x:Key="PanelBackgroundColor">#000000</Color>
      <Color x:Key="DialogBackgroundColor">#000000</Color>
      <Color x:Key="UiTextColour">#ffc0c0c0</Color>
      <Color x:Key="UiTextColourLight">#ffc0c0c0</Color>
      <Color x:Key="UiChromeColour">#ff404040</Color>
      <Color x:Key="SelectedBorder">#FF008DE9</Color>
      <Color x:Key="HoverBorder">#ff4c4c4c</Color>
      <Color x:Key="UiBackgroundColour">#000000</Color>
      <Color x:Key="BtnBackground">#000000</Color>
      <Color x:Key="BtnLightByBackground">#000000</Color>
      <Color x:Key="BtnDarkByBackground">#ff333333</Color>
      <Color x:Key="BtnSelectedForeground">#FFFF0000</Color>
      <Color x:Key="BtnPrimaryForegroundColor">#ff989898</Color>
      <Color x:Key="BtnSecondaryForegroundColor">#ff989898</Color>
      <Color x:Key="EyeDropperCursorStroke">#ffadadad</Color>
      <Color x:Key="ColorButtonIndeterminateDashColor">#000000</Color>
      <Color x:Key="DropdownBorderColor">#ff404040</Color>
      <Color x:Key="DropdownSeparatorColor">#ff404040</Color>
      <Color x:Key="DropdownFillColor">#000000</Color>
      <Color x:Key="DropdownPopupFillColor">#000000</Color>
      <Color x:Key="DropdownPopupHoverColor">#FAFAFA</Color>
      <Color x:Key="DropdownTextColor">#ff717171</Color>
      <Color x:Key="DropdownSelectedFillColor">#1592E6</Color>
      <Color x:Key="DropdownSelectedHoverColor">#1592E6</Color>
      <Color x:Key="DropdownSelectedTextColor">#FFFFFF</Color>
      <Color x:Key="DropdownDisabledColor">#ffc0c0c0</Color>
      <x:Double x:Key="DropdownDisabledImageOpacity">0.7</x:Double>
      <Color x:Key="InteractionBorderColor">#000000</Color>
      <Color x:Key="InteractionBackgroundColor">#000000</Color>
      <Color x:Key="ArtboardListHoverColor">#EEEEEE</Color>
      <Color x:Key="AppMenuListItemOverColor">#000000</Color>
      <Color x:Key="TooltipBackgroundColor">#ff717171</Color>
      <Color x:Key="DropAreaBackgroundColor">#1592E6</Color>
      <Color x:Key="HighlightedButtonColor">#009D00</Color>
      <Color x:Key="CircularProgressBarColor">#09A4EB</Color>
      <Color x:Key="ComboboxItemBackgroundHover">#000000</Color>
      <Color x:Key="ComboboxItemForegroundHover">#000000</Color>
      <Color x:Key="ComboboxItemForegroundSelected">#1592E6</Color>
      <Color x:Key="LayerPanelTextHighlightColor">#1592E6</Color>
      <Color x:Key="LayerPanelEditTextBackgroundColor">#000000</Color>
    </ResourceDictionary>
  </ResourceDictionary.ThemeDictionaries>
  <res:SpCustomResourceInitializer x:Key="CustomResource"></res:SpCustomResourceInitializer>
  <x:Double x:Key="ApplicationMinWidth">500</x:Double>
  <x:Double x:Key="ApplicationMinHeight">492</x:Double>
  <x:Double x:Key="ApplicationStartWidth">1104</x:Double>
  <x:Double x:Key="ApplicationStartHeight">752</x:Double>
  <x:Double x:Key="TitlebarHeight">32</x:Double>
  <x:Double x:Key="TitlebarWidth">132</x:Double>
  <x:Double x:Key="ToolbarWidth">50</x:Double>
  <x:Double x:Key="SliderTrackThemeHeight">2</x:Double>
  <GridLength x:Key="SliderTrackThemeGridLength">2</GridLength>
  <x:Double x:Key="AppMenuBarHeight">40</x:Double>
  <x:Double x:Key="AppMenuListItemHeight">40</x:Double>
  <Thickness x:Key="AppMenuSeparatorPadding">10,10,10,10</Thickness>
  <Thickness x:Key="AppMenuSeparatorBorderThickness">0,0,0,1</Thickness>
  <x:Double x:Key="TextSize_Symbol">16</x:Double>
  <SolidColorBrush x:Key="FocusBrush" Color="{ThemeResource SystemAccentColor}"></SolidColorBrush>
  <Thickness x:Key="FocusThickness">2,2,2,2</Thickness>
  <CornerRadius x:Key="FocusCornerRadius">3,3,3,3</CornerRadius>
  <Thickness x:Key="FocusOffset">0</Thickness>
  <SolidColorBrush x:Key="TextSelectionHighlightColorThemeBrush" Color="{ThemeResource LayerPanelTextHighlightColor}"></SolidColorBrush>
  <FontFamily x:Key="ContentControlThemeFontFamily">Segoe UI</FontFamily>
  <x:Double x:Key="ControlContentThemeFontSizeSmall">10</x:Double>
  <x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
  <x:Double x:Key="ControlContentThemeFontSizeLarge">13</x:Double>
  <FontWeight x:Key="ControlContentThemeFontWeight">Normal</FontWeight>
  <SolidColorBrush x:Key="ControlContentThemeFontForeground" Color="{ThemeResource ForegroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="ControlContentThemeFontForegroundDisabled" Color="{ThemeResource DropdownDisabledColor}"></SolidColorBrush>
  <x:String x:Key="ControlRadius">5,5,5,5</x:String>
  <x:Double x:Key="AppMenuWidth">286</x:Double>
  <x:Double x:Key="AppSubMenuWidth">240</x:Double>
  <x:Double x:Key="SpTextBoxHeight">32</x:Double>
  <SolidColorBrush x:Key="SystemControlForegroundBaseHighBrush" Color="{ThemeResource ForegroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SystemControlPageTextChromeBlackMediumLowBrush" Color="{ThemeResource ForegroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SystemControlDisabledChromeDisabledLowBrush" Color="{ThemeResource LabelColor}"></SolidColorBrush>
  <Color x:Key="SpectrumGreen1">#0F996D</Color>
  <Color x:Key="SpectrumRed1">#E44853</Color>
  <Color x:Key="SpectrumBlue2">#1473E6</Color>
  <Color x:Key="SpectrumGray1">#ffa2a2a2</Color>
  <Color x:Key="StaticWhite">#FFFFFF</Color>
  <Color x:Key="StaticBlue500">#2680EB</Color>
  <Color x:Key="StaticBlue600">#1473E6</Color>
  <Color x:Key="StaticBlue700">#0D66D0</Color>
  <Color x:Key="Gray200">#EAEAEA</Color>
  <Color x:Key="Gray300">#E1E1E1</Color>
  <Color x:Key="Gray500">#ffe5e5e5</Color>
  <Color x:Key="Gray900">#000000</Color>
  <SolidColorBrush x:Key="TextBoxLabelColorBrush" Color="{ThemeResource LabelColor}"></SolidColorBrush>
  <x:Double x:Key="TextBoxLabelFontSize">10</x:Double>
  <FontWeight x:Key="TextBoxLabelFontWeight">Normal</FontWeight>
  <FontWeight x:Key="TextBoxFontWeight">Normal</FontWeight>
  <FontStyle x:Key="PlaceholderTextBoxFontStyle">Italic</FontStyle>
  <SolidColorBrush x:Key="TextBoxBorderColorBrush" Color="{ThemeResource BorderColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="TextBoxPlaceholderForegroundColorBrush" Color="{ThemeResource PlaceholderForegroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="TextBoxActiveBorderColorBrush" Color="{ThemeResource SystemAccentColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumTextBoxErrorBorderBrush" Color="{StaticResource SpectrumRed1}"></SolidColorBrush>
  <Thickness x:Key="TextBoxSpectrumStandardStyleBorderThickness">1</Thickness>
  <Thickness x:Key="TextBoxSpectrumNoneAppearanceStyleBorderThickness">0</Thickness>
  <x:Double x:Key="TextBoxSpectrumNoneAppearanceStyleMinHeight">0</x:Double>
  <Thickness x:Key="TextBoxSpectrumQuietStyleBorderThickness">0,0,0,1</Thickness>
  <Thickness x:Key="TextBoxSpectrumStyleBorderMargin">0</Thickness>
  <CornerRadius x:Key="TextBoxSpectrumStandardStyleBorderCornerRadius">4</CornerRadius>
  <Thickness x:Key="TextBoxSpectrumStandardStyleContentPadding">12,8,12,8</Thickness>
  <Thickness x:Key="TextBoxSpectrumQuietStyleContentPadding">0,8,0,8</Thickness>
  <Thickness x:Key="TextBoxSpectrumNoneAppearanceStyleContentPadding">0</Thickness>
  <Thickness x:Key="TextBoxSpectrumStyleContentMargin">0</Thickness>
  <SolidColorBrush x:Key="TextBoxActiveContentColorBrush" Color="{ThemeResource ForegroundColor}"></SolidColorBrush>
  <Color x:Key="DropdownFocusBorderColor">#1592E6</Color>
  <Color x:Key="SpDropdownUnfocusedBorderColor">#ff393939</Color>
  <x:Double x:Key="SpDropdownLabelFontSize">10</x:Double>
  <x:Double x:Key="SpDropdownFontSize">12</x:Double>
  <FontWeight x:Key="SpDropdownFontWeight">Normal</FontWeight>
  <Thickness x:Key="SpDropdownBorderTickness">1</Thickness>
  <x:Double x:Key="SpDropdownFocusSize">2</x:Double>
  <Thickness x:Key="SpDropdownFocusThickness">2</Thickness>
  <Thickness x:Key="SpDropdownFocusBarThickness">2,0,0,0</Thickness>
  <CornerRadius x:Key="SpDropdownBorderRadius">4</CornerRadius>
  <CornerRadius x:Key="SpDropdownOpenBorderRadius">4,4,0,0</CornerRadius>
  <CornerRadius x:Key="SpDropdownOpenUpBorderRadius">0,0,4,4</CornerRadius>
  <CornerRadius x:Key="SpDropdownOpenListBorderRadius">0,0,4,4</CornerRadius>
  <CornerRadius x:Key="SpDropdownOpenListUpBorderRadius">4,4,0,0</CornerRadius>
  <x:Double x:Key="SpDropdownSeparatorThickness">1</x:Double>
  <Thickness x:Key="SpDropdownSeparatorBorderThickness">1</Thickness>
  <Thickness x:Key="SpDropdownSeparatorPadding">0,8,0,8</Thickness>
  <x:Double x:Key="SpDropdownHeight">32</x:Double>
  <x:Double x:Key="SpDropdownMinWidth">208</x:Double>
  <Thickness x:Key="SpDropdownMainPadding">16,0,0,0</Thickness>
  <Thickness x:Key="SpDropdownItemPadding">11,0,32,0</Thickness>
  <Thickness x:Key="SpDropdownLabelPadding">0,0,0,6</Thickness>
  <GridLength x:Key="SpDropdownGridSize">32</GridLength>
  <Thickness x:Key="SpDropdownGlyphPadding">11,0,0,0</Thickness>
  <TranslateTransform x:Key="SpEditableDropdownGlyphTranslation" X="12" Y="0"></TranslateTransform>
  <Thickness x:Key="SpDropdownListItemPadding">12,11,8,13</Thickness>
  <SolidColorBrush x:Key="SpDropdownBorderBrush" Color="{ThemeResource DropdownBorderColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownSeparatorBrush" Color="{ThemeResource DropdownSeparatorColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownFillBrush" Color="{ThemeResource DropdownPopupFillColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownPopupFillBrush" Color="{ThemeResource DropdownPopupFillColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownPopupHoverBrush" Color="{ThemeResource DropdownPopupHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownTextBrush" Color="{ThemeResource DropdownTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownSelectedFillBrush" Color="{ThemeResource DropdownSelectedFillColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownSelectedHoverBrush" Color="{ThemeResource DropdownSelectedHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownSelectedTextBrush" Color="{ThemeResource DropdownSelectedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownLabelBrush" Color="{ThemeResource LabelColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownDisabledBrush" Color="{ThemeResource DropdownDisabledColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownFocusBorderBrush" Color="{StaticResource DropdownFocusBorderColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDropdownUnfocusBorderBrush" Color="{StaticResource SpDropdownUnfocusedBorderColor}"></SolidColorBrush>
  <Color x:Key="SpCheckboxFocusColor">#1592E6</Color>
  <Color x:Key="SpCheckBoxNonInteracting">#ff989898</Color>
  <Color x:Key="SpCheckBoxInteracting">#ff717171</Color>
  <x:Double x:Key="SpCheckBoxBorderThemeThickness">2</x:Double>
  <x:Double x:Key="SpCheckBoxBorderRadius">2</x:Double>
  <SolidColorBrush x:Key="SpCheckBoxNonInteractiveBrush" Color="{StaticResource SpCheckBoxNonInteracting}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpCheckBoxInteractiveBrush" Color="{StaticResource SpCheckBoxInteracting}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpCheckBoxUnchecked" Color="White"></SolidColorBrush>
  <SolidColorBrush x:Key="SpCheckBoxFocusBrush" Color="{ThemeResource SpCheckboxFocusColor}"></SolidColorBrush>
  <FontFamily x:Key="SpCheckBoxTextFontFace">Segoe UI Normal</FontFamily>
  <x:Double x:Key="SpCheckBoxFontSize">12</x:Double>
  <x:Double x:Key="SpCheckBoxCheckSize">16</x:Double>
  <x:Double x:Key="SpCheckBoxGlyphSize">16</x:Double>
  <x:Double x:Key="SpCheckBoxTransitionPanelSize">12</x:Double>
  <Thickness x:Key="SpInteractionBorderThickness">1</Thickness>
  <CornerRadius x:Key="SpInteractionCornerRadius">4</CornerRadius>
  <CornerRadius x:Key="SpRoundedButtonBorderRadius">16</CornerRadius>
  <SolidColorBrush x:Key="ArtboardListHoverColorBrush" Color="{ThemeResource ArtboardListHoverColor}"></SolidColorBrush>
  <x:Double x:Key="SectionTitleFontSize">10</x:Double>
  <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="ApplicationBackgroundColorBrush" Color="{ThemeResource ApplicationBackgroundColor}"></SolidColorBrush>
  <x:Double x:Key="SliderControlSize">176</x:Double>
  <x:Double x:Key="EyeDropperZoomCursorWidth">120</x:Double>
  <x:Double x:Key="EyeDropperZoomCursorHeight">120</x:Double>
  <x:Double x:Key="EyeDropperZoomBorderInner">58</x:Double>
  <x:Double x:Key="EyeDropperZoomBorderOuter">62</x:Double>
  <x:Double x:Key="EyeDropperZoomBorderConfirmInner">56</x:Double>
  <x:Double x:Key="EyeDropperZoomBorderConfirmOuter">64</x:Double>
  <x:Double x:Key="EyeDropperZoomTouchConfirmHeight">44</x:Double>
  <x:Double x:Key="EyeDropperZoomTouchConfirmSpacing">4</x:Double>
  <x:Double x:Key="EyeDropperZoomCursorControlWidth">128</x:Double>
  <x:Double x:Key="EyeDropperZoomCursorControlHeight">128</x:Double>
  <x:String x:Key="EyeDropperZoomBorderCenter">62,62</x:String>
  <x:Double x:Key="EyeDropperInnerCursorWidth">8</x:Double>
  <x:Double x:Key="EyeDropperInnerCursorHeight">8</x:Double>
  <SolidColorBrush x:Key="PanelBackgroundColorBrush" Color="{ThemeResource PanelBackgroundColor}"></SolidColorBrush>
  <Thickness x:Key="PanelItemMargin">16</Thickness>
  <Thickness x:Key="PanelItemThinMargin">16,0,16,0</Thickness>
  <Thickness x:Key="PanelItemThinBottomMargin">16,0,16,16</Thickness>
  <Thickness x:Key="PanelItemThinTopMargin">16,16,16,0</Thickness>
  <Thickness x:Key="PanelItemThinLeftMargin">16,0,0,0</Thickness>
  <Thickness x:Key="SmallSidesMargin">8,0</Thickness>
  <x:Int32 x:Key="PanelTitleCharacterSpacing">100</x:Int32>
  <x:String x:Key="AnimationDuration">0:0:0.2</x:String>
  <x:Double x:Key="ArtboartTemplateSizeFontSize">10</x:Double>
  <Style x:Key="ZeroHeightPaneSeparator" TargetType="Rectangle">
    <Setter Property="Height" Value="2"></Setter>
    <Setter Property="Margin" Value="0,-2,0,0"></Setter>
    <Setter Property="Fill" Value="{ThemeResource ApplicationBackgroundColorBrush}"></Setter>
  </Style>
  <Style x:Key="InteractionPopoverHorizontalSeparator" TargetType="Rectangle">
    <Setter Property="Height" Value="1"></Setter>
    <Setter Property="Margin" Value="0,0,0,0"></Setter>
    <Setter Property="Fill" Value="{ThemeResource SpDropdownSeparatorBrush}"></Setter>
  </Style>
  <Color x:Key="SpRadioFocusColor">#1592E6</Color>
  <Color x:Key="SpRadioForegroundColor">#ff989898</Color>
  <Color x:Key="SpRadioBackgroundColor">White</Color>
  <x:Double x:Key="SpRadioButtonEllipsSize">16</x:Double>
  <x:Double x:Key="SpRadioButtonEllipsBorderSize">2</x:Double>
  <SolidColorBrush x:Key="SpRadioBackgroundColorBrush" Color="{ThemeResource SpRadioBackgroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpRadioForegroundBrush" Color="{ThemeResource SpRadioForegroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpRadioFocusBrush" Color="{ThemeResource SpRadioFocusColor}"></SolidColorBrush>
  <Color x:Key="SpDialogButtonFocusColor">#1592E6</Color>
  <Color x:Key="SpDialogButtonQuietPrimaryHoverColor">#EAEAEA</Color>
  <Color x:Key="SpDialogButtonQuietPrimaryPressedColor">#ff3c3c3c</Color>
  <Color x:Key="SpDialogButtonQuietPrimaryTextColor">#ff7d7d7d</Color>
  <Color x:Key="SpDialogButtonQuietPrimaryPressedTextColor">#000000</Color>
  <Color x:Key="SpDialogButtonQuietSecondaryHoverColor">#EAEAEA</Color>
  <Color x:Key="SpDialogButtonQuietSecondaryPressedColor">#ff3c3c3c</Color>
  <Color x:Key="SpDialogButtonQuietSecondaryTextColor">#ffa2a2a2</Color>
  <Color x:Key="SpDialogButtonQuietSecondaryPressedTextColor">#ff7d7d7d</Color>
  <Color x:Key="SpDialogButtonQuietDisabledTextColor">#fff4f4f4</Color>
  <Color x:Key="SpDialogButtonQuietWarningHoverColor">#EAEAEA</Color>
  <Color x:Key="SpDialogButtonQuietWarningPressedColor">#ff3c3c3c</Color>
  <Color x:Key="SpDialogButtonQuietWarningTextColor">#CB2030</Color>
  <Color x:Key="SpDialogButtonQuietWarningPressedTextColor">#BB0F22</Color>
  <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryHoverBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryPressedBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryPressedColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryTextBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryPressedTextBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryDisabledBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonQuietDisabledTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryHoverBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryPressedBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryPressedColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryTextBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryPressedTextBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryDisabledBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonQuietDisabledTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietWarningBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietWarningHoverBrush" Color="{ThemeResource SpDialogButtonQuietWarningHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietWarningPressedBrush" Color="{ThemeResource SpDialogButtonQuietWarningPressedColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietWarningTextBrush" Color="{ThemeResource SpDialogButtonQuietWarningTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietWarningPressedTextBrush" Color="{ThemeResource SpDialogButtonQuietWarningPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietWarningDisabledBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonQuietWarningDisabledTextBrush" Color="{ThemeResource SpDialogButtonQuietDisabledTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonFocusBrush" Color="{ThemeResource SpDialogButtonFocusColor}"></SolidColorBrush>
  <Color x:Key="SpDialogButtonPrimaryHoverColor">#ff7d7d7d</Color>
  <Color x:Key="SpDialogButtonPrimaryPressedColor">#000000</Color>
  <Color x:Key="SpDialogButtonPrimaryTextColor">#ff7d7d7d</Color>
  <Color x:Key="SpDialogButtonPrimaryPressedTextColor">#FFFFFF</Color>
  <Color x:Key="SpDialogButtonSecondaryHoverColor">#ffcbcbcb</Color>
  <Color x:Key="SpDialogButtonSecondaryPressedColor">#ffa2a2a2</Color>
  <Color x:Key="SpDialogButtonSecondaryTextColor">#ffa2a2a2</Color>
  <Color x:Key="SpDialogButtonSecondaryPressedTextColor">#FFFFFF</Color>
  <Color x:Key="SpDialogButtonDisabledTextColor">#fff4f4f4</Color>
  <Color x:Key="SpDialogButtonDisabledColor">#ff333333</Color>
  <Color x:Key="SpDialogButtonWarningHoverColor">#CB2030</Color>
  <Color x:Key="SpDialogButtonWarningPressedColor">#BB0F22</Color>
  <Color x:Key="SpDialogButtonWarningTextColor">#CB2030</Color>
  <Color x:Key="SpDialogButtonWarningPressedTextColor">#FFFFFF</Color>
  <SolidColorBrush x:Key="SpDialogButtonPrimaryBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonPrimaryHoverBrush" Color="{ThemeResource SpDialogButtonPrimaryHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonPrimaryPressedBrush" Color="{ThemeResource SpDialogButtonPrimaryPressedColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonPrimaryTextBrush" Color="{ThemeResource SpDialogButtonPrimaryTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonPrimaryPressedTextBrush" Color="{ThemeResource SpDialogButtonPrimaryPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonPrimaryDisabledBrush" Color="{ThemeResource SpDialogButtonDisabledColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonPrimaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonDisabledTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonSecondaryBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonSecondaryHoverBrush" Color="{ThemeResource SpDialogButtonSecondaryHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonSecondaryPressedBrush" Color="{ThemeResource SpDialogButtonSecondaryPressedColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonSecondaryTextBrush" Color="{ThemeResource SpDialogButtonSecondaryTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonSecondaryPressedTextBrush" Color="{ThemeResource SpDialogButtonSecondaryPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonSecondaryDisabledBrush" Color="{ThemeResource SpDialogButtonDisabledColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonSecondaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonDisabledTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonWarningBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonWarningHoverBrush" Color="{ThemeResource SpDialogButtonWarningHoverColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonWarningPressedBrush" Color="{ThemeResource SpDialogButtonWarningPressedColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonWarningTextBrush" Color="{ThemeResource SpDialogButtonWarningTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonWarningPressedTextBrush" Color="{ThemeResource SpDialogButtonWarningPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonWarningDisabledBrush" Color="{ThemeResource SpDialogButtonDisabledColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpDialogButtonWarningDisabledTextBrush" Color="{ThemeResource SpDialogButtonDisabledTextColor}"></SolidColorBrush>
  <FontWeight x:Key="SpDialogBtnPrimaryWeight">Bold</FontWeight>
  <FontWeight x:Key="SpDialogBtnSecondaryWeight">Bold</FontWeight>
  <FontWeight x:Key="SpDialogBtnWarningWeight">Bold</FontWeight>
  <FontFamily x:Key="SpDialogBtnFontFace">Segoe UI</FontFamily>
  <x:Double x:Key="SpDialogBtnFontSize">12</x:Double>
  <x:Double x:Key="SpDialogBtnFontSizeSmall">10</x:Double>
  <x:Double x:Key="SpDialogBtnBorderWidth">2</x:Double>
  <x:Double x:Key="SpDialogBtnMinimumWidth">50</x:Double>
  <x:Double x:Key="SpShareBtnMinimumWidth">80</x:Double>
  <x:Double x:Key="SpShareBtnMaximumWidth">130</x:Double>
  <FontWeight x:Key="SpSpectrumOvalButtonFontWeight">Bold</FontWeight>
  <x:Double x:Key="SpSpectrumOvalButtonFontSize">12</x:Double>
  <x:Double x:Key="SpSpectrumActionButtonBorderThickness">1</x:Double>
  <x:Double x:Key="SpSpectrumActionButtonCornerRadius">4</x:Double>
  <FontWeight x:Key="SpSpectrumActionButtonFontWeight">Normal</FontWeight>
  <FontFamily x:Key="SpSpectrumActionButtonFontFace">Segoe UI</FontFamily>
  <x:Double x:Key="SpSpectrumActionButtonFontSize">12</x:Double>
  <Color x:Key="SpSpectrumActionButtonTextColor">#ff6c6c6c</Color>
  <Color x:Key="SpSpectrumActionButtonPressedTextColor">#000000</Color>
  <Color x:Key="SpSpectrumActionButtonDisabledTextColor">#ffd6d6d6</Color>
  <Color x:Key="SpSpectrumActionButtonBackgroundColor">#000000</Color>
  <Color x:Key="SpSpectrumActionButtonHoverBackgroundColor">#000000</Color>
  <Color x:Key="SpSpectrumActionButtonPressedBackgroundColor">#ff383838</Color>
  <Color x:Key="SpSpectrumActionButtonDisabledBackgroundColor">#ff383838</Color>
  <Color x:Key="SpSpectrumActionButtonBorderColor">#ff434343</Color>
  <Color x:Key="SpSpectrumActionButtonPressedBorderColor">#000000</Color>
  <SolidColorBrush x:Key="SpSpectrumActionButtonTextBrush" Color="{ThemeResource SpSpectrumActionButtonTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonHoverTextBrush" Color="{ThemeResource SpSpectrumActionButtonPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonPressedTextBrush" Color="{ThemeResource SpSpectrumActionButtonPressedTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonDisabledTextBrush" Color="{ThemeResource SpSpectrumActionButtonDisabledTextColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonBackgroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonHoverBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonHoverBackgroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonPressedBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonPressedBackgroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonDisabledBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonDisabledBackgroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonBorderBrush" Color="{ThemeResource SpSpectrumActionButtonBorderColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonHoverBorderBrush" Color="{ThemeResource SpSpectrumActionButtonPressedBorderColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSpectrumActionButtonPressedBorderBrush" Color="{ThemeResource SpSpectrumActionButtonPressedBorderColor}"></SolidColorBrush>
  <Style x:Key="SpSpectrumActionButtonBaseStyle" TargetType="ButtonBase">
    <Setter Property="Background" Value="{ThemeResource ButtonBackground}"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"></Setter>
    <Setter Property="Padding" Value="8,4,8,4"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontWeight" Value="Normal"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="True"></Setter>
    <Setter Property="FocusVisualMargin" Value="-3"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ButtonBase">
          <Grid x:Name="RootGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"></PointerUpThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.HoverBackground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.HoverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.HoverForeground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"></PointerUpThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.PressedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledBackground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledBackground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledTextBrush), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" CornerRadius="{ThemeResource SpSpectrumActionButtonCornerRadius}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Color x:Key="SpSharingRoundedButtonDisabledBackgroundColor">#000000</Color>
  <Color x:Key="SpSharingRoundedButtonDisabledTextColor">#ffeeeeee</Color>
  <Color x:Key="SpSharingRegularButtonDisabledTextColor">#ffe5e5e5</Color>
  <SolidColorBrush x:Key="SpBlueButtonPrimaryHoverBrush" Color="{ThemeResource StaticBlue600}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpBlueButtonPrimaryBackgroundBrush" Color="{ThemeResource StaticBlue500}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpBlueButtonPressedBackgroundBrush" Color="{ThemeResource StaticBlue700}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpLinkButtonPressedBackgroundBrush" Color="{ThemeResource Gray200}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpBlueButtonFocusBackgroundBrush" Color="#FF378EF0"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSharingInviteHyperlinkColor" Color="#1592E6"></SolidColorBrush>
  <SolidColorBrush x:Key="SpSharingInviteHyperlinkUnderlineColor" Color="Transparent"></SolidColorBrush>
  <Style x:Key="SpSpectrumActionButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource SpSpectrumActionButtonBaseStyle}">
    <Setter Property="BorderThickness" Value="{ThemeResource SpSpectrumActionButtonBorderThickness}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpSpectrumActionButtonFontWeight}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpSpectrumActionButtonFontSize}"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource SpSpectrumActionButtonFontFace}"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpSpectrumActionButtonTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverForeground" Value="{ThemeResource SpSpectrumActionButtonHoverTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpSpectrumActionButtonPressedTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpSpectrumActionButtonDisabledTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpSpectrumActionButtonBackgroundBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBackground" Value="{ThemeResource SpSpectrumActionButtonHoverBackgroundBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpSpectrumActionButtonPressedBackgroundBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBackground" Value="{ThemeResource SpSpectrumActionButtonDisabledBackgroundBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpSpectrumActionButtonBorderBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBorderBrush" Value="{ThemeResource SpSpectrumActionButtonHoverBorderBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBorderBrush" Value="{ThemeResource SpSpectrumActionButtonPressedBorderBrush}"></Setter>
  </Style>
  <Style x:Key="SpSpectrumActionButtonQuietStyle" TargetType="ButtonBase" BasedOn="{StaticResource SpSpectrumActionButtonStyle}">
    <Setter Property="Background" Value="{ThemeResource TransparentBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBackground" Value="{ThemeResource TransparentBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBackground" Value="{ThemeResource TransparentBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource TransparentBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBorderBrush" Value="{ThemeResource TransparentBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBorderBrush" Value="{ThemeResource TransparentBrush}"></Setter>
  </Style>
  <Style x:Key="RoundedBlueButtonVisualStatesStyle" TargetType="Button">
    <Setter Property="Foreground" Value="White"></Setter>
    <Setter Property="FontWeight" Value="Bold"></Setter>
    <Setter Property="Padding" Value="16,-2,16,0"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource SpDialogBtnFontFace}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDialogBtnFontSize}"></Setter>
    <Setter Property="MinWidth" Value="{ThemeResource SpDialogBtnMinimumWidth}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="White"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpBlueButtonPrimaryBackgroundBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpBlueButtonPrimaryBackgroundBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpBlueButtonPrimaryHoverBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpBlueButtonPressedBackgroundBrush}"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"></PointerUpThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="HoverBorder.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CustomLabel" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalBorder" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="PressedBorder.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CustomLabel" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverBorder" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalBorder" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpSharingRoundedButtonDisabledBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpSharingRoundedButtonDisabledBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CustomLabel">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpSharingRoundedButtonDisabledTextColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpBlueButtonFocusBackgroundBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpBlueButtonFocusBackgroundBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CustomLabel">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource DialogBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="PressedBorder" Fill="{TemplateBinding corecomponents:SpControlProperties.PressedBackground}" RadiusX="16" RadiusY="16" StrokeThickness="0" Width="Auto" Height="32" Visibility="Collapsed"></Rectangle>
            <Rectangle x:Name="HoverBorder" Fill="{TemplateBinding corecomponents:SpControlProperties.HoverBrush}" RadiusX="16" RadiusY="16" StrokeThickness="0" Width="Auto" Height="32" Visibility="Collapsed"></Rectangle>
            <Rectangle x:Name="NormalBorder" Fill="{TemplateBinding Background}" RadiusX="16" RadiusY="16" StrokeThickness="2" Stroke="{TemplateBinding BorderBrush}" Width="Auto" Height="32"></Rectangle>
            <ContentPresenter x:Name="MainContent" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding corecomponents:SpControlProperties.PressedForeground}" Padding="{TemplateBinding Padding}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"></ContentPresenter>
            <ContentPresenter x:Name="CustomLabel" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"></ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <CornerRadius x:Key="DialogCornerRadius">4</CornerRadius>
  <Color x:Key="ProgressBarForegroundColor">#1592E6</Color>
  <SolidColorBrush x:Key="ProgressBarForegroundBrush" Color="{StaticResource ProgressBarForegroundColor}"></SolidColorBrush>
  <Color x:Key="MenuFlyoutBackgroundColor">#000000</Color>
  <Color x:Key="MenuItemNameDisabledForegroundColor">#ff929292</Color>
  <Color x:Key="MenuItemShortcutDisabledForegroundColor">#ff929292</Color>
  <Color x:Key="MenuItemPointerOverBackgroundColor">#000000</Color>
  <Color x:Key="MenuItemHighlightAltBaseHighBrush">#ff4c4c4c</Color>
  <Color x:Key="MenuSubItemChevronForegroundColor">#FFD1D1D1</Color>
  <Color x:Key="MenuItemSeparatorColor">#000000</Color>
  <Color x:Key="MenuFlyoutBorderBrush">#000000</Color>
  <CornerRadius x:Key="MenuFlyoutCornerRadius">4</CornerRadius>
  <Thickness x:Key="MenuFlyoutBorderThickness">1</Thickness>
  <Color x:Key="TitleMenuFlyoutBackgroundColor">#000000</Color>
  <Color x:Key="TitleMenuItemNameDisabledForegroundColor">#803F3F3F</Color>
  <Color x:Key="TitleMenuItemShortcutDisabledForegroundColor">#808E8E8E</Color>
  <Color x:Key="TitleMenuItemPointerOverBackgroundColor">#2680EB</Color>
  <Color x:Key="TitleMenuItemHighlightAltBaseHighBrush">#FFFFFF</Color>
  <Color x:Key="TitleMenuSubItemChevronForegroundColor">#000000</Color>
  <Color x:Key="TitleMenuItemSeparatorColor">#E1E1E1</Color>
  <Color x:Key="TitleMenuFlyoutBorderBrush">#ff515151</Color>
  <CornerRadius x:Key="TitleMenuFlyoutCornerRadius">1</CornerRadius>
  <Thickness x:Key="TitleMenuFlyoutBorderThickness">0.5</Thickness>
  <Thickness x:Key="TitleMenuFlyoutSeparatorPadding">0</Thickness>
  <Thickness x:Key="TitleMenuFlyoutSubItemGlyphMargin">24,2,0,0</Thickness>
  <Thickness x:Key="TitleMenuToggleFlyoutItemPadding">3,4,11,7</Thickness>
  <Color x:Key="SpScrollbarForegroundColor">#ffc0c0c0</Color>
  <SolidColorBrush x:Key="SpScrollbarForegroundBrush" Color="{StaticResource SpScrollbarForegroundColor}"></SolidColorBrush>
  <x:Double x:Key="SpScrollbarRadius">2</x:Double>
  <CornerRadius x:Key="SpScrollbarTouchThumbRadius">2</CornerRadius>
  <x:Double x:Key="SpScrollbarWidth">4</x:Double>
  <x:String x:Key="SpScrollViewerSeparatorExpandDuration">0</x:String>
  <x:String x:Key="SpScrollViewerSeparatorContractDelay">00:00:01.2</x:String>
  <x:String x:Key="SpScrollViewerSeparatorContractDuration">0</x:String>
  <x:String x:Key="SpScrollViewerSeparatorContractFinalKeyframe">00:00:01.2</x:String>
  <Style TargetType="ToolTip">
    <Setter Property="Placement" Value="Bottom"></Setter>
    <Setter Property="Background" Value="{ThemeResource TooltipBackgroundColor}"></Setter>
  </Style>
  <SolidColorBrush x:Key="TitlebarButtonBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="TitlebarButtonInactiveBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="TitlebarButtonHoverBackgroundBrush" Color="Transparent"></SolidColorBrush>
  <SolidColorBrush x:Key="TitlebarButtonHoverForegroundBrush" Color="#000000"></SolidColorBrush>
  <SolidColorBrush x:Key="TitlebarButtonPressedBackgroundBrush" Color="#CCCCCC"></SolidColorBrush>
  <SolidColorBrush x:Key="TitlebarButtonPressedForegroundBrush" Color="#000000"></SolidColorBrush>
  <SolidColorBrush x:Key="TitlebarButtonForegroundBrush" Color="#2D2D2D"></SolidColorBrush>
  <SolidColorBrush x:Key="UiTextBrush" Color="{ThemeResource UiTextColour}"></SolidColorBrush>
  <SolidColorBrush x:Key="UiTextLightBrush" Color="{ThemeResource UiTextColourLight}"></SolidColorBrush>
  <SolidColorBrush x:Key="UiChromeBrush" Color="{ThemeResource UiChromeColour}"></SolidColorBrush>
  <SolidColorBrush x:Key="SelectedBorderBrush" Color="{ThemeResource SelectedBorder}"></SolidColorBrush>
  <SolidColorBrush x:Key="HoverBorderBrush" Color="{ThemeResource HoverBorder}"></SolidColorBrush>
  <SolidColorBrush x:Key="UiBackgroundBrush" Color="{ThemeResource UiBackgroundColour}"></SolidColorBrush>
  <SolidColorBrush x:Key="BtnBackgroundBrush" Color="{ThemeResource BtnBackground}"></SolidColorBrush>
  <SolidColorBrush x:Key="BtnLightByBackgroundBrush" Color="{ThemeResource BtnLightByBackground}"></SolidColorBrush>
  <SolidColorBrush x:Key="BtnDarkByBackgroundBrush" Color="{ThemeResource BtnDarkByBackground}"></SolidColorBrush>
  <SolidColorBrush x:Key="BtnSelectedForegroundBrush" Color="{ThemeResource BtnSelectedForeground}"></SolidColorBrush>
  <SolidColorBrush x:Key="DefaultAccentBrush" Color="{ThemeResource SystemAccentColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="DefaultDisabledBrush" Color="{ThemeResource ToolDisabledColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="DropAreaBackgroundBrush" Color="{ThemeResource DropAreaBackgroundColor}" Opacity="0.1"></SolidColorBrush>
  <SolidColorBrush x:Key="DropAreaForegroundBrush" Color="{ThemeResource DropAreaBackgroundColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="HighlightedButtonBrush" Color="{ThemeResource HighlightedButtonColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="CircularProgressBarBrush" Color="{ThemeResource CircularProgressBarColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="ControlNormalFillColorBrush" Color="{ThemeResource ControlNormalFillColor}"></SolidColorBrush>
  <SolidColorBrush x:Key="ControlDisabledFillColorBrush" Color="{ThemeResource ControlDisabledFillColor}"></SolidColorBrush>
  <Style TargetType="components:SpTitlebar">
    <Setter Property="Height" Value="{ThemeResource TitlebarHeight}"></Setter>
  </Style>
  <Style x:Key="TitleBarStyle" TargetType="RelativePanel">
    <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}"></Setter>
    <Setter Property="BorderThickness" Value="0,0,0,2"></Setter>
  </Style>
  <Style x:Key="TitlebarThemeSwitcherStyle" TargetType="StackPanel">
    <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"></Setter>
    <Setter Property="Orientation" Value="Horizontal"></Setter>
    <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
  </Style>
  <Style x:Key="ListHeaderStyle" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{StaticResource TextBoxLabelFontSize}"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource UiTextColourLight}"></Setter>
    <Setter Property="Padding" Value="16 20 20 25"></Setter>
  </Style>
  <Style x:Key="PaneContainerStyle" TargetType="StackPanel">
    <Setter Property="Orientation" Value="Vertical"></Setter>
  </Style>
  <Style x:Key="PropertyPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}"></Setter>
    <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
  </Style>
  <Style x:Key="TextPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}"></Style>
  <Style x:Key="AppearancePaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}"></Style>
  <Style x:Key="EffectsPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}"></Style>
  <Style x:Key="FillsPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}"></Style>
  <Style x:Key="StrokesPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}"></Style>
  <Style x:Key="ResizeConstraintsPaneStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}"></Style>
  <Style x:Key="PaddingPaneStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}"></Style>
  <Color x:Key="SpColorLayerItemText">#ff717171</Color>
  <Color x:Key="SpColorLayerRowInEditContext">#FFFFFF</Color>
  <SolidColorBrush x:Key="SpBrushLayerRowHiglightHovered" Color="#EAF7FF"></SolidColorBrush>
  <SolidColorBrush x:Key="SpBrushLayerRowHiglightPressed" Color="#EAF7FF"></SolidColorBrush>
  <SolidColorBrush x:Key="SpBrushLayerRowHiglightSelected" Color="#E0F0FA"></SolidColorBrush>
  <SolidColorBrush x:Key="SpBrushLayerRowHiglightSelectedHovered" Color="#E0F0FA"></SolidColorBrush>
  <SolidColorBrush x:Key="SpBrushLayerRowHiglightSelectedPressed" Color="#E0F0FA"></SolidColorBrush>
  <SolidColorBrush x:Key="SystemControlBackgroundChromeWhiteBrush" Color="#00FFFFFF" Opacity="0"></SolidColorBrush>
  <SolidColorBrush x:Key="SystemControlBackgroundAccentBrush" Color="{ThemeResource DropAreaBackgroundColor}"></SolidColorBrush>
  <Style x:Key="CaptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
    <Setter Property="FontSize" Value="12"></Setter>
    <Setter Property="FontWeight" Value="Normal"></Setter>
    <Setter Property="Foreground" Value="#FFFFFF"></Setter>
  </Style>
  <Style x:Key="PropertyPaneStyle" TargetType="StackPanel">
    <Setter Property="BorderBrush" Value="{StaticResource ApplicationBackgroundColorBrush}"></Setter>
    <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
  </Style>
  <CornerRadius x:Key="ColorControlCornerRadii">3,3,3,3</CornerRadius>
  <x:Double x:Key="ColorControlCornerRadius">3</x:Double>
  <Style TargetType="components:SpGradientEditor">
    <Setter Property="Height" Value="16"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="components:SpGradientEditor">
          <Grid Name="Body">
            <Rectangle Name="BackgroundRectangle" RadiusX="{StaticResource ColorControlCornerRadius}" RadiusY="{StaticResource ColorControlCornerRadius}">
              <Rectangle.Fill>
                <ImageBrush ImageSource="ms-appx:///SP_OpacityBg_Sm.png" Stretch="None" AlignmentX="Center" AlignmentY="Bottom"></ImageBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Name="GradientRectangle" RadiusX="{StaticResource ColorControlCornerRadius}" RadiusY="{StaticResource ColorControlCornerRadius}" Fill="#FF0000"></Rectangle>
            <Canvas Name="ThumbContainer"></Canvas>
            <Border x:Name="Border" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
              <Border.BorderBrush>
                <SolidColorBrush Opacity="0.08" Color="#000000"></SolidColorBrush>
              </Border.BorderBrush>
              <Border x:Name="BorderShadow" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                <Border.BorderBrush>
                  <SolidColorBrush Opacity="0.02" Color="#000000"></SolidColorBrush>
                </Border.BorderBrush>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="components:SpSuperSliderControl">
    <Setter Property="Width" Value="16"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="components:SpSuperSliderControl">
          <Grid Name="Body">
            <Rectangle Name="BackgroundRectangle" RadiusX="{StaticResource ColorControlCornerRadius}" RadiusY="{StaticResource ColorControlCornerRadius}" Fill="{TemplateBinding Background}"></Rectangle>
            <Rectangle RadiusX="{StaticResource ColorControlCornerRadius}" RadiusY="{StaticResource ColorControlCornerRadius}" Fill="{TemplateBinding Foreground}"></Rectangle>
            <ContentPresenter Content="{TemplateBinding Thumb}"></ContentPresenter>
            <Border x:Name="Border" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
              <Border.BorderBrush>
                <SolidColorBrush Opacity="0.08" Color="#000000"></SolidColorBrush>
              </Border.BorderBrush>
              <Border x:Name="BorderShadow" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                <Border.BorderBrush>
                  <SolidColorBrush Opacity="0.02" Color="#000000"></SolidColorBrush>
                </Border.BorderBrush>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="components:SpColorPickerControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="components:SpColorPickerControl">
          <Grid Name="Body">
            <Image Name="SelectedHueColor" Width="{ThemeResource SliderControlSize}" Height="{ThemeResource SliderControlSize}"></Image>
            <Canvas>
              <ContentPresenter Content="{TemplateBinding Thumb}" Name="SampleSelector"></ContentPresenter>
            </Canvas>
            <Border x:Name="Border" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
              <Border.BorderBrush>
                <SolidColorBrush Opacity="0.08" Color="#000000"></SolidColorBrush>
              </Border.BorderBrush>
              <Border x:Name="BorderShadow" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                <Border.BorderBrush>
                  <SolidColorBrush Opacity="0.02" Color="#000000"></SolidColorBrush>
                </Border.BorderBrush>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="components:SpColorSliderThumb">
    <Setter Property="Height" Value="16"></Setter>
    <Setter Property="Width" Value="16"></Setter>
    <Setter Property="MinWidth" Value="16"></Setter>
    <Setter Property="IsTabStop" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="components:SpColorSliderThumb">
          <Grid Height="16" Width="16">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup>
                <VisualState x:Name="Selected"></VisualState>
                <VisualState x:Name="Unselected">
                  <VisualState.Setters>
                    <Setter Target="MainThumb.Fill" Value="White"></Setter>
                    <Setter Target="MainThumb.Margin" Value="3"></Setter>
                    <Setter Target="OuterBorder.Margin" Value="1"></Setter>
                    <Setter Target="OuterBorder.StrokeThickness" Value="2"></Setter>
                    <Setter Target="InnerBorder.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse Name="MainThumb" StrokeThickness="2" Stroke="White" Margin="1"></Ellipse>
            <Ellipse Name="OuterBorder" Stroke="#FF000000" Opacity="0.2"></Ellipse>
            <Ellipse Name="InnerBorder" Stroke="#FF000000" Opacity="0.2" Margin="3"></Ellipse>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="components:SpButton" x:Key="DefaultSpButtonStyle">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.IconOpacity" Value="1"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="0,0,0,0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledOpacity" Value="{ThemeResource ControlDisabledOpacity}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}"></Setter>
    <Setter Property="FontWeight" Value="Normal"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Padding="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusRing.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{Binding Path=(corecomponents:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.IconPressed), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledOpacity), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="RootContainer" Margin="{TemplateBinding Padding}">
              <components:SpIcon x:Name="buttonIcon" Icon="{Binding Path=(corecomponents:SpControlProperties.Icon),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding Path=(corecomponents:SpControlProperties.IconOpacity), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></components:SpIcon>
              <Line Width="{Binding Path=(corecomponents:SpControlProperties.Spacing),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Height="0"></Line>
              <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" AutomationProperties.AccessibilityView="Raw"></ContentPresenter>
            </StackPanel>
            <Border x:Name="FocusRing" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="False" Visibility="Collapsed" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(corecomponents:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="EmptyButtonStyle" TargetType="components:SpButton">
    <Setter Property="BorderThickness" Value="0"></Setter>
    <Setter Property="BorderBrush" Value="Transparent"></Setter>
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="Margin" Value="0"></Setter>
    <Setter Property="Padding" Value="0"></Setter>
  </Style>
  <Style x:Key="RoundedButtonStyle" TargetType="Button">
    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    <Setter Property="Height" Value="32"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource UiTextBrush}"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="buttonBorder.Background" Value="Transparent"></Setter>
                    <Setter Target="buttonBorder.BorderThickness" Value="2"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="buttonBorder.Background" Value="Transparent"></Setter>
                    <Setter Target="buttonBorder.BorderThickness" Value="2"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="buttonBorder.Background" Value="{ThemeResource UiTextBrush}"></Setter>
                    <Setter Target="buttonText.Foreground" Value="{ThemeResource InteractionBackgroundColor}"></Setter>
                    <Setter Target="buttonBorder.BorderThickness" Value="0"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="buttonBorder.Background" Value="{StaticResource BtnBackgroundBrush}"></Setter>
                    <Setter Target="buttonBorder.BorderThickness" Value="2"></Setter>
                    <Setter Target="buttonBorder.BorderBrush" Value="{StaticResource ApplicationBackgroundColorBrush}"></Setter>
                    <Setter Target="buttonText.Foreground" Value="{StaticResource ToolDisabledColor}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border CornerRadius="{StaticResource SpRoundedButtonBorderRadius}" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" x:Name="buttonBorder">
              <TextBlock TextAlignment="Center" VerticalAlignment="Center" Margin="{StaticResource SmallSidesMargin}" FontSize="{ThemeResource ControlContentThemeFontSize}" FontFamily="{ThemeResource ContentControlThemeFontFamily}" Foreground="{Binding Path=Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" x:Name="buttonText"></TextBlock>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate TargetType="ScrollViewer" x:Key="ScrollViewerTemplate">
    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="ScrollingIndicatorStates">
          <VisualStateGroup.Transitions>
            <VisualTransition From="MouseIndicator" To="NoIndicator">
              <Storyboard>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
            </VisualTransition>
            <VisualTransition From="MouseIndicatorFull" To="NoIndicator">
              <Storyboard>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScrollBarSeparator" Storyboard.TargetProperty="Opacity">
                  <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDuration}" Value="1"></LinearDoubleKeyFrame>
                  <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}" Value="1"></LinearDoubleKeyFrame>
                  <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractFinalKeyframe}" Value="0"></LinearDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
            </VisualTransition>
            <VisualTransition From="MouseIndicatorFull" To="MouseIndicator">
              <Storyboard>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScrollBarSeparator" Storyboard.TargetProperty="Opacity">
                  <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDuration}" Value="1"></LinearDoubleKeyFrame>
                  <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}" Value="1"></LinearDoubleKeyFrame>
                  <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractFinalKeyframe}" Value="0"></LinearDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
            </VisualTransition>
            <VisualTransition From="TouchIndicator" To="NoIndicator">
              <Storyboard>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                      <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                    </DiscreteObjectKeyFrame.Value>
                  </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="NoIndicator">
            <Storyboard>
              <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorContractDuration}" Storyboard.TargetName="ScrollBarSeparator" Storyboard.TargetProperty="Opacity" To="0"></DoubleAnimation>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="TouchIndicator">
            <Storyboard>
              <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorContractDuration}" Storyboard.TargetName="ScrollBarSeparator" Storyboard.TargetProperty="Opacity" To="0"></DoubleAnimation>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="MouseIndicator">
            <Storyboard>
              <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorContractDuration}" Storyboard.TargetName="ScrollBarSeparator" Storyboard.TargetProperty="Opacity" To="0"></DoubleAnimation>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="MouseIndicatorFull">
            <Storyboard>
              <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorExpandDuration}" Storyboard.TargetName="ScrollBarSeparator" Storyboard.TargetProperty="Opacity" To="1"></DoubleAnimation>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid Background="{TemplateBinding Background}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"></ColumnDefinition>
          <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"></RowDefinition>
          <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <ScrollContentPresenter x:Name="ScrollContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" Grid.RowSpan="2"></ScrollContentPresenter>
        <Grid Grid.ColumnSpan="2" Grid.RowSpan="2"></Grid>
        <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" HorizontalAlignment="Right" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource SpScrollBar}"></ScrollBar>
        <ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource SpScrollBar}"></ScrollBar>
        <Border x:Name="ScrollBarSeparator" Background="{ThemeResource ScrollViewerScrollBarSeparatorBackground}" Grid.Column="1" Grid.Row="1"></Border>
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="FocusCaptureScrollViewerStyle" TargetType="ScrollViewer">
    <Setter Property="FocusVisualPrimaryThickness" Value="0"></Setter>
    <Setter Property="FocusVisualSecondaryThickness" Value="0"></Setter>
    <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}"></Setter>
    <Setter Property="utils:SpFocusManager.IsFocusCaptureEnabled" Value="True"></Setter>
  </Style>
  <Style x:Key="FocusCaptureContentControlStyle" TargetType="ContentControl">
    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
    <Setter Property="utils:SpFocusManager.IsFocusCaptureEnabled" Value="True"></Setter>
  </Style>
  <Style x:Key="NoScrollFocusCaptureScrollViewerStyle" TargetType="ScrollViewer" BasedOn="{StaticResource FocusCaptureScrollViewerStyle}">
    <Setter Property="VerticalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="HorizontalScrollMode" Value="Disabled"></Setter>
    <Setter Property="VerticalScrollMode" Value="Disabled"></Setter>
  </Style>
  <Style x:Key="ToolbarContainerStyle" TargetType="ScrollViewer" BasedOn="{StaticResource NoScrollFocusCaptureScrollViewerStyle}">
    <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}"></Setter>
    <Setter Property="BorderThickness" Value="0,0,2,0"></Setter>
    <Setter Property="Width" Value="{ThemeResource ToolbarWidth}"></Setter>
    <Setter Property="Padding" Value="4"></Setter>
  </Style>
  <Style x:Key="PIScrollViewerStyle" TargetType="ScrollViewer">
    <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}"></Setter>
    <Setter Property="BorderThickness" Value="2,0,0,0"></Setter>
    <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}"></Setter>
    <Setter Property="FocusVisualPrimaryThickness" Value="0"></Setter>
    <Setter Property="FocusVisualSecondaryThickness" Value="0"></Setter>
  </Style>
  <Style x:Key="panelSplitter" TargetType="Grid">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="Width" Value="4"></Setter>
    <Setter Property="HorizontalAlignment" Value="Right"></Setter>
    <Setter Property="BorderThickness" Value="0 0 2 0"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}"></Setter>
  </Style>
  <Style TargetType="components:SpTextBox">
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
  </Style>
  <Style x:Key="ListViewNoAnimationStyle" TargetType="ListView">
    <Setter Property="ItemContainerTransitions">
      <Setter.Value>
        <TransitionCollection></TransitionCollection>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpToggleButtonBaseStyle" TargetType="components:SpToggleButton">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="Padding" Value="8,8,8,8"></Setter>
    <Setter Property="Foreground" Value="Transparent"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColorBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledOpacity" Value="{ThemeResource ControlDisabledOpacity}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.Spacing" Value="0"></Setter>
    <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontWeight" Value="Normal"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="components:SpToggleButton">
          <Grid x:Name="RootGrid" UseLayoutRounding="False" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusRing.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="RootGrid.Background" Value="{Binding Path=(corecomponents:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledOpacity), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Opacity" Value="1"></Setter>
                    <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="RootGrid.Background" Value="{Binding Path=(corecomponents:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.IconPressed), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unchecked"></VisualState>
                <VisualState x:Name="Indeterminate"></VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="ContentPresenter.Opacity" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledOpacity), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                    <Setter Target="buttonIcon.Icon" Value="{Binding Path=(corecomponents:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Pressed" To="Normal">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Icon" Storyboard.TargetName="buttonIcon">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Pressed" To="PointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Icon" Storyboard.TargetName="buttonIcon">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel x:Name="ContentBox" Orientation="Horizontal" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center">
              <components:SpIcon x:Name="buttonIcon" Icon="{Binding Path=(corecomponents:SpControlProperties.Icon),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></components:SpIcon>
              <Line Width="{Binding Path=(corecomponents:SpControlProperties.Spacing),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Height="0"></Line>
              <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw"></ContentPresenter>
            </StackPanel>
            <Grid x:Name="badgeGridWithText" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="2" x:DeferLoadStrategy="Lazy">
              <Rectangle x:Name="badgeRect" Width="19" Height="19" Fill="{ThemeResource StaticBlue500}" Stroke="{ThemeResource Grey3}" StrokeThickness="1" RadiusX="9.5" RadiusY="9.5"></Rectangle>
              <TextBlock x:Name="badge" Text="" FontFamily="SpDialogBtnFontFace" FontSize="11" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
            </Grid>
            <Grid x:Name="badgeGrid" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="8" x:DeferLoadStrategy="Lazy">
              <Ellipse Width="10" Height="10" Fill="{ThemeResource StaticBlue500}" Stroke="{ThemeResource Grey3}" StrokeThickness="1"></Ellipse>
            </Grid>
            <Border x:Name="FocusRing" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="False" Visibility="Collapsed" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(corecomponents:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpToggleButtonQuietStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleButtonBaseStyle}">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.BorderThickness" Value="0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="3,3,3,3"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="3,3,3,3"></Setter>
    <Setter Property="Height" Value="32"></Setter>
    <Setter Property="Width" Value="32"></Setter>
  </Style>
  <Style x:Key="SpToggleButtonRoundedStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleButtonBaseStyle}">
    <Setter Property="Background" Value="{ThemeResource BtnBackgroundBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource BtnBackgroundBrush}"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"></Setter>
    <Setter Property="Padding" Value="7.5,7.5,7.5,7.5"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="3,3,3,3"></Setter>
    <Setter Property="corecomponents:SpControlProperties.BorderThickness" Value="1,1,1,1"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="3,3,3,3"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="-1,-1,-1,-1"></Setter>
  </Style>
  <Style x:Key="SpToggleMiddleButtonStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleButtonRoundedStyle}">
    <Setter Property="Padding" Value="7.5,7,7.5,7"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="0,0,0,0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.BorderThickness" Value="0.5,1,0.5,1"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="0,0,0,0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="-0.5,-1,-0.5,-1"></Setter>
  </Style>
  <Style x:Key="SpToggleFirstButtonStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleMiddleButtonStyle}">
    <Setter Property="Margin" Value="0"></Setter>
    <Setter Property="Padding" Value="7,7,7.5,7"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="3,0,0,3"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="3,0,0,3"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="-1,-1,-0.5,-1"></Setter>
    <Setter Property="corecomponents:SpControlProperties.BorderThickness" Value="1,1,0.5,1"></Setter>
  </Style>
  <Style x:Key="SpToggleLastButtonStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleMiddleButtonStyle}">
    <Setter Property="Padding" Value="7.5,7,7,7"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="0,3,3,0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="0,3,3,0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="-0.5,-1,-1,-1"></Setter>
    <Setter Property="corecomponents:SpControlProperties.BorderThickness" Value="0.5,1,1,1"></Setter>
  </Style>
  <components:SpToggleButtonStyleSelector x:Key="SpToggleItemSelector" standardStyle="{StaticResource SpToggleMiddleButtonStyle}" firstButtonStyle="{StaticResource SpToggleFirstButtonStyle}" lastButtonStyle="{StaticResource SpToggleLastButtonStyle}"></components:SpToggleButtonStyleSelector>
  <Style TargetType="components:SpProgressBar">
    <Setter Property="Foreground" Value="{ThemeResource SystemControlHighlightAccentBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource ProgressBarBorderThemeThickness}"></Setter>
    <Setter Property="MinHeight" Value="{ThemeResource ProgressBarThemeMinHeight}"></Setter>
    <Setter Property="IsTabStop" Value="False"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ProgressBar">
          <Grid Background="#FFCFBD36" x:Name="MasterGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Updating" To="Determinate"></VisualTransition>
                  <VisualTransition From="Paused" To="Determinate">
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarDisplay"></DoubleAnimation>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Indeterminate" To="Determinate">
                    <Storyboard>
                      <FadeInThemeAnimation TargetName="EllipseGrid"></FadeInThemeAnimation>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Determinate"></VisualState>
                <VisualState x:Name="Updating"></VisualState>
                <VisualState x:Name="Indeterminate"></VisualState>
                <VisualState x:Name="Error">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarDisplay">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Paused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ProgressBarDisplay">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0:0:0.25" To="{ThemeResource ProgressBarIndicatorPauseOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarDisplay"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="EllipseGrid" Opacity="0"></Grid>
            <Grid x:Name="DeterminateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
              <Grid x:Name="ProgressBarDisplay" Background="{TemplateBinding Foreground}"></Grid>
              <Rectangle x:Name="ProgressBarIndicator" Fill="Transparent" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"></Rectangle>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpCheckBox" TargetType="CheckBox">
    <Setter Property="Padding" Value="12,0,0,0"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource SpCheckBoxTextFontFace}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpCheckBoxFontSize}"></Setter>
    <Setter Property="MinWidth" Value="120"></Setter>
    <Setter Property="MinHeight" Value="16"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="RootGrid" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
              <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CombinedStates">
                <VisualState x:Name="UncheckedNormal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxUnchecked}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UncheckedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxUnchecked}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UncheckedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UncheckedDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootGrid">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedNormal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootGrid">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminateNormal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminatePointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminatePressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndeterminateDisabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootGrid">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="UncheckedPointerOver" To="UncheckedPressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="UncheckedNormal" To="UncheckedPressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="UncheckedPressed" To="UncheckedNormal">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteractiveBrush}"></DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="CheckedPointerOver" To="UncheckedPointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{ThemeResource SpCheckBoxUnchecked}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="CheckedPointerOver" To="IndeterminatePointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="IndeterminatePointerOver" To="UncheckedPointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"></DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"></DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{ThemeResource SpCheckBoxUnchecked}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusComponents">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NonFocusComponents">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusedPressed"></VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="NonFocusComponents" Height="Auto" VerticalAlignment="Center">
              <Rectangle x:Name="NormalRectangle" Fill="{TemplateBinding Background}" Height="{StaticResource SpCheckBoxCheckSize}" Stroke="{ThemeResource SpCheckBoxNonInteractiveBrush}" StrokeThickness="{ThemeResource SpCheckBoxBorderThemeThickness}" RadiusX="{ThemeResource SpCheckBoxBorderRadius}" RadiusY="{ThemeResource SpCheckBoxBorderRadius}" UseLayoutRounding="False" Width="{StaticResource SpCheckBoxCheckSize}" Canvas.ZIndex="300"></Rectangle>
              <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="IndeterminateGlyph" Source="SP_Checkbox_Indeterminate16px.png" RenderTransformOrigin="0.5,0.5" Canvas.ZIndex="400">
                <Image.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Image.RenderTransform>
              </Image>
              <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="CheckGlyph" Source="SP_Checkbox16px.png" RenderTransformOrigin="0.5,0.5" Canvas.ZIndex="400">
                <Image.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Image.RenderTransform>
              </Image>
              <Rectangle x:Name="CheckTransitionRectangle" Fill="{TemplateBinding Background}" Height="{StaticResource SpCheckBoxTransitionPanelSize}" Stroke="Transparent" StrokeThickness="0" Width="{StaticResource SpCheckBoxTransitionPanelSize}" HorizontalAlignment="Center" VerticalAlignment="Center" RadiusX="{ThemeResource SpCheckBoxBorderRadius}" RadiusY="{ThemeResource SpCheckBoxBorderRadius}" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Rectangle.RenderTransform>
              </Rectangle>
            </Grid>
            <Grid x:Name="FocusComponents" Height="Auto" VerticalAlignment="Center" Visibility="Collapsed">
              <Rectangle x:Name="NormalRectangleFocus" Fill="{TemplateBinding Background}" Height="{StaticResource SpCheckBoxCheckSize}" Stroke="{ThemeResource SpCheckBoxFocusBrush}" StrokeThickness="{ThemeResource SpCheckBoxBorderThemeThickness}" RadiusX="{ThemeResource SpCheckBoxBorderRadius}" RadiusY="{ThemeResource SpCheckBoxBorderRadius}" UseLayoutRounding="False" Width="{StaticResource SpCheckBoxCheckSize}"></Rectangle>
              <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="IndeterminateGlyphFocus" Source="SP_Checkbox_Indeterminate16px.png" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Image.RenderTransform>
              </Image>
              <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="CheckGlyphFocus" Source="SP_Checkbox16px.png" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Image.RenderTransform>
              </Image>
              <Rectangle x:Name="CheckTransitionRectangleFocus" Fill="{TemplateBinding Background}" Height="{StaticResource SpCheckBoxTransitionPanelSize}" Stroke="Transparent" StrokeThickness="0" Width="{StaticResource SpCheckBoxTransitionPanelSize}" HorizontalAlignment="Center" VerticalAlignment="Center" RadiusX="{ThemeResource SpCheckBoxBorderRadius}" RadiusY="{ThemeResource SpCheckBoxBorderRadius}" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Rectangle.RenderTransform>
              </Rectangle>
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpRadio" TargetType="RadioButton">
    <Setter Property="Padding" Value="12,0,0,0"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="MinWidth" Value="120"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RadioButton">
          <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="16"></ColumnDefinition>
              <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckOuterEllipse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="1"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="AnimatingInEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="AnimatingInEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ellipses">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions></VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1"></DiscreteDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"></VisualState>
                <VisualState x:Name="Indeterminate"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusedPressed"></VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="ellipses" Height="Auto" VerticalAlignment="Center">
              <Ellipse x:Name="CheckOuterEllipse" Fill="{StaticResource SpRadioForegroundBrush}" Height="{StaticResource SpRadioButtonEllipsSize}" Opacity="0" Stroke="{ThemeResource SpRadioForegroundBrush}" StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}" UseLayoutRounding="False" Width="{StaticResource SpRadioButtonEllipsSize}"></Ellipse>
              <Ellipse x:Name="AnimatingOutEllipse" Width="{StaticResource SpRadioButtonEllipsSize}" Height="{StaticResource SpRadioButtonEllipsSize}" IsHitTestVisible="False" UseLayoutRounding="False" Stroke="Transparent" StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}" Fill="{StaticResource SpRadioBackgroundColorBrush}" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Ellipse.RenderTransform>
              </Ellipse>
              <Ellipse x:Name="CheckGlyph" Fill="{StaticResource SpRadioBackgroundColorBrush}" Height="{StaticResource SpRadioButtonEllipsSize}" Opacity="0" UseLayoutRounding="False" Width="{StaticResource SpRadioButtonEllipsSize}" Stroke="{ThemeResource SpRadioForegroundBrush}" StrokeThickness="5.5"></Ellipse>
              <Ellipse x:Name="AnimatingInEllipse" Width="{StaticResource SpRadioButtonEllipsSize}" Height="{StaticResource SpRadioButtonEllipsSize}" IsHitTestVisible="False" UseLayoutRounding="False" Stroke="Transparent" StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}" Fill="{StaticResource SpRadioBackgroundColorBrush}" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                  <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                </Ellipse.RenderTransform>
              </Ellipse>
              <Ellipse x:Name="OuterEllipse" Height="{StaticResource SpRadioButtonEllipsSize}" Stroke="{ThemeResource SpRadioForegroundBrush}" StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}" UseLayoutRounding="False" Width="{StaticResource SpRadioButtonEllipsSize}"></Ellipse>
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpCrossButton" TargetType="Button">
    <Setter Property="Padding" Value="8,4,8,4"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalImageIcon">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedImageIcon">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalImageIcon">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedImageIcon">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0"></DiscreteDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalImageIcon">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"></DiscreteDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusImageIcon">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusedPressed"></VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Image x:Name="PressedImageIcon" Source="SP_CloseCancel2_Sm_S.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>
            <Image x:Name="NormalImageIcon" Source="SP_CloseCancel2_Sm.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>
            <Image x:Name="FocusImageIcon" Source="SP_CloseSmall_R.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"></Image>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpDropdownStandardItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="TabNavigation" Value="Local"></Setter>
    <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid.Resources>
              <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                <Setter Property="LineStackingStrategy" Value="MaxHeight"></Setter>
                <Setter Property="TextLineBounds" Value="Full"></Setter>
                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"></Setter>
                <Setter Property="FontFamily" Value="Segoe UI Normal"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundHover}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundHover}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundSelected}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundSelected}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundSelected}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="26"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"></Rectangle>
            <Grid Margin="-2,0,0,0">
              <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Style="{StaticResource BodyContentPresenterStyle}" TextWrapping="NoWrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <TextBlock x:Name="comboBoxItemText" Text="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Top" TextTrimming="CharacterEllipsis"></TextBlock>
              </ContentPresenter>
            </Grid>
            <Image x:Name="Tick" Source="SP_Check_R.png" Stretch="None" AutomationProperties.AccessibilityView="Raw" Grid.Column="1" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,10,10,10" VerticalAlignment="Center" Visibility="Collapsed"></Image>
            <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="2,0,0,0" Visibility="Collapsed"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Name="SpDropdownItemSeparatorStyle" TargetType="ComboBoxItem">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="TabNavigation" Value="Local"></Setter>
    <Setter Property="Padding" Value="0"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"></Setter>
    <Setter Property="IsEnabled" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Disabled"></VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Selected"></VisualState>
                <VisualState x:Name="SelectedUnfocused"></VisualState>
                <VisualState x:Name="SelectedDisabled"></VisualState>
                <VisualState x:Name="SelectedPointerOver"></VisualState>
                <VisualState x:Name="SelectedPressed"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" Height="{ThemeResource SpDropdownSeparatorThickness}" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{TemplateBinding Foreground}" BorderBrush="{ThemeResource SpDropdownSeparatorBrush}" BorderThickness="{ThemeResource SpDropdownSeparatorBorderThickness}" Margin="{ThemeResource SpDropdownSeparatorPadding}"></ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpDropdownQuietItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="TabNavigation" Value="Local"></Setter>
    <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid.Resources>
              <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                <Setter Property="LineStackingStrategy" Value="MaxHeight"></Setter>
                <Setter Property="TextLineBounds" Value="Full"></Setter>
                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"></Setter>
                <Setter Property="FontFamily" Value="Segoe UI Normal"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="26"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"></Rectangle>
            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Style="{StaticResource BodyContentPresenterStyle}" TextWrapping="NoWrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <TextBlock x:Name="comboBoxItemText" Text="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Top" TextTrimming="CharacterEllipsis"></TextBlock>
            </ContentPresenter>
            <Image x:Name="Tick" Source="SP_Check_R.png" Stretch="None" AutomationProperties.AccessibilityView="Raw" Grid.Column="1" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,10,10,10" VerticalAlignment="Center" Visibility="Collapsed"></Image>
            <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <coreconverters:SpVisibilityConverter x:Key="VisibilityConverter"></coreconverters:SpVisibilityConverter>
  <Style x:Key="SpDropdownRichItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="TabNavigation" Value="Local"></Setter>
    <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid.Resources>
              <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                <Setter Property="LineStackingStrategy" Value="MaxHeight"></Setter>
                <Setter Property="TextLineBounds" Value="Full"></Setter>
                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"></Setter>
                <Setter Property="FontFamily" Value="Segoe UI Normal"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"></Rectangle>
            <Grid Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="34"></RowDefinition>
              </Grid.RowDefinitions>
              <Grid Margin="8,0,10,0" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="Left" IsHitTestVisible="False" VerticalAlignment="Center" Grid.Column="0" Visibility="{Binding LeftIconDefault, Converter={StaticResource VisibilityConverter}, ConverterParameter=trueIfNotNull}">
                <Image x:Name="LeftIconDefault" Stretch="None" Visibility="Visible" Source="{Binding LeftIconDefault, Mode=TwoWay }"></Image>
                <Image x:Name="LeftIconHover" Stretch="None" Visibility="Collapsed" Source="{Binding LeftIconHover, Mode=TwoWay }"></Image>
                <Image x:Name="LeftIconSelected" Stretch="None" Visibility="Collapsed" Source="{Binding LeftIconSelected, Mode=TwoWay }"></Image>
              </Grid>
              <StackPanel Orientation="Vertical" Margin="8,0,8,0" VerticalAlignment="Center" Grid.Column="1">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding ToolTipText}" Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}, ConverterParameter=trueIfNotNull}"></ToolTip>
                </ToolTipService.ToolTip>
                <TextBlock x:Name="RichComboTextTitle" Text="{Binding Title}" HorizontalAlignment="Left" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"></TextBlock>
                <TextBlock x:Name="RichComboTextDesc" Text="{Binding Description }" Foreground="{ThemeResource SpectrumGray1 }" Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" Visibility="{Binding Description, Converter={StaticResource VisibilityConverter}, ConverterParameter=trueIfNotNull}"></TextBlock>
              </StackPanel>
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip Content="{Binding ToolTipText}" Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}, ConverterParameter=trueIfNotNull}"></ToolTip>
              </ToolTipService.ToolTip>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpDropdownRichSimpleItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="TabNavigation" Value="Local"></Setter>
    <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid.Resources>
              <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                <Setter Property="LineStackingStrategy" Value="MaxHeight"></Setter>
                <Setter Property="TextLineBounds" Value="Full"></Setter>
                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"></Setter>
                <Setter Property="FontFamily" Value="Segoe UI Normal"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"></Rectangle>
            <Grid Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
              </Grid.RowDefinitions>
              <StackPanel Orientation="Vertical" Margin="8,0,8,0" VerticalAlignment="Center" Grid.Column="1">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding ToolTipText}" Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}, ConverterParameter=trueIfNotNull}"></ToolTip>
                </ToolTipService.ToolTip>
                <TextBlock x:Name="RichComboTextTitle" Text="{Binding Title}" HorizontalAlignment="Left" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"></TextBlock>
              </StackPanel>
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <Image x:Name="Tick" Source="SP_Check_R.png" Stretch="None" AutomationProperties.AccessibilityView="Raw" Grid.Column="1" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,10,10,10" VerticalAlignment="Center" Visibility="Collapsed"></Image>
            <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip Content="{Binding ToolTipText}" Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}, ConverterParameter=trueIfNotNull}"></ToolTip>
              </ToolTipService.ToolTip>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <components:SpDropdownItemSelector x:Key="SpDropdownItemSelector" standardStyle="{StaticResource SpDropdownStandardItemStyle}" separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"></components:SpDropdownItemSelector>
  <components:SpDropdownItemSelector x:Key="SpDropdownQuietItemSelector" standardStyle="{StaticResource SpDropdownQuietItemStyle}" separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"></components:SpDropdownItemSelector>
  <components:SpDropdownItemSelector x:Key="SpDropdownRichItemSelector" standardStyle="{StaticResource SpDropdownRichItemStyle}" separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"></components:SpDropdownItemSelector>
  <components:SpDropdownItemSelector x:Key="SpDropdownRichSimpleItemSelector" standardStyle="{StaticResource SpDropdownRichSimpleItemStyle}" separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"></components:SpDropdownItemSelector>
  <Style x:Key="SpScrollBar" TargetType="ScrollBar">
    <Setter Property="MinWidth" Value="12"></Setter>
    <Setter Property="MinHeight" Value="12"></Setter>
    <Setter Property="Background" Value="{ThemeResource ScrollBarBackground}"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource ScrollBarForeground}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ScrollBarBorderBrush}"></Setter>
    <Setter Property="IsTabStop" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollBar">
          <Grid x:Name="Root">
            <Grid.Resources>
              <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root" Background="Transparent">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"></VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"></VisualState>
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&amp;#xE0E3;" MirroredWhenRightToLeft="True"></FontIcon>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"></VisualState>
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&amp;#xE0E2;" MirroredWhenRightToLeft="True"></FontIcon>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"></VisualState>
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&amp;#xE0E5;"></FontIcon>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"></VisualState>
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&amp;#xE0E4;"></FontIcon>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                <Grid Background="Transparent" Width="12">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"></VisualState>
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"></DoubleAnimation>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="ThumbVisual" Margin="0,0,2,0" HorizontalAlignment="Right" Fill="{StaticResource SpScrollbarForegroundBrush}" RadiusX="{StaticResource SpScrollbarRadius}" RadiusY="{StaticResource SpScrollbarRadius}" Width="{StaticResource SpScrollbarWidth}"></Rectangle>
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                <Grid Background="Transparent" Height="12">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"></VisualState>
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPointerOver}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPressed}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillDisabled}"></DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"></DoubleAnimation>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="ThumbVisual" Margin="0,0,0,2" VerticalAlignment="Bottom" Fill="{StaticResource SpScrollbarForegroundBrush}" RadiusX="{StaticResource SpScrollbarRadius}" RadiusY="{StaticResource SpScrollbarRadius}" Height="{StaticResource SpScrollbarWidth}"></Rectangle>
                </Grid>
              </ControlTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBackgroundPointerOver}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBorderBrushPointerOver}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokePointerOver}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokePointerOver}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillPointerOver}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillPointerOver}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBackgroundDisabled}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBorderBrushDisabled}"></DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"></DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokeDisabled}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokeDisabled}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillDisabled}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillDisabled}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalPanningThumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarPanningThumbBackgroundDisabled}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalPanningThumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarPanningThumbBackgroundDisabled}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ScrollingIndicatorStates">
                <VisualState x:Name="TouchIndicator">
                  <Storyboard>
                    <FadeInThemeAnimation TargetName="HorizontalPanningRoot"></FadeInThemeAnimation>
                    <FadeInThemeAnimation TargetName="VerticalPanningRoot"></FadeInThemeAnimation>
                    <FadeOutThemeAnimation TargetName="HorizontalRoot"></FadeOutThemeAnimation>
                    <FadeOutThemeAnimation TargetName="VerticalRoot"></FadeOutThemeAnimation>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalRoot">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalRoot">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseIndicator">
                  <Storyboard>
                    <FadeInThemeAnimation TargetName="HorizontalRoot"></FadeInThemeAnimation>
                    <FadeInThemeAnimation TargetName="VerticalRoot"></FadeInThemeAnimation>
                    <FadeOutThemeAnimation TargetName="HorizontalPanningRoot"></FadeOutThemeAnimation>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalPanningRoot">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <FadeOutThemeAnimation TargetName="VerticalPanningRoot"></FadeOutThemeAnimation>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalPanningRoot">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="HorizontalRoot">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <x:Boolean>True</x:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="VerticalRoot">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <x:Boolean>True</x:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NoIndicator">
                  <Storyboard>
                    <FadeOutThemeAnimation BeginTime="0" TargetName="HorizontalPanningRoot"></FadeOutThemeAnimation>
                    <FadeOutThemeAnimation BeginTime="0" TargetName="VerticalPanningRoot"></FadeOutThemeAnimation>
                    <FadeOutThemeAnimation BeginTime="0" TargetName="HorizontalRoot"></FadeOutThemeAnimation>
                    <FadeOutThemeAnimation BeginTime="0" TargetName="VerticalRoot"></FadeOutThemeAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalRoot" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsHitTestVisible="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="5" Fill="{ThemeResource ScrollBarTrackFill}" Margin="0" Stroke="{ThemeResource ScrollBarTrackStroke}" StrokeThickness="{ThemeResource ScrollBarTrackBorderThemeThickness}" Visibility="Collapsed"></Rectangle>
              <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" IsTabStop="False" Interval="50" Margin="0" MinHeight="12" Template="{StaticResource HorizontalDecrementTemplate}" VerticalAlignment="Center" Width="12" Visibility="Collapsed"></RepeatButton>
              <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" HorizontalAlignment="Stretch" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" VerticalAlignment="Stretch" Width="0"></RepeatButton>
              <Thumb x:Name="HorizontalThumb" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource ScrollBarThumbBackground}" Grid.Column="2" Height="12" MinWidth="12" Template="{StaticResource HorizontalThumbTemplate}"></Thumb>
              <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" HorizontalAlignment="Stretch" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" VerticalAlignment="Stretch"></RepeatButton>
              <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" IsTabStop="False" Interval="50" Margin="0" MinHeight="12" Template="{StaticResource HorizontalIncrementTemplate}" VerticalAlignment="Center" Width="12" Visibility="Collapsed"></RepeatButton>
            </Grid>
            <Grid x:Name="HorizontalPanningRoot" MinWidth="24">
              <Border x:Name="HorizontalPanningThumb" CornerRadius="{StaticResource SpScrollbarTouchThumbRadius}" BorderThickness="0" Background="{ThemeResource ScrollBarPanningThumbBackground}" HorizontalAlignment="Left" Height="{StaticResource SpScrollbarWidth}" Margin="0,2,0,2" MinWidth="32" VerticalAlignment="Bottom"></Border>
            </Grid>
            <Grid x:Name="VerticalRoot" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsHitTestVisible="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
              </Grid.RowDefinitions>
              <Rectangle x:Name="VerticalTrackRect" Fill="{ThemeResource ScrollBarTrackFill}" Margin="0" Grid.RowSpan="5" Stroke="{ThemeResource ScrollBarTrackStroke}" StrokeThickness="{ThemeResource ScrollBarTrackBorderThemeThickness}" Visibility="Collapsed"></Rectangle>
              <RepeatButton x:Name="VerticalSmallDecrease" HorizontalAlignment="Center" Height="12" IsTabStop="False" Interval="50" Margin="0" MinWidth="12" Grid.Row="0" Template="{StaticResource VerticalDecrementTemplate}" Visibility="Collapsed"></RepeatButton>
              <RepeatButton x:Name="VerticalLargeDecrease" HorizontalAlignment="Stretch" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}" VerticalAlignment="Stretch"></RepeatButton>
              <Thumb x:Name="VerticalThumb" HorizontalAlignment="Right" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource ScrollBarThumbBackground}" MinHeight="12" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}" Width="12"></Thumb>
              <RepeatButton x:Name="VerticalLargeIncrease" HorizontalAlignment="Stretch" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}" VerticalAlignment="Stretch"></RepeatButton>
              <RepeatButton x:Name="VerticalSmallIncrease" HorizontalAlignment="Center" Height="12" IsTabStop="False" Interval="50" Margin="0" MinWidth="12" Grid.Row="4" Template="{StaticResource VerticalIncrementTemplate}" Visibility="Collapsed"></RepeatButton>
            </Grid>
            <Grid x:Name="VerticalPanningRoot" MinHeight="24">
              <Border x:Name="VerticalPanningThumb" CornerRadius="{StaticResource SpScrollbarTouchThumbRadius}" BorderThickness="0" Background="{ThemeResource ScrollBarPanningThumbBackground}" HorizontalAlignment="Right" Margin="2,0,2,0" MinHeight="32" VerticalAlignment="Top" Width="{StaticResource SpScrollbarWidth}"></Border>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpScrollViewer" TargetType="ScrollViewer">
    <Setter Property="HorizontalScrollMode" Value="Auto"></Setter>
    <Setter Property="VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="IsHorizontalRailEnabled" Value="True"></Setter>
    <Setter Property="IsVerticalRailEnabled" Value="True"></Setter>
    <Setter Property="IsTabStop" Value="False"></Setter>
    <Setter Property="ZoomMode" Value="Disabled"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Top"></Setter>
    <Setter Property="VerticalScrollBarVisibility" Value="Visible"></Setter>
    <Setter Property="Padding" Value="0"></Setter>
    <Setter Property="BorderThickness" Value="0"></Setter>
    <Setter Property="BorderBrush" Value="Transparent"></Setter>
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="True"></Setter>
    <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}"></Setter>
  </Style>
  <Style x:Key="SpScrollViewerStandardDropdown" TargetType="ScrollViewer" BasedOn="{StaticResource SpScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollViewer">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ScrollingIndicatorStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="MouseIndicator" To="NoIndicator">
                    <Storyboard>
                      <FadeOutThemeAnimation BeginTime="0:0:3" TargetName="ScrollBarSeparator"></FadeOutThemeAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                          <DiscreteObjectKeyFrame.Value>
                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                          <DiscreteObjectKeyFrame.Value>
                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="TouchIndicator" To="NoIndicator">
                    <Storyboard>
                      <FadeOutThemeAnimation TargetName="ScrollBarSeparator"></FadeOutThemeAnimation>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                          <DiscreteObjectKeyFrame.Value>
                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                          <DiscreteObjectKeyFrame.Value>
                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NoIndicator">
                  <Storyboard>
                    <FadeOutThemeAnimation TargetName="ScrollBarSeparator"></FadeOutThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TouchIndicator">
                  <Storyboard>
                    <FadeOutThemeAnimation TargetName="ScrollBarSeparator"></FadeOutThemeAnimation>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseIndicator">
                  <Storyboard>
                    <FadeInThemeAnimation TargetName="ScrollBarSeparator"></FadeInThemeAnimation>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="{TemplateBinding Background}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
              </Grid.RowDefinitions>
              <ScrollContentPresenter x:Name="ScrollContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" Grid.RowSpan="2"></ScrollContentPresenter>
              <Grid Grid.ColumnSpan="2" Grid.RowSpan="2"></Grid>
              <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" HorizontalAlignment="Right" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource SpScrollBar}" Margin="0,0,1,0"></ScrollBar>
              <ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource SpScrollBar}"></ScrollBar>
              <Border x:Name="ScrollBarSeparator" Background="{ThemeResource ScrollViewerScrollBarSeparatorBackground}" Grid.Column="1" Grid.Row="1"></Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="SpDropDownDefaultTemplate">
    <Grid>
      <TextBlock x:Name="comboBoxText" Text="{Binding}" HorizontalAlignment="Left" VerticalAlignment="Top" TextTrimming="CharacterEllipsis"></TextBlock>
    </Grid>
  </DataTemplate>
  <Style x:Key="SpDropdownQuietStyle" TargetType="components:SpDropdown">
    <Setter Property="Padding" Value="0"></Setter>
    <Setter Property="MinWidth" Value="0"></Setter>
    <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderThickness" Value="0"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"></Setter>
    <Setter Property="TabNavigation" Value="Once"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Top"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"></Setter>
    <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownQuietItemSelector}"></Setter>
    <Setter Property="ItemTemplate" Value="{StaticResource SpDropDownDefaultTemplate}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel></CarouselPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"></Setter>
                    <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.Visibility" Value="Visible"></Setter>
                    <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"></Setter>
                    <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FocusedPressed"></VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
                <VisualState x:Name="FocusedDropDown"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitOpenThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitCloseThemeAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownShowPosition">
                <VisualState x:Name="DropDownShowClosed"></VisualState>
                <VisualState x:Name="DropDownShowBelow"></VisualState>
                <VisualState x:Name="DropDownShowAbove"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Padding="{ThemeResource SpDropdownLabelPadding}" Content="{TemplateBinding Header}" FontSize="{ThemeResource SpDropdownLabelFontSize}" FontWeight="{ThemeResource SpDropdownFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" Visibility="Collapsed" Foreground="{ThemeResource SpDropdownLabelBrush}" x:DeferLoadStrategy="Lazy"></ContentPresenter>
            <Border x:Name="Background" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <Border x:Name="HighlightBackground" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <ContentPresenter x:Name="ComboContentPresenter" Height="{ThemeResource SpDropdownHeight}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" FontWeight="{ThemeResource SpDropdownFontWeight}" Grid.Row="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplate="{TemplateBinding ItemTemplate}"></ContentPresenter>
            <ContentPresenter x:Name="DropDownGlyph" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                <Border Width="{StaticResource SpDropdownHeight}">
                  <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                </Border>
              </Grid>
            </ContentPresenter>
            <Border x:Name="FocusIndicator" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="1" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1" Visibility="Collapsed"></Border>
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="{ThemeResource SpDropdownBorderRadius}" HorizontalAlignment="Stretch">
                <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource SpScrollViewer}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Background="Transparent" Foreground="{ThemeResource SpDropdownTextBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" MinWidth="{TemplateBinding MinWidth}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpDropdownRichStyle" TargetType="components:SpDropdown" BasedOn="{StaticResource SpDropdownQuietStyle}">
    <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownRichItemSelector}"></Setter>
  </Style>
  <Style x:Key="SpDropdownRichSimpleStyle" TargetType="components:SpDropdown" BasedOn="{StaticResource SpDropdownQuietStyle}">
    <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownRichSimpleItemSelector}"></Setter>
  </Style>
  <Style x:Key="SpDropdownStandardStyle" TargetType="components:SpDropdown">
    <Setter Property="Padding" Value="{StaticResource SpDropdownMainPadding}"></Setter>
    <Setter Property="MinWidth" Value="{StaticResource SpDropdownMinWidth}"></Setter>
    <Setter Property="DropdownPopupLeftPosition" Value="0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderThickness" Value="0"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"></Setter>
    <Setter Property="TabNavigation" Value="Once"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Top"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"></Setter>
    <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownItemSelector}"></Setter>
    <Setter Property="ItemTemplate" Value="{StaticResource SpDropDownDefaultTemplate}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel></CarouselPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid x:Name="ComboBoxGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="{ThemeResource SpDropdownGridSize}"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"></Setter>
                    <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="Background.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"></Setter>
                    <Setter Target="HightlightBackground.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"></Setter>
                    <Setter Target="Background.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"></Setter>
                    <Setter Target="HightlightBackground.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FocusedPressed"></VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
                <VisualState x:Name="FocusedDropDown">
                  <VisualState.Setters>
                    <Setter Target="DropSeparator.Visibility" Value="Visible"></Setter>
                    <Setter Target="Background.Visibility" Value="Collapsed"></Setter>
                    <Setter Target="BackgroundOpen.Visibility" Value="Visible"></Setter>
                    <Setter Target="HightlightBackground.Visibility" Value="Collapsed"></Setter>
                    <Setter Target="HightlightBackgroundOpen.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownShowPosition">
                <VisualState x:Name="DropDownShowClosed"></VisualState>
                <VisualState x:Name="DropDownShowBelow">
                  <VisualState.Setters>
                    <Setter Target="BackgroundOpenUp.Visibility" Value="Collapsed"></Setter>
                    <Setter Target="BackgroundOpenDown.Visibility" Value="Visible"></Setter>
                    <Setter Target="HightlightBackgroundOpenUp.Visibility" Value="Collapsed"></Setter>
                    <Setter Target="HightlightBackgroundOpenDown.Visibility" Value="Visible"></Setter>
                    <Setter Target="DropSeparatorBar.VerticalAlignment" Value="Bottom"></Setter>
                    <Setter Target="PopupBorder.BorderThickness" Value="1,0,1,1"></Setter>
                    <Setter Target="PopupBorder.CornerRadius" Value="{StaticResource SpDropdownOpenListBorderRadius}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DropDownShowAbove">
                  <VisualState.Setters>
                    <Setter Target="BackgroundOpenUp.Visibility" Value="Visible"></Setter>
                    <Setter Target="BackgroundOpenDown.Visibility" Value="Collapsed"></Setter>
                    <Setter Target="HightlightBackgroundOpenUp.Visibility" Value="Visible"></Setter>
                    <Setter Target="HightlightBackgroundOpenDown.Visibility" Value="Collapsed"></Setter>
                    <Setter Target="DropSeparatorBar.VerticalAlignment" Value="Top"></Setter>
                    <Setter Target="PopupBorder.BorderThickness" Value="1,1,1,0"></Setter>
                    <Setter Target="PopupBorder.CornerRadius" Value="{StaticResource SpDropdownOpenListUpBorderRadius}"></Setter>
                    <Setter Target="PopupBorder.Padding" Value="0,0,0,14"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitOpenThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitCloseThemeAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Padding="{StaticResource SpDropdownLabelPadding}" Content="{TemplateBinding Header}" FontSize="{StaticResource SpDropdownLabelFontSize}" FontWeight="{StaticResource SpDropdownFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" Visibility="Collapsed" Foreground="{StaticResource SpDropdownLabelBrush}" x:DeferLoadStrategy="Lazy"></ContentPresenter>
            <Border x:Name="Background" CornerRadius="{StaticResource SpDropdownBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <Grid x:Name="BackgroundOpen" Background="Transparent" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed">
              <Border x:Name="BackgroundOpenDown" CornerRadius="{StaticResource SpDropdownOpenBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Visibility="Visible"></Border>
              <Border x:Name="BackgroundOpenUp" CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}" Visibility="Collapsed"></Border>
            </Grid>
            <Border x:Name="HightlightBackground" CornerRadius="{StaticResource SpDropdownBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <Grid x:Name="HightlightBackgroundOpen" Background="Transparent" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed">
              <Border x:Name="HightlightBackgroundOpenDown" CornerRadius="{StaticResource SpDropdownOpenBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}"></Border>
              <Border x:Name="HightlightBackgroundOpenUp" CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}"></Border>
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <ContentPresenter x:Name="ComboContentPresenter" Height="{ThemeResource SpDropdownHeight}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" FontWeight="{ThemeResource SpDropdownFontWeight}" Grid.Row="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplate="{TemplateBinding ItemTemplate}"></ContentPresenter>
            <Grid x:Name="DropSeparator" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed">
              <Border x:Name="DropSeparatorBar" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1"></Border>
            </Grid>
            <ContentPresenter x:Name="DropDownGlyph" Grid.Column="1" Grid.Row="1" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid>
                <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
              </Grid>
            </ContentPresenter>
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}" CornerRadius="{StaticResource SpDropdownOpenListBorderRadius}" HorizontalAlignment="Stretch">
                <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource SpScrollViewerStandardDropdown}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Background="Transparent" Foreground="{ThemeResource SpDropdownTextBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpDropdownRichStandardStyle" TargetType="components:SpDropdown" BasedOn="{StaticResource SpDropdownStandardStyle}">
    <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownRichItemSelector}"></Setter>
  </Style>
  <Style x:Key="SpDialogButtonStyle" TargetType="Button">
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource SpDialogBtnFontFace}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDialogBtnFontSize}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Padding" Value="16,-2,16,0"></Setter>
    <Setter Property="MinWidth" Value="{ThemeResource SpDialogBtnMinimumWidth}"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"></PointerUpThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="HoverBorder.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalBorder" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="PressedBorder.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverBorder" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalBorder" Duration="0:0:0.1">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"></EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="StrokeThickness" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledBrush), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledTextBrush), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpDialogButtonFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpDialogButtonFocusBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource DialogBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="PressedBorder" Fill="{TemplateBinding corecomponents:SpControlProperties.PressedBackground}" RadiusX="16" RadiusY="16" StrokeThickness="0" Width="Auto" Height="32" Visibility="Collapsed"></Rectangle>
            <Rectangle x:Name="HoverBorder" Fill="{TemplateBinding corecomponents:SpControlProperties.HoverBrush}" RadiusX="16" RadiusY="16" StrokeThickness="0" Width="Auto" Height="32" Visibility="Collapsed"></Rectangle>
            <Rectangle x:Name="NormalBorder" Fill="{TemplateBinding Background}" RadiusX="16" RadiusY="16" StrokeThickness="2" Stroke="{TemplateBinding BorderBrush}" Width="Auto" Height="32"></Rectangle>
            <ContentPresenter x:Name="ContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"></ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="SpDropdownImageTemplate">
    <Grid>
      <Image x:Name="Icon" Source="{Binding}" Width="16" Height="16"></Image>
    </Grid>
  </DataTemplate>
  <Style x:Key="SpImageDropdownQuietItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="TabNavigation" Value="Local"></Setter>
    <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid.Resources>
              <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                <Setter Property="LineStackingStrategy" Value="MaxHeight"></Setter>
                <Setter Property="TextLineBounds" Value="Full"></Setter>
                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"></Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedPressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="26"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"></Rectangle>
            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
            <Image x:Name="Tick" Source="SP_Check_R.png" Stretch="None" AutomationProperties.AccessibilityView="Raw" Grid.Column="1" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,10,10,10" VerticalAlignment="Center" Visibility="Collapsed"></Image>
            <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpImageDropdownQuietStyle" TargetType="components:SpImageDropdown">
    <Setter Property="Padding" Value="0"></Setter>
    <Setter Property="MinWidth" Value="0"></Setter>
    <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderThickness" Value="0"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"></Setter>
    <Setter Property="TabNavigation" Value="Once"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Top"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"></Setter>
    <Setter Property="ItemContainerStyle" Value="{StaticResource SpImageDropdownQuietItemStyle}"></Setter>
    <Setter Property="ItemTemplate" Value="{StaticResource SpDropdownImageTemplate}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel></CarouselPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"></Setter>
                    <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.Visibility" Value="Visible"></Setter>
                    <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"></Setter>
                    <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FocusedPressed"></VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
                <VisualState x:Name="FocusedDropDown"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitOpenThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitCloseThemeAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownShowPosition">
                <VisualState x:Name="DropDownShowClosed"></VisualState>
                <VisualState x:Name="DropDownShowBelow"></VisualState>
                <VisualState x:Name="DropDownShowAbove"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Padding="{ThemeResource SpDropdownLabelPadding}" Content="{TemplateBinding Header}" FontSize="{ThemeResource SpDropdownLabelFontSize}" FontWeight="{ThemeResource SpDropdownFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" Visibility="Collapsed" Foreground="{ThemeResource SpDropdownLabelBrush}" x:DeferLoadStrategy="Lazy"></ContentPresenter>
            <Border x:Name="Background" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <Grid x:Name="BackgroundOpen" Background="Transparent" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed">
              <Border x:Name="BackgroundOpenDown" CornerRadius="{StaticResource SpDropdownOpenBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Visibility="Visible"></Border>
              <Border x:Name="BackgroundOpenUp" CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}" Visibility="Collapsed"></Border>
            </Grid>
            <Border x:Name="HighlightBackground" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <Grid x:Name="HightlightBackgroundOpen" Background="Transparent" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed">
              <Border x:Name="HightlightBackgroundOpenDown" CornerRadius="{StaticResource SpDropdownOpenBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}"></Border>
              <Border x:Name="HightlightBackgroundOpenUp" CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}"></Border>
            </Grid>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <ContentPresenter x:Name="ComboContentPresenter" Height="{ThemeResource SpDropdownHeight}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" FontWeight="{ThemeResource SpDropdownFontWeight}" Grid.Row="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplate="{TemplateBinding ItemTemplate}"></ContentPresenter>
            <Image x:Name="ComboBoxEditor" Grid.Column="2" Grid.Row="1" Margin="0 0 16 0" Width="16" Height="16" HorizontalAlignment="Stretch"></Image>
            <Border Grid.Row="1" Width="16" Height="16" Grid.Column="2" x:Name="IndeterminateBorder" Visibility="Collapsed" Margin="0 0 16 0" CornerRadius="2">
              <Rectangle Width="8" Height="2" Fill="{ThemeResource ColorButtonIndeterminateDashColor}" RadiusX="0" RadiusY="0"></Rectangle>
            </Border>
            <ContentPresenter x:Name="DropDownGlyph" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                <Border Width="{StaticResource SpDropdownHeight}">
                  <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                </Border>
              </Grid>
            </ContentPresenter>
            <Border x:Name="FocusIndicator" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="1" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1" Visibility="Collapsed"></Border>
            <Border x:Name="FieldIndicator" BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}" BorderThickness="1" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1" Visibility="Collapsed"></Border>
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="{ThemeResource SpDropdownBorderRadius}" HorizontalAlignment="Stretch">
                <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource SpScrollViewer}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Background="Transparent" Foreground="{ThemeResource SpDropdownTextBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" MinWidth="{TemplateBinding MinWidth}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="SpectrumButtonCtaStatesDefaultTextColor" Color="{ThemeResource StaticWhite}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpectrumButtonCtaStatesDownTextColor" Color="{ThemeResource StaticWhite}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpectrumButtonCtaStatesDownBackgroundColor" Color="{ThemeResource StaticBlue700}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpectrumButtonCtaStatesHoverBackgroundColor" Color="{StaticResource StaticBlue600}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpectrumButtonCtaStatesDefaultBackgroundColor" Color="{ThemeResource StaticBlue500}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpectrumButtonCtaStatesDefaultBorderColor" Color="{ThemeResource StaticBlue500}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpectrumButtonPrimaryStatesDisabledBackgroundColor" Color="{ThemeResource Gray200}"></SolidColorBrush>
  <SolidColorBrush x:Key="SpectrumButtonPrimaryStatesDisabledTextColor" Color="{ThemeResource Gray500}"></SolidColorBrush>
  <Style x:Key="SpDialogCallToActionButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SpectrumButtonCtaStatesDefaultTextColor}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpectrumButtonCtaStatesDownTextColor}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpectrumButtonCtaStatesDownBackgroundColor}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpectrumButtonCtaStatesHoverBackgroundColor}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpectrumButtonCtaStatesDefaultBackgroundColor}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpectrumButtonCtaStatesDefaultBorderColor}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBrush" Value="{ThemeResource SpectrumButtonPrimaryStatesDisabledBackgroundColor}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpectrumButtonPrimaryStatesDisabledTextColor}"></Setter>
  </Style>
  <Style x:Key="SpDialogPrimaryButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonPrimaryTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonPrimaryPressedTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonPrimaryPressedBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonPrimaryHoverBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonPrimaryHoverBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDialogButtonPrimaryBackgroundBrush}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonPrimaryDisabledBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonPrimaryDisabledTextBrush}"></Setter>
  </Style>
  <Style x:Key="SpDialogSecondaryButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonSecondaryTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonSecondaryPressedTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonSecondaryPressedBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonSecondaryHoverBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonSecondaryHoverBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDialogButtonSecondaryBackgroundBrush}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnSecondaryWeight}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonSecondaryDisabledBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonSecondaryDisabledTextBrush}"></Setter>
  </Style>
  <Style x:Key="SpDialogWarningButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonWarningTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonWarningPressedTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonWarningPressedBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonWarningHoverBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonWarningHoverBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDialogButtonWarningBackgroundBrush}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnWarningWeight}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonWarningDisabledBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonWarningDisabledTextBrush}"></Setter>
  </Style>
  <Style x:Key="SpDialogPrimaryButtonQuietStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonQuietPrimaryTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonQuietPrimaryPressedTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonQuietPrimaryPressedBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryHoverBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryBackgroundBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDialogButtonQuietPrimaryBackgroundBrush}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryDisabledBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryDisabledTextBrush}"></Setter>
  </Style>
  <Style x:Key="SpDialogSecondaryButtonQuietStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonQuietSecondaryTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonQuietSecondaryPressedTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonQuietSecondaryPressedBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryHoverBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryBackgroundBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDialogButtonQuietSecondaryBackgroundBrush}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryDisabledBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryDisabledTextBrush}"></Setter>
  </Style>
  <Style x:Key="SpDialogWarningButtonQuietStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
    <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonQuietWarningTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonQuietWarningPressedTextBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonQuietWarningPressedBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonQuietWarningHoverBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonQuietWarningBackgroundBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDialogButtonQuietWarningBackgroundBrush}"></Setter>
    <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnWarningWeight}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonQuietWarningDisabledBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonQuietWarningDisabledTextBrush}"></Setter>
  </Style>
  <Style x:Key="SpEditableDropdownQuietStyle" TargetType="components:SpDropdown">
    <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderThickness" Value="0"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"></Setter>
    <Setter Property="TabNavigation" Value="Once"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Top"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"></Setter>
    <Setter Property="ItemContainerStyle" Value="{StaticResource SpDropdownQuietItemStyle}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="IsTabStop" Value="False"></Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel></CarouselPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"></Setter>
                    <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CombinedFocusStates">
                <VisualState x:Name="CombinedUnFocused"></VisualState>
                <VisualState x:Name="CombinedFocused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardFocusStates">
                <VisualState x:Name="NotKeyboardFocused"></VisualState>
                <VisualState x:Name="KeyboardFocused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"></Setter>
                    <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitOpenThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitCloseThemeAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownShowPosition">
                <VisualState x:Name="DropDownShowClosed">
                  <VisualState.Setters>
                    <Setter Target="FieldIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DropDownShowBelow">
                  <VisualState.Setters>
                    <Setter Target="FieldIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DropDownShowAbove">
                  <VisualState.Setters>
                    <Setter Target="FieldIndicator.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Padding="{ThemeResource SpDropdownLabelPadding}" Content="{TemplateBinding Header}" FontSize="{ThemeResource SpDropdownLabelFontSize}" FontWeight="{ThemeResource SpDropdownFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" Visibility="Collapsed" Foreground="{ThemeResource SpDropdownLabelBrush}" x:DeferLoadStrategy="Lazy"></ContentPresenter>
            <Border x:Name="Background" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <Border x:Name="HighlightBackground" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" Grid.Row="1"></Border>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <ContentPresenter x:Name="ComboContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <components:SpTextBox x:Name="comboBoxEditor" Grid.Row="1" HorizontalAlignment="Stretch" EnableUpDownKeyHandling="False" Style="{StaticResource SpDropdownTextBoxStyle}"></components:SpTextBox>
            <ContentPresenter x:Name="DropDownGlyph" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                <Border Width="{StaticResource SpDropdownHeight}">
                  <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                </Border>
              </Grid>
            </ContentPresenter>
            <Border x:Name="FocusIndicator" BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}" BorderThickness="1" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1"></Border>
            <Border x:Name="FieldIndicator" BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}" BorderThickness="1" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1" Visibility="Collapsed"></Border>
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="{ThemeResource SpDropdownBorderRadius}" HorizontalAlignment="Stretch">
                <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource SpScrollViewer}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Background="Transparent" Foreground="{ThemeResource SpDropdownTextBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" MinWidth="{TemplateBinding MinWidth}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpEditableDropdownHUDQuietStyle" TargetType="components:SpDropdown">
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderThickness" Value="0"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"></Setter>
    <Setter Property="TabNavigation" Value="Once"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="VerticalAlignment" Value="Top"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"></Setter>
    <Setter Property="ItemContainerStyle" Value="{StaticResource SpDropdownQuietItemStyle}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="IsTabStop" Value="False"></Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel></CarouselPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="106"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"></Setter>
                    <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CombinedFocusStates">
                <VisualState x:Name="CombinedUnFocused"></VisualState>
                <VisualState x:Name="CombinedFocused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardFocusStates">
                <VisualState x:Name="NotKeyboardFocused"></VisualState>
                <VisualState x:Name="KeyboardFocused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"></Setter>
                    <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitOpenThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitCloseThemeAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownShowPosition">
                <VisualState x:Name="DropDownShowClosed">
                  <VisualState.Setters>
                    <Setter Target="FieldIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DropDownShowBelow">
                  <VisualState.Setters>
                    <Setter Target="FieldIndicator.Visibility" Value="Collapsed"></Setter>
                    <Setter Target="Popup.Margin" Value="142,0,0,0"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DropDownShowAbove">
                  <VisualState.Setters>
                    <Setter Target="FieldIndicator.Visibility" Value="Visible"></Setter>
                    <Setter Target="Popup.Margin" Value="142,0,0,0"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Content="{TemplateBinding Header}" FontSize="{ThemeResource SpDropdownLabelFontSize}" FontWeight="{ThemeResource SpDropdownFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" HorizontalAlignment="Left" HorizontalContentAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" Margin="16,0,0,0" Foreground="{ThemeResource SpDropdownLabelBrush}" x:DeferLoadStrategy="Lazy" Grid.Row="1" Grid.Column="0"></ContentPresenter>
            <Border x:Name="Background" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="1"></Border>
            <Border x:Name="HighlightBackground" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="1"></Border>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <ContentPresenter x:Name="ComboContentPresenter" Visibility="Collapsed"></ContentPresenter>
            <components:SpTextBox x:Name="comboBoxEditor" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" EnableUpDownKeyHandling="False" Padding="36,0,24,0" MinWidth="52" Style="{StaticResource SpDropdownTextBoxStyle}"></components:SpTextBox>
            <ContentPresenter x:Name="DropDownGlyph" Grid.Row="1" Grid.Column="2" Margin="0,1,12,0" HorizontalAlignment="Right" VerticalAlignment="Stretch">
              <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                <Border Width="{StaticResource SpDropdownHeight}">
                  <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                </Border>
              </Grid>
            </ContentPresenter>
            <Border x:Name="FocusIndicator" BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}" BorderThickness="1" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1" MinWidth="64" Margin="36,0,12,0"></Border>
            <Border x:Name="FieldIndicator" BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}" BorderThickness="1" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="1" MinWidth="64" Margin="36,0,0,0" Visibility="Collapsed"></Border>
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="{ThemeResource SpDropdownBorderRadius}" HorizontalAlignment="Right">
                <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource SpScrollViewer}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Background="Transparent" Foreground="{ThemeResource SpDropdownTextBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" MinWidth="{TemplateBinding MinWidth}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpEditableDropdownHUDStringQuietStyle" TargetType="components:SpDropdown">
    <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.HeaderBorderThickness" Value="0"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"></Setter>
    <Setter Property="TabNavigation" Value="Once"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    <Setter Property="VerticalAlignment" Value="Top"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"></Setter>
    <Setter Property="ItemContainerStyle" Value="{StaticResource SpDropdownQuietItemStyle}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="IsTabStop" Value="False"></Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <CarouselPanel></CarouselPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="{Binding Path=(corecomponents:SpControlProperties.LabelWidth), RelativeSource={RelativeSource TemplatedParent}}"></ColumnDefinition>
              <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"></Setter>
                    <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CombinedFocusStates">
                <VisualState x:Name="CombinedUnFocused"></VisualState>
                <VisualState x:Name="CombinedFocused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardFocusStates">
                <VisualState x:Name="NotKeyboardFocused"></VisualState>
                <VisualState x:Name="KeyboardFocused">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"></Setter>
                    <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Opened">
                  <VisualState.Setters>
                    <Setter Target="FocusIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitOpenThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"></SplitCloseThemeAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownShowPosition">
                <VisualState x:Name="DropDownShowClosed">
                  <VisualState.Setters>
                    <Setter Target="FieldIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DropDownShowBelow">
                  <VisualState.Setters>
                    <Setter Target="Popup.Margin" Value="70,0,0,0"></Setter>
                    <Setter Target="FieldIndicator.Visibility" Value="Collapsed"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DropDownShowAbove">
                  <VisualState.Setters>
                    <Setter Target="Popup.Margin" Value="70,0,0,0"></Setter>
                    <Setter Target="FieldIndicator.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="HeaderContentPresenter" Padding="{ThemeResource SpDropdownLabelPadding}" Content="{TemplateBinding Header}" FontSize="{ThemeResource SpDropdownLabelFontSize}" FontWeight="{ThemeResource SpDropdownFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" HorizontalAlignment="Left" HorizontalContentAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" Margin="16,0,0,0" Foreground="{ThemeResource SpDropdownLabelBrush}" x:DeferLoadStrategy="Lazy"></ContentPresenter>
            <Border x:Name="Background" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" Grid.Row="1"></Border>
            <Border x:Name="HighlightBackground" CornerRadius="{ThemeResource SpDropdownBorderRadius}" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=(corecomponents:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" Grid.Row="1"></Border>
            <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed" Grid.Column="2"></ContentPresenter>
            <ContentPresenter x:Name="ComboContentPresenter" Visibility="Collapsed" Grid.Column="2"></ContentPresenter>
            <components:SpTextBox x:Name="comboBoxEditor" Grid.Column="2" Grid.Row="1" Margin="0 0 32 0" HorizontalAlignment="Stretch" EnableUpDownKeyHandling="False" Style="{StaticResource SpDropdownTextBoxStyle}"></components:SpTextBox>
            <ContentPresenter x:Name="DropDownGlyph" Grid.Column="2" Grid.Row="1" Margin="0,1,12,0" HorizontalAlignment="Right" VerticalAlignment="Stretch">
              <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                <Border Width="{StaticResource SpDropdownHeight}">
                  <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>
                </Border>
              </Grid>
            </ContentPresenter>
            <Border x:Name="FocusIndicator" BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}" BorderThickness="1" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,12,0" Height="1"></Border>
            <Border x:Name="FieldIndicator" BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}" BorderThickness="1" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,0" Height="1" Visibility="Collapsed"></Border>
            <Popup x:Name="Popup">
              <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="{ThemeResource SpDropdownBorderRadius}" HorizontalAlignment="Right">
                <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource SpScrollViewer}" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Background="Transparent" Foreground="{ThemeResource SpDropdownTextBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" MinWidth="{TemplateBinding MinWidth}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpDropdownTextBoxStyle" TargetType="TextBox">
    <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"></Setter>
    <Setter Property="MinHeight" Value="16"></Setter>
    <Setter Property="Height" Value="32"></Setter>
    <Setter Property="VerticalAlignment" Value="Center"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource UiTextBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource TransparentBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource TransparentBrush}"></Setter>
    <Setter Property="SelectionHighlightColor" Value="{ThemeResource SelectedBorder}"></Setter>
    <Setter Property="BorderThickness" Value="0"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="Padding" Value="0"></Setter>
    <Setter Property="Margin" Value="0"></Setter>
    <Setter Property="IsTextPredictionEnabled" Value="False"></Setter>
    <Setter Property="IsSpellCheckEnabled" Value="False"></Setter>
    <Setter Property="TabNavigation" Value="Once"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid Padding="0,0,0,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="ContentElement.Foreground" Value="{ThemeResource TextBoxLabelColorBrush}"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Focused"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible"></VisualState>
                <VisualState x:Name="ButtonCollapsed"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Opacity="{ThemeResource TextControlBackgroundRestOpacity}"></Border>
            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"></Border>
            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" VerticalAlignment="Center" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"></ScrollViewer>
            <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" IsTabStop="False" Margin="0" Padding="0"></ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpTorqSearchBoxBaseStyle" TargetType="TextBox">
    <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"></Setter>
    <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"></Setter>
    <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltHighBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderColorBrush}"></Setter>
    <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}"></Setter>
    <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBackground" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"></Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"></Setter>
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"></Setter>
    <Setter Property="Padding" Value="23, 0, 8, 0"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid Padding="{TemplateBinding Padding}">
            <Grid.Resources>
              <x:Double x:Key="QueryButtonDimension">11</x:Double>
              <x:Double x:Key="ImageDimension">9</x:Double>
              <x:Double x:Key="ButtonWidth">15</x:Double>
              <x:Double x:Key="ButtonHeight">20</x:Double>
              <Style x:Name="QueryButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{ThemeResource BrushGrey7}"></Setter>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}">
                        <BitmapIcon x:Name="QueryIcon" Width="{StaticResource QueryButtonDimension}" Height="{StaticResource QueryButtonDimension}" Margin="0,0,0,0" HorizontalAlignment="Right" Foreground="{TemplateBinding Foreground}" UriSource="ms-appx:///SP_MagnifyingGlass.png"></BitmapIcon>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"></VisualState>
                            <VisualState x:Name="PointerOver"></VisualState>
                            <VisualState x:Name="Pressed"></VisualState>
                            <VisualState x:Name="Disabled">
                              <VisualState.Setters>
                                <Setter Target="QueryIcon.Foreground" Value="{ThemeResource BrushGrey3}"></Setter>
                              </VisualState.Setters>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Name="DeleteButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{ThemeResource BrushGrey7}"></Setter>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}">
                        <BitmapIcon x:Name="DeleteIcon" Width="{StaticResource ImageDimension}" Height="{StaticResource ImageDimension}" Margin="0,0,0,0" HorizontalAlignment="Left" Foreground="{TemplateBinding Foreground}" UriSource="ms-appx:///SP_CloseX_9.png"></BitmapIcon>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"></VisualState>
                            <VisualState x:Name="PointerOver"></VisualState>
                            <VisualState x:Name="Pressed"></VisualState>
                            <VisualState x:Name="Disabled">
                              <VisualState.Setters>
                                <Setter Target="DeleteIcon.Foreground" Value="{ThemeResource BrushGrey3}"></Setter>
                              </VisualState.Setters>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(corecomponents:SpControlProperties.DisabledBackground), RelativeSource={RelativeSource TemplatedParent}}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForeground}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForeground}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HoverBorderBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxPlaceholderForegroundColorBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxActiveBorderColorBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"></ColumnDefinition>
              <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border x:Name="BorderElement" Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" Grid.RowSpan="1"></Border>
            <ContentPresenter x:Name="HeaderContentPresenter" x:DeferLoadStrategy="Lazy" Visibility="Collapsed" Grid.Row="0" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Margin="0,0,0,8" Grid.ColumnSpan="2" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontWeight="Normal"></ContentPresenter>
            <ScrollViewer x:Name="ContentElement" Grid.Row="1" VerticalAlignment="Center" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="23, 0, 8, 0" IsTabStop="False" AutomationProperties.AccessibilityView="Raw" ZoomMode="Disabled"></ScrollViewer>
            <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.Row="1" VerticalAlignment="Center" Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}" Margin="{TemplateBinding BorderThickness}" Padding="23, 0, 8, 0" IsTabStop="False" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" IsHitTestVisible="False"></ContentControl>
            <Button x:Name="QueryButton" Grid.Row="1" Style="{StaticResource QueryButtonStyle}" BorderThickness="0" Margin="0,0,0,0" IsTabStop="False" Grid.Column="0"></Button>
            <Button x:Name="DeleteButton" Grid.Row="1" Style="{StaticResource DeleteButtonStyle}" BorderThickness="0" Margin="0,0,0,0" IsTabStop="False" Grid.Column="1" Visibility="Collapsed"></Button>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpTorqSearchBoxStyle" TargetType="TextBox" BasedOn="{StaticResource SpTorqSearchBoxBaseStyle}">
    <Setter Property="BorderThickness" Value="{ThemeResource TextBoxSpectrumStandardStyleBorderThickness}"></Setter>
    <Setter Property="Background" Value="{ThemeResource Grey2}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="{ThemeResource TextBoxSpectrumStandardStyleBorderCornerRadius}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBackground" Value="{ThemeResource ControlDisabledFillColorBrush}"></Setter>
  </Style>
  <Style x:Key="SpTorqSearchBoxQuietStyle" TargetType="TextBox" BasedOn="{StaticResource SpTorqSearchBoxBaseStyle}">
    <Setter Property="BorderThickness" Value="{ThemeResource TextBoxSpectrumQuietStyleBorderThickness}"></Setter>
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="corecomponents:SpControlProperties.CornerRadius" Value="0"></Setter>
    <Setter Property="corecomponents:SpControlProperties.DisabledBackground" Value="Transparent"></Setter>
  </Style>
  <Style x:Key="ContextMenuItemSeparatorTemplate" TargetType="MenuFlyoutSeparator">
    <Setter Property="Opacity">
      <Setter.Value>0.2</Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{ThemeResource InteractionBorderColor}"></Setter>
  </Style>
  <Style x:Key="ContextMenuStyleTemplate" TargetType="MenuFlyoutPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutPresenter">
          <Border CornerRadius="{ThemeResource MenuFlyoutCornerRadius}" Background="{ThemeResource MenuFlyoutBackgroundColor}" BorderThickness="{ThemeResource MenuFlyoutBorderThickness}" BorderBrush="{ThemeResource MenuFlyoutBorderBrush}">
            <ItemsPresenter></ItemsPresenter>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="MenuFlyoutSubItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutSubItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemPointerOverBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubMenuOpened">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemPointerOverBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemNameDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemShortcutDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaddingSizeStates">
                <VisualState x:Name="DefaultPadding"></VisualState>
                <VisualState x:Name="NarrowPadding"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusRing.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{ThemeResource TitleMenuFlyoutCornerRadius}" Padding="{ThemeResource MenuFlyoutItemThemePaddingNarrow}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="16"></ColumnDefinition>
                  <ColumnDefinition Width="*"></ColumnDefinition>
                  <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="TextBlock" Grid.Column="1" Foreground="{ThemeResource UiTextColour}" FontSize="{StaticResource SpDropdownFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" TextTrimming="CharacterEllipsis" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AutomationId="{Binding Path=(corecomponents:SpControlProperties.AutomationId), RelativeSource={RelativeSource TemplatedParent}}"></TextBlock>
                <FontIcon x:Name="RightAlignItem" AutomationProperties.AccessibilityView="Raw" Grid.Column="2" Foreground="{ThemeResource MenuSubItemChevronForegroundColor}" FontSize="{StaticResource SpDropdownFontSize}" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&amp;#xEDDA;" MirroredWhenRightToLeft="True" Margin="{StaticResource TitleMenuFlyoutSubItemGlyphMargin}"></FontIcon>
              </Grid>
            </Grid>
            <Border x:Name="FocusRing" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="False" Visibility="Collapsed" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(corecomponents:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="MenuFlyoutItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemPointerOverBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubMenuOpened">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemPointerOverBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemNameDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RightAlignItem">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuItemShortcutDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaddingSizeStates">
                <VisualState x:Name="DefaultPadding"></VisualState>
                <VisualState x:Name="NarrowPadding"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusRing.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{ThemeResource TitleMenuFlyoutCornerRadius}" Padding="{ThemeResource MenuFlyoutItemThemePaddingNarrow}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="16"></ColumnDefinition>
                  <ColumnDefinition Width="*"></ColumnDefinition>
                  <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="TextBlock" Grid.Column="1" Foreground="{ThemeResource UiTextColour}" FontSize="{StaticResource SpDropdownFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" TextTrimming="CharacterEllipsis" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AutomationId="{Binding Path=(corecomponents:SpControlProperties.AutomationId), RelativeSource={RelativeSource TemplatedParent}}"></TextBlock>
                <TextBlock x:Name="RightAlignItem" contract6Present:Text="{TemplateBinding KeyboardAcceleratorTextOverride}" Grid.Column="2" FontSize="{StaticResource SpDropdownFontSize}" HorizontalAlignment="Right" Padding="10, 1, 0, 1" Foreground="{ThemeResource UiTextColour}"></TextBlock>
              </Grid>
            </Grid>
            <Border x:Name="FocusRing" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="False" Visibility="Collapsed" Padding="0" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(corecomponents:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBackground" ResourceKey="SystemControlTransparentRevealBackgroundBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowRevealBackgroundBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBackgroundPressed" ResourceKey="SystemControlHighlightListMediumRevealBackgroundBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBackgroundDisabled" ResourceKey="SystemControlTransparentBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBorderBrush" ResourceKey="SystemControlTransparentBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBorderBrushPressed" ResourceKey="SystemControlTransparentRevealBorderBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBorderBrushPointerOver" ResourceKey="SystemControlTransparentRevealBorderBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemRevealBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemBackground" ResourceKey="SystemControlTransparentBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemForeground" ResourceKey="SystemControlForegroundBaseHighBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemKeyboardAcceleratorTextForeground" ResourceKey="UiTextColour"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseMediumBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundPressed" ResourceKey="SystemControlHighlightAltBaseMediumBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemCheckGlyphForeground" ResourceKey="UiTextColour"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemCheckGlyphForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemCheckGlyphForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush"></StaticResource>
  <StaticResource x:Key="ToggleMenuFlyoutItemCheckGlyphForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush"></StaticResource>
  <Style TargetType="ToggleMenuFlyoutItem">
    <Setter Property="Background" Value="{ThemeResource ToggleMenuFlyoutItemRevealBackground}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrush}"></Setter>
    <Setter Property="BorderThickness" Value="0"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForeground}"></Setter>
    <Setter Property="Padding" Value="0"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="True"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleMenuFlyoutItem">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot"></PointerUpThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"></Setter>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TitleMenuItemPointerOverBackgroundColor}"></Setter>
                    <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrushPointerOver}"></Setter>
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPointerOver}"></Setter>
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></Setter>
                    <Setter Target="CheckGlyph.Foreground" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></Setter>
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot"></PointerUpThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed"></Setter>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"></Setter>
                    <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrushPressed}"></Setter>
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPressed}"></Setter>
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></Setter>
                    <Setter Target="CheckGlyph.Foreground" Value="{ThemeResource TitleMenuItemHighlightAltBaseHighBrush}"></Setter>
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}"></Setter>
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerDownThemeAnimation Storyboard.TargetName="AnimationRoot"></PointerDownThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleMenuFlyoutItemRevealBackgroundDisabled}"></Setter>
                    <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrushDisabled}"></Setter>
                    <Setter Target="IconContent.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundDisabled}"></Setter>
                    <Setter Target="TextBlock.Foreground" Value="{ThemeResource TitleMenuItemNameDisabledForegroundColor}"></Setter>
                    <Setter Target="CheckGlyph.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForegroundDisabled}"></Setter>
                    <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource TitleMenuItemShortcutDisabledForegroundColor}"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Unchecked"></VisualState>
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="CheckGlyph.Opacity" Value="1"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="UncheckedWithIcon">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"></Setter>
                    <Setter Target="IconRoot.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CheckedWithIcon">
                  <VisualState.Setters>
                    <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"></Setter>
                    <Setter Target="IconRoot.Visibility" Value="Visible"></Setter>
                    <Setter Target="CheckGlyph.Opacity" Value="1"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaddingSizeStates">
                <VisualState x:Name="DefaultPadding"></VisualState>
                <VisualState x:Name="NarrowPadding">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TitleMenuToggleFlyoutItemPadding}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                <VisualState x:Name="KeyboardAcceleratorTextCollapsed"></VisualState>
                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                  <VisualState.Setters>
                    <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="AnimationRoot">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
              </Grid.ColumnDefinitions>
              <Grid Grid.Column="0" Width="24" Margin="1.5,0,4.5,0" Padding="0,0,5,0">
                <FontIcon x:Name="CheckGlyph" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForeground}" FontSize="16" Glyph="&amp;#xE001;" Opacity="0" HorizontalAlignment="Center"></FontIcon>
              </Grid>
              <Viewbox x:Name="IconRoot" Grid.Column="1" HorizontalAlignment="Left" Height="16" VerticalAlignment="Center" Visibility="Collapsed" Width="10">
                <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}"></ContentPresenter>
              </Viewbox>
              <TextBlock x:Name="TextBlock" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" TextTrimming="Clip" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></TextBlock>
              <TextBlock x:Name="KeyboardAcceleratorTextBlock" AutomationProperties.AccessibilityView="Raw" Grid.Column="2" Foreground="{ThemeResource ToggleMenuFlyoutItemKeyboardAcceleratorTextForeground}" HorizontalAlignment="Right" contract6Present:MinWidth="{Binding TemplateSettings.KeyboardAcceleratorTextMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="24,0,0,0" Style="{ThemeResource CaptionTextBlockStyle}" contract6Present:Text="{TemplateBinding KeyboardAcceleratorTextOverride}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"></TextBlock>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="MenuFlyoutSeparator">
    <Setter Property="Padding" Value="{ThemeResource TitleMenuFlyoutSeparatorPadding}"></Setter>
    <Setter Property="Background" Value="{ThemeResource TitleMenuItemSeparatorColor}"></Setter>
  </Style>
  <Style TargetType="MenuFlyoutPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutPresenter">
          <Border CornerRadius="{ThemeResource TitleMenuFlyoutCornerRadius}" Background="{ThemeResource TitleMenuFlyoutBackgroundColor}" BorderThickness="{ThemeResource TitleMenuFlyoutBorderThickness}" BorderBrush="{ThemeResource TitleMenuFlyoutBorderBrush}">
            <ScrollViewer Style="{StaticResource PIScrollViewerStyle}" BorderThickness="0">
              <ItemsPresenter></ItemsPresenter>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ContextMenuItemTemplate" TargetType="components:SpContextMenuItem">
    <Setter Property="corecomponents:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="components:SpContextMenuItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPointerOverBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <PointerDownThemeAnimation Storyboard.TargetName="NameBlock"></PointerDownThemeAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <PointerDownThemeAnimation Storyboard.TargetName="NameShortcut"></PointerDownThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemNameDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemShortcutDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Pressed" To="Normal">
                    <Storyboard>
                      <PointerUpThemeAnimation Storyboard.TargetName="NameBlock"></PointerUpThemeAnimation>
                      <PointerUpThemeAnimation Storyboard.TargetName="NameShortcut"></PointerUpThemeAnimation>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Pressed" To="PointerOver">
                    <Storyboard>
                      <PointerUpThemeAnimation Storyboard.TargetName="NameBlock"></PointerUpThemeAnimation>
                      <PointerUpThemeAnimation Storyboard.TargetName="NameShortcut"></PointerUpThemeAnimation>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckPlaceholderStates">
                <VisualState x:Name="NoPlaceholder"></VisualState>
                <VisualState x:Name="CheckPlaceholder">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Unchecked"></VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0"></DoubleAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaddingSizeStates">
                <VisualState x:Name="DefaultPadding"></VisualState>
                <VisualState x:Name="NarrowPadding"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusRing.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{ThemeResource MenuFlyoutBorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{ThemeResource MenuFlyoutCornerRadius}" Padding="{ThemeResource MenuFlyoutItemThemePaddingNarrow}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"></ColumnDefinition>
                <ColumnDefinition MinWidth="140" Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
              </Grid.ColumnDefinitions>
              <FontIcon x:Name="CheckGlyph" AutomationProperties.AccessibilityView="Raw" Grid.Column="0" Foreground="{ThemeResource UiTextColour}" FontSize="{StaticResource SpDropdownFontSize}" Opacity="0" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&amp;#xE001;"></FontIcon>
              <TextBlock x:Name="NameBlock" Grid.Column="1" Text="{TemplateBinding Text}" FontSize="{StaticResource SpDropdownFontSize}" Foreground="{ThemeResource UiTextColour}" Padding="0, 1, 0, 1" AutomationProperties.AutomationId="{Binding Path=(corecomponents:SpControlProperties.AutomationId), RelativeSource={RelativeSource TemplatedParent}}"></TextBlock>
              <TextBlock x:Name="NameShortcut" Grid.Column="2" Text="{TemplateBinding Shortcut}" FontSize="{StaticResource SpDropdownFontSize}" HorizontalAlignment="Right" Padding="10, 1, 0, 1" Foreground="{ThemeResource UiTextColourLight}"></TextBlock>
            </Grid>
            <Border x:Name="FocusRing" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="False" Visibility="Collapsed" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(corecomponents:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ContextMenuSubItemTemplate" TargetType="MenuFlyoutSubItem">
    <Setter Property="FontSize" Value="{StaticResource SpDropdownFontSize}"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource UiTextColour}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}"></Setter>
    <Setter Property="corecomponents:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuFlyoutSubItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPointerOverBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubMenuOpened">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPointerOverBackgroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemNameDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemShortcutDisabledForegroundColor}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PaddingSizeStates">
                <VisualState x:Name="DefaultPadding"></VisualState>
                <VisualState x:Name="NarrowPadding"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusRing.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{ThemeResource MenuFlyoutBorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{ThemeResource MenuFlyoutCornerRadius}" Padding="{ThemeResource MenuFlyoutItemThemePaddingNarrow}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="16"></ColumnDefinition>
                  <ColumnDefinition Width="*"></ColumnDefinition>
                  <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="TextBlock" Grid.Column="1" Foreground="{ThemeResource UiTextColour}" FontSize="{StaticResource SpDropdownFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" TextTrimming="CharacterEllipsis" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AutomationId="{Binding Path=(corecomponents:SpControlProperties.AutomationId), RelativeSource={RelativeSource TemplatedParent}}"></TextBlock>
                <FontIcon x:Name="SubItemChevron" AutomationProperties.AccessibilityView="Raw" Grid.Column="2" Foreground="{ThemeResource MenuSubItemChevronForegroundColor}" FontSize="{StaticResource SpDropdownFontSize}" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&amp;#xE0E3;" MirroredWhenRightToLeft="True" Margin="{ThemeResource MenuFlyoutItemChevronMargin}"></FontIcon>
              </Grid>
            </Grid>
            <Border x:Name="FocusRing" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="False" Visibility="Collapsed" BorderBrush="{Binding Path=(corecomponents:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Path=(corecomponents:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="{Binding Path=(corecomponents:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(corecomponents:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TorqButton" TargetType="Button">
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"></Setter>
    <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"></Setter>
    <Setter Property="BorderThickness" Value="0"></Setter>
    <Setter Property="Padding" Value="0"></Setter>
    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"></Setter>
    <Setter Property="FontWeight" Value="Normal"></Setter>
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"></Setter>
    <Setter Property="UseSystemFocusVisuals" Value="False"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"></PointerUpThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver"></VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BtnDarkByBackgroundBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"></PointerDownThemeAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled"></VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <VisualState.Setters>
                    <Setter Target="FocusRing.Visibility" Value="Visible"></Setter>
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unfocused"></VisualState>
                <VisualState x:Name="PointerFocused"></VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw"></ContentPresenter>
            <Border x:Name="FocusRing" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="False" Visibility="Collapsed" BorderBrush="{ThemeResource FocusBrush}" BorderThickness="{ThemeResource FocusThickness}" CornerRadius="{ThemeResource FocusCornerRadius}" Margin="{ThemeResource FocusOffset}"></Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>