<!--
/*************************************************************************
*
* ADOBE CONFIDENTIAL
* ___________________
*
*  Copyright 2016 Adobe Systems Incorporated
*  All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains
* the property of Adobe Systems Incorporated and its suppliers,
* if any.  The intellectual and technical concepts contained
* herein are proprietary to Adobe Systems Incorporated and its
* suppliers and are protected by trade secret or copyright law.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe Systems Incorporated.
**************************************************************************/
-->
<!--
Made available pursuant to fair use.
Project URL: https://github.com/cgio/darkxd
Works with: XD 31.1.12.13
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:res="using:sparkler.resources"
    xmlns:components="using:sparkler.components"
    xmlns:converter="using:sparkler.converters"
    xmlns:utils="using:sparkler.utils">

    <ResourceDictionary.ThemeDictionaries>

        <ResourceDictionary x:Key="Default">
            <!-- SPECTRUM COLORS FOR NOW NEED TO REVISIT WITH ACTUAL XD COLORS -->
            <Color x:Key="Grey1">#2A2A2A</Color>
            <Color x:Key="Grey2">#2E2E2E</Color>
            <Color x:Key="Grey3">#323232</Color>
            <Color x:Key="Grey4">#393939</Color>
            <Color x:Key="Grey5">#3E3E3E</Color>
            <Color x:Key="Grey6">#525252</Color>
            <Color x:Key="Grey7">#707070</Color>
            <Color x:Key="Grey8">#999999</Color>
            <Color x:Key="Grey9">#CDCDCD</Color>
            <Color x:Key="Grey10">#FCFCFC</Color>

            <Color x:Key="LabelColor">#FF8E8E8E</Color>
            <Color x:Key="ForegroundColor">#FF8E8E8E</Color>
            <Color x:Key="TextControlForeground">#FF8E8E8E</Color>
            <Color x:Key="TextControlForegroundPointerOver">#FF8E8E8E</Color>
            <Color x:Key="TextControlForegroundFocused">#FF8E8E8E</Color>
            <Color x:Key="PlaceholderForegroundColor">#663F3F3F</Color>
            <Color x:Key="BorderColor">#FFE4E4E4</Color>
            <Color x:Key="SecondaryForegroundColor">#FF3F3F3F</Color>
            <Color x:Key="SecondaryForegroundColor60">#FF3F3F3F</Color>

            <Color x:Key="SystemAccentColor">#FF3F3F3F</Color>
            <Color x:Key="TextSelectionHighlightColor">#1592E6</Color>

            <Color x:Key="ToolNormalColor">#FFF9F9F9</Color>
            <Color x:Key="ToolCheckedColor">#FF177DDE</Color>
            <Color x:Key="ToolDisabledColor">#88535353</Color>

            <x:Double x:Key="ControlDisabledOpacity">0.35</x:Double>

            <Color x:Key="ControlNormalFillColor">#FF666666</Color>
            <Color x:Key="ControlDisabledFillColor">#FFDDDDDD</Color>

            <Color x:Key="ApplicationBackgroundColor">#FF2A2A2A</Color>
            <Color x:Key="PanelBackgroundColor">#FF323232</Color>
            <Color x:Key="DialogBackgroundColor">#FF2A2A2A</Color>

            <Color x:Key="UiTextColour">#8E8E8E</Color>
            <Color x:Key="UiTextColourLight">#8E8E8E</Color>
            <Color x:Key="UiChromeColour">#FFDDDDDD</Color>
            <Color x:Key="SelectedBorder">#FF008DE9</Color>
            <Color x:Key="HoverBorder">#FFD1D1D1</Color>
            <Color x:Key="UiBackgroundColour">#FFF8F7F7</Color>
            <Color x:Key="BtnBackground">#FF2A2A2A</Color>
            <Color x:Key="BtnLightByBackground">#FFFFFFFF</Color>
            <Color x:Key="BtnDarkByBackground">#FFEAEAEA</Color>
            <Color x:Key="BtnSelectedForeground">#FFFF0000</Color>
            <Color x:Key="BtnPrimaryForegroundColor">#666666</Color>
            <Color x:Key="BtnSecondaryForegroundColor">#666666</Color>

            <Color x:Key="EyeDropperCursorStroke">#7B7B7B</Color>
            <Color x:Key="ColorButtonIndeterminateDashColor">#C2C2C2</Color>

            <Color x:Key="DropdownBorderColor">#DDDDDD</Color>
            <Color x:Key="DropdownSeparatorColor">#DDDDDD</Color>
            <Color x:Key="DropdownFillColor">#FAFAFA</Color>
            <Color x:Key="DropdownPopupFillColor">#FAFAFA</Color>
            <Color x:Key="DropdownPopupHoverColor">#FAFAFA</Color>
            <Color x:Key="DropdownTextColor">#3F3F3F</Color>
            <Color x:Key="DropdownSelectedFillColor">#1592E6</Color>
            <Color x:Key="DropdownSelectedHoverColor">#1592E6</Color>
            <Color x:Key="DropdownSelectedTextColor">#FFFFFF</Color>
            <Color x:Key="DropdownDisabledColor">#8E8E8E</Color>
            <x:Double x:Key="DropdownDisabledImageOpacity">0.7</x:Double>

            <Color x:Key="InteractionBorderColor">#FFC2C2C2</Color>
            <Color x:Key="InteractionBackgroundColor">#FFFFFFFF</Color>

            <Color x:Key="ArtboardListHoverColor">#EEEEEE</Color>

            <Color x:Key="AppMenuListItemOverColor">#2A2A2A</Color>
            <Color x:Key="AppMenuBackgroundColor">#ff0000</Color>
            <Color x:Key="AppMenuHeaderBackgroundColor">#ff0000</Color>
            <Color x:Key="AppMenuTitleBackgroundColor">#ff0000</Color>
            <Color x:Key="TooltipBackgroundColor">#3F3F3F</Color>

            <Color x:Key="DropAreaBackgroundColor">#1592E6</Color>
            <Color x:Key="HighlightedButtonColor">#009D00</Color>
            <Color x:Key="CircularProgressBarColor">#09A4EB</Color>
            <Color x:Key="ComboboxItemBackgroundHover">#F5F5F5</Color>
            <Color x:Key="ComboboxItemForegroundHover">#2C2C2C</Color>
            <Color x:Key="ComboboxItemForegroundSelected">#1592E6</Color>
            <Color x:Key="LayerPanelTextHighlightColor">#1592E6</Color>
            <Color x:Key="LayerPanelEditTextBackgroundColor">#FFFFFF</Color>
        </ResourceDictionary>

    </ResourceDictionary.ThemeDictionaries>

    <res:SpCustomResourceInitializer x:Key="CustomResource"/>

    <!-- application layout -->
    <x:Double x:Key="ApplicationMinWidth">500</x:Double>
    <x:Double x:Key="ApplicationMinHeight">492</x:Double>

    <x:Double x:Key="ApplicationStartWidth">1104</x:Double>
    <x:Double x:Key="ApplicationStartHeight">752</x:Double>

    <x:Double x:Key="TitlebarHeight">32</x:Double>
    <x:Double x:Key="TitlebarWidth">132</x:Double>
    <x:Double x:Key="ToolbarWidth">50</x:Double>
    <x:Double x:Key="SliderTrackThemeHeight">2</x:Double>
    <GridLength x:Key="SliderTrackThemeGridLength">2</GridLength>

    <!-- application menu -->
    <x:Double x:Key="AppMenuBarHeight">40</x:Double>
    <x:Double x:Key="AppMenuListItemHeight">40</x:Double>
    <Thickness x:Key="AppMenuSeparatorPadding">10,10,10,10</Thickness>
    <Thickness x:Key="AppMenuSeparatorBorderThickness">0,0,0,1</Thickness>

    <x:Double x:Key="TextSize_Symbol">16</x:Double>

    <!-- Spectrum selection focus ring properties -->
    <SolidColorBrush x:Key="FocusBrush" Color="{ThemeResource SystemAccentColor}"/>
    <Thickness x:Key="FocusThickness">2,2,2,2</Thickness>
    <CornerRadius x:Key="FocusCornerRadius">3,3,3,3</CornerRadius>
    <Thickness x:Key="FocusOffset">0</Thickness>

    <!-- General: for most controls, including TextBox -->
    <SolidColorBrush x:Key="SystemControlHighlightAltBaseHighBrush" Color="#D1D1D1"/>
    <SolidColorBrush x:Key="TextSelectionHighlightColorThemeBrush" Color="{ThemeResource LayerPanelTextHighlightColor}"/>
    <FontFamily x:Key="ContentControlThemeFontFamily">Segoe UI</FontFamily>
    <x:Double x:Key="ControlContentThemeFontSizeSmall">10</x:Double>
    <x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
    <x:Double x:Key="ControlContentThemeFontSizeLarge">13</x:Double>
    <FontWeight x:Key="ControlContentThemeFontWeight">Normal</FontWeight>
    <SolidColorBrush x:Key="ControlContentThemeFontForeground" Color="{ThemeResource ForegroundColor}"/>
    <SolidColorBrush x:Key="ControlContentThemeFontForegroundDisabled" Color="{ThemeResource DropdownDisabledColor}"/>
    <x:String x:Key="ControlRadius">5,5,5,5</x:String>
    <x:Double x:Key="AppMenuWidth">286</x:Double>
    <x:Double x:Key="AppSubMenuWidth">240</x:Double>
    <x:Double x:Key="SpTextBoxHeight">32</x:Double>
    <SolidColorBrush x:Key="SystemControlForegroundBaseHighBrush" Color="{ThemeResource ForegroundColor}"/>
    <SolidColorBrush x:Key="SystemControlPageTextChromeBlackMediumLowBrush" Color="{ThemeResource ForegroundColor}"/>
    <!-- disabled text color is same as the textbox label color -->
    <SolidColorBrush x:Key="SystemControlDisabledChromeDisabledLowBrush" Color="{ThemeResource LabelColor}"/>

    <Color x:Key="SpectrumGreen1">#0F996D</Color>
    <Color x:Key="SpectrumRed1">#E44853</Color>
    <Color x:Key="SpectrumBlue2">#1473E6</Color>
    <Color x:Key="SpectrumGray1">#707070</Color>

    <Color x:Key="StaticWhite">#FFFFFF</Color>
    <Color x:Key="StaticBlue500">#2680EB</Color>
    <Color x:Key="StaticBlue600">#1473E6</Color>
    <Color x:Key="StaticBlue700">#0D66D0</Color>
    <Color x:Key="Gray200">#EAEAEA</Color>
    <Color x:Key="Gray300">#E1E1E1</Color>
    <Color x:Key="Gray500">#B3B3B3</Color>
    <Color x:Key="Gray900">#323232</Color>

    <!-- TextBox -->
    <SolidColorBrush x:Key="TextBoxLabelColorBrush" Color="{ThemeResource LabelColor}"/>
    <x:Double x:Key="TextBoxLabelFontSize">10</x:Double>
    <FontWeight x:Key="TextBoxLabelFontWeight">Normal</FontWeight>
    <FontWeight x:Key="TextBoxFontWeight">Normal</FontWeight>
    <FontStyle x:Key="PlaceholderTextBoxFontStyle">Italic</FontStyle>
    <SolidColorBrush x:Key="TextBoxBorderColorBrush" Color="{ThemeResource BorderColor}"/>
    <SolidColorBrush x:Key="TextBoxPlaceholderForegroundColorBrush" Color="{ThemeResource PlaceholderForegroundColor}"/>
    <SolidColorBrush x:Key="TextBoxActiveBorderColorBrush" Color="{ThemeResource SystemAccentColor}"/>
    <SolidColorBrush x:Key="SpSpectrumTextBoxErrorBorderBrush" Color="{StaticResource SpectrumRed1}"/>
    <Thickness x:Key="TextBoxSpectrumStandardStyleBorderThickness">1</Thickness>
    <Thickness x:Key="TextBoxSpectrumNoneAppearanceStyleBorderThickness">0</Thickness>
    <x:Double x:Key="TextBoxSpectrumNoneAppearanceStyleMinHeight">0</x:Double>
    <Thickness x:Key="TextBoxSpectrumQuietStyleBorderThickness">0,0,0,1</Thickness>
    <Thickness x:Key="TextBoxSpectrumStyleBorderMargin">0</Thickness>
    <CornerRadius x:Key="TextBoxSpectrumStandardStyleBorderCornerRadius">4</CornerRadius>
    <Thickness x:Key="TextBoxSpectrumStandardStyleContentPadding">12,8,12,8</Thickness>
    <Thickness x:Key="TextBoxSpectrumQuietStyleContentPadding">0,8,0,8</Thickness>
    <Thickness x:Key="TextBoxSpectrumNoneAppearanceStyleContentPadding">0</Thickness>
    <Thickness x:Key="TextBoxSpectrumStyleContentMargin">0</Thickness>
    <SolidColorBrush x:Key="TextBoxActiveContentColorBrush" Color="{ThemeResource ForegroundColor}"/>

    <!-- Dropdown -->
    <Color x:Key="DropdownFocusBorderColor">#1592E6</Color>
    <Color x:Key="SpDropdownUnfocusedBorderColor">#E4E4E4</Color>
    <x:Double x:Key="SpDropdownLabelFontSize">10</x:Double>
    <x:Double x:Key="SpDropdownFontSize">12</x:Double>
    <FontWeight x:Key="SpDropdownFontWeight">Normal</FontWeight>
    <Thickness x:Key="SpDropdownBorderTickness">1</Thickness>
    <x:Double x:Key="SpDropdownFocusSize">2</x:Double>
    <Thickness x:Key="SpDropdownFocusThickness">2</Thickness>
    <Thickness x:Key="SpDropdownFocusBarThickness">2,0,0,0</Thickness>
    <CornerRadius x:Key="SpDropdownBorderRadius">4</CornerRadius>
    <CornerRadius x:Key="SpDropdownOpenBorderRadius">4,4,0,0</CornerRadius>
    <CornerRadius x:Key="SpDropdownOpenUpBorderRadius">0,0,4,4</CornerRadius>
    <CornerRadius x:Key="SpDropdownOpenListBorderRadius">0,0,4,4</CornerRadius>
    <CornerRadius x:Key="SpDropdownOpenListUpBorderRadius">4,4,0,0</CornerRadius>
    <x:Double x:Key="SpDropdownSeparatorThickness">1</x:Double>
    <Thickness x:Key="SpDropdownSeparatorBorderThickness">1<!-- half of the actual thickness above--></Thickness>
    <Thickness x:Key="SpDropdownSeparatorPadding">0,8<!-- Top == (SpDropdownHeight - SpDropdownSeparatorThickness) / 2 -->,0,8<!-- Bottom == (SpDropdownHeight - SpDropdownSeparatorThickness) / 2 --></Thickness>
    <x:Double x:Key="SpDropdownHeight">32</x:Double>
    <x:Double x:Key="SpDropdownMinWidth">208</x:Double>
    <Thickness x:Key="SpDropdownMainPadding">11<!-- LeftPad -->,0,0,0</Thickness>
    <Thickness x:Key="SpDropdownItemPadding">11<!-- LeftPad -->,0,32<!-- SpDropdownHeight-->,0</Thickness>
    <Thickness x:Key="SpDropdownLabelPadding">0,0,0,6<!-- LabelPad --></Thickness>
    <GridLength x:Key="SpDropdownGridSize">32<!-- SpDropdownHeight--></GridLength>
    <Thickness x:Key="SpDropdownGlyphPadding">11,0,0,0</Thickness>
    <TranslateTransform x:Key="SpEditableDropdownGlyphTranslation" X="12" Y="0"/>
    <Thickness x:Key="SpDropdownListItemPadding">12,11,8,13</Thickness>
    <SolidColorBrush x:Key="SpDropdownBorderBrush" Color="#666666"/>
    <SolidColorBrush x:Key="SpDropdownSeparatorBrush" Color="{ThemeResource DropdownSeparatorColor}"/>
    <SolidColorBrush x:Key="SpDropdownFillBrush" Color="#242424"/>
    <SolidColorBrush x:Key="SpDropdownPopupFillBrush" Color="{ThemeResource DropdownPopupFillColor}"/>
    <SolidColorBrush x:Key="SpDropdownPopupHoverBrush" Color="{ThemeResource DropdownPopupHoverColor}"/>
    <SolidColorBrush x:Key="SpDropdownTextBrush" Color="#8E8E8E"/>
    <SolidColorBrush x:Key="SpDropdownSelectedFillBrush" Color="{ThemeResource DropdownSelectedFillColor}"/>
    <SolidColorBrush x:Key="SpDropdownSelectedHoverBrush" Color="{ThemeResource DropdownSelectedHoverColor}"/>
    <SolidColorBrush x:Key="SpDropdownSelectedTextBrush" Color="{ThemeResource DropdownSelectedTextColor}"/>
    <SolidColorBrush x:Key="SpDropdownLabelBrush" Color="{ThemeResource LabelColor}"/>
    <SolidColorBrush x:Key="SpDropdownDisabledBrush" Color="{ThemeResource DropdownDisabledColor}"/>
    <SolidColorBrush x:Key="SpDropdownFocusBorderBrush" Color="{StaticResource DropdownFocusBorderColor}"/>
    <SolidColorBrush x:Key="SpDropdownUnfocusBorderBrush" Color="{StaticResource SpDropdownUnfocusedBorderColor}"/>

    <!-- check box style -->
    <Color x:Key="SpCheckboxFocusColor">#1592E6</Color>
    <Color x:Key="SpCheckBoxNonInteracting">#666666</Color>
    <Color x:Key="SpCheckBoxInteracting">#3F3F3F</Color>
    <x:Double x:Key="SpCheckBoxBorderThemeThickness">2</x:Double>
    <x:Double x:Key="SpCheckBoxBorderRadius">2</x:Double>
    <SolidColorBrush x:Key="SpCheckBoxNonInteractiveBrush" Color="{StaticResource SpCheckBoxNonInteracting}"/>
    <SolidColorBrush x:Key="SpCheckBoxInteractiveBrush" Color="{StaticResource SpCheckBoxInteracting}"/>
    <SolidColorBrush x:Key="SpCheckBoxUnchecked" Color="White"/>
    <SolidColorBrush x:Key="SpCheckBoxFocusBrush" Color="{ThemeResource SpCheckboxFocusColor}"/>
    <FontFamily x:Key="SpCheckBoxTextFontFace">Segoe UI Normal</FontFamily>
    <x:Double x:Key="SpCheckBoxFontSize">12</x:Double>
    <x:Double x:Key="SpCheckBoxCheckSize">16</x:Double>
    <x:Double x:Key="SpCheckBoxGlyphSize">16</x:Double>
    <x:Double x:Key="SpCheckBoxTransitionPanelSize">12</x:Double>

    <!-- Interaction -->
    <Thickness x:Key="SpInteractionBorderThickness">1</Thickness>
    <CornerRadius x:Key="SpInteractionCornerRadius">4</CornerRadius>
    <!--Button-->
    <CornerRadius x:Key="SpRoundedButtonBorderRadius">16</CornerRadius>

    <!--Artboard-->
    <SolidColorBrush x:Key="ArtboardListHoverColorBrush" Color="{ThemeResource ArtboardListHoverColor}"/>

    <!-- Main application-->
    <x:Double x:Key="SectionTitleFontSize">10</x:Double>
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="ApplicationBackgroundColorBrush" Color="{ThemeResource ApplicationBackgroundColor}"/>

    <!-- Eye dropper -->
    <x:Double x:Key="EyeDropperZoomCursorWidth">120</x:Double>
    <x:Double x:Key="EyeDropperZoomCursorHeight">120</x:Double>
    <x:Double x:Key="EyeDropperZoomBorderInner">58</x:Double>
    <x:Double x:Key="EyeDropperZoomBorderOuter">62</x:Double>
    <x:Double x:Key="EyeDropperZoomBorderConfirmInner">56</x:Double>
    <x:Double x:Key="EyeDropperZoomBorderConfirmOuter">64</x:Double>
    <x:Double x:Key="EyeDropperZoomTouchConfirmHeight">44</x:Double>
    <x:Double x:Key="EyeDropperZoomTouchConfirmSpacing">4</x:Double>
    <x:Double x:Key="EyeDropperZoomCursorControlWidth">128</x:Double>
    <x:Double x:Key="EyeDropperZoomCursorControlHeight">128</x:Double>
    <x:String x:Key="EyeDropperZoomBorderCenter">62,62</x:String>
    <x:Double x:Key="EyeDropperInnerCursorWidth">8</x:Double>
    <x:Double x:Key="EyeDropperInnerCursorHeight">8</x:Double>

    <!-- Panels -->
    <SolidColorBrush x:Key="PanelBackgroundColorBrush" Color="{ThemeResource PanelBackgroundColor}"/>
    <Thickness x:Key="PanelItemMargin">16</Thickness>
    <Thickness x:Key="PanelItemThinMargin">16,0,16,0</Thickness>
    <Thickness x:Key="PanelItemThinBottomMargin">16,0,16,16</Thickness>
    <Thickness x:Key="PanelItemThinTopMargin">16,16,16,0</Thickness>
    <Thickness x:Key="PanelItemThinLeftMargin">16,0,0,0</Thickness>
    <Thickness x:Key="SmallSidesMargin">8,0</Thickness>
    <x:Int32 x:Key="PanelTitleCharacterSpacing">100</x:Int32>

    <x:String x:Key="AnimationDuration">0:0:0.2</x:String>

    <x:Double x:Key="ArtboartTemplateSizeFontSize">10</x:Double>

    <Style x:Key="ZeroHeightPaneSeparator" TargetType="Rectangle">
        <Setter Property="Height" Value="2"/>
        <Setter Property="Margin" Value="0,-2,0,0"/>
        <Setter Property="Fill" Value="{ThemeResource ApplicationBackgroundColorBrush}" />
    </Style>

    <Style x:Key="InteractionPopoverHorizontalSeparator" TargetType="Rectangle">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Fill" Value="{ThemeResource SpDropdownSeparatorBrush}" />
    </Style>

    <!-- Radio button -->
    <Color x:Key="SpRadioFocusColor">#1592E6</Color>
    <Color x:Key="SpRadioForegroundColor">#666666</Color>
    <Color x:Key="SpRadioBackgroundColor">White</Color>
    <x:Double x:Key="SpRadioButtonEllipsSize">16</x:Double>
    <x:Double x:Key="SpRadioButtonEllipsBorderSize">2</x:Double>
    <SolidColorBrush x:Key="SpRadioBackgroundColorBrush" Color="{ThemeResource SpRadioBackgroundColor}"/>
    <SolidColorBrush x:Key="SpRadioForegroundBrush" Color="{ThemeResource SpRadioForegroundColor}"/>
    <SolidColorBrush x:Key="SpRadioFocusBrush" Color="{ThemeResource SpRadioFocusColor}"/>

    <!-- Dialog button -->
    <Color x:Key="SpDialogButtonFocusColor">#1592E6</Color>
    <Color x:Key="SpDialogButtonQuietPrimaryHoverColor">#EAEAEA</Color>
    <Color x:Key="SpDialogButtonQuietPrimaryPressedColor">#E1E1E1</Color>
    <Color x:Key="SpDialogButtonQuietPrimaryTextColor">#4B4B4B</Color>
    <Color x:Key="SpDialogButtonQuietPrimaryPressedTextColor">#2C2C2C</Color>
    <Color x:Key="SpDialogButtonQuietSecondaryHoverColor">#EAEAEA</Color>
    <Color x:Key="SpDialogButtonQuietSecondaryPressedColor">#E1E1E1</Color>
    <Color x:Key="SpDialogButtonQuietSecondaryTextColor">#707070</Color>
    <Color x:Key="SpDialogButtonQuietSecondaryPressedTextColor">#4B4B4B</Color>
    <Color x:Key="SpDialogButtonQuietDisabledTextColor">#C2C2C2</Color>
    <Color x:Key="SpDialogButtonQuietWarningHoverColor">#EAEAEA</Color>
    <Color x:Key="SpDialogButtonQuietWarningPressedColor">#E1E1E1</Color>
    <Color x:Key="SpDialogButtonQuietWarningTextColor">#CB2030</Color>
    <Color x:Key="SpDialogButtonQuietWarningPressedTextColor">#BB0F22</Color>
    <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryHoverBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryHoverColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryPressedBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryPressedColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryTextBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryPressedTextBrush" Color="{ThemeResource SpDialogButtonQuietPrimaryPressedTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryDisabledBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietPrimaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonQuietDisabledTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryHoverBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryHoverColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryPressedBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryPressedColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryTextBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryPressedTextBrush" Color="{ThemeResource SpDialogButtonQuietSecondaryPressedTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryDisabledBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietSecondaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonQuietDisabledTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietWarningBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietWarningHoverBrush" Color="{ThemeResource SpDialogButtonQuietWarningHoverColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietWarningPressedBrush" Color="{ThemeResource SpDialogButtonQuietWarningPressedColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietWarningTextBrush" Color="{ThemeResource SpDialogButtonQuietWarningTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietWarningPressedTextBrush" Color="{ThemeResource SpDialogButtonQuietWarningPressedTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietWarningDisabledBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonQuietWarningDisabledTextBrush" Color="{ThemeResource SpDialogButtonQuietDisabledTextColor}"/>

    <SolidColorBrush x:Key="SpDialogButtonFocusBrush" Color="{ThemeResource SpDialogButtonFocusColor}"/>

    <Color x:Key="SpDialogButtonPrimaryHoverColor">#4B4B4B</Color>
    <Color x:Key="SpDialogButtonPrimaryPressedColor">#2C2C2C</Color>
    <Color x:Key="SpDialogButtonPrimaryTextColor">#4B4B4B</Color>
    <Color x:Key="SpDialogButtonPrimaryPressedTextColor">#FFFFFF</Color>
    <Color x:Key="SpDialogButtonSecondaryHoverColor">#999999</Color>
    <Color x:Key="SpDialogButtonSecondaryPressedColor">#707070</Color>
    <Color x:Key="SpDialogButtonSecondaryTextColor">#707070</Color>
    <Color x:Key="SpDialogButtonSecondaryPressedTextColor">#FFFFFF</Color>
    <Color x:Key="SpDialogButtonDisabledTextColor">#C2C2C2</Color>
    <Color x:Key="SpDialogButtonDisabledColor">#EAEAEA</Color>
    <Color x:Key="SpDialogButtonWarningHoverColor">#CB2030</Color>
    <Color x:Key="SpDialogButtonWarningPressedColor">#BB0F22</Color>
    <Color x:Key="SpDialogButtonWarningTextColor">#CB2030</Color>
    <Color x:Key="SpDialogButtonWarningPressedTextColor">#FFFFFF</Color>
    <SolidColorBrush x:Key="SpDialogButtonPrimaryBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonPrimaryHoverBrush" Color="{ThemeResource SpDialogButtonPrimaryHoverColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonPrimaryPressedBrush" Color="{ThemeResource SpDialogButtonPrimaryPressedColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonPrimaryTextBrush" Color="{ThemeResource SpDialogButtonPrimaryTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonPrimaryPressedTextBrush" Color="{ThemeResource SpDialogButtonPrimaryPressedTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonPrimaryDisabledBrush" Color="{ThemeResource SpDialogButtonDisabledColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonPrimaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonDisabledTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonSecondaryBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonSecondaryHoverBrush" Color="{ThemeResource SpDialogButtonSecondaryHoverColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonSecondaryPressedBrush" Color="{ThemeResource SpDialogButtonSecondaryPressedColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonSecondaryTextBrush" Color="{ThemeResource SpDialogButtonSecondaryTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonSecondaryPressedTextBrush" Color="{ThemeResource SpDialogButtonSecondaryPressedTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonSecondaryDisabledBrush" Color="{ThemeResource SpDialogButtonDisabledColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonSecondaryDisabledTextBrush" Color="{ThemeResource SpDialogButtonDisabledTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonWarningBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="SpDialogButtonWarningHoverBrush" Color="{ThemeResource SpDialogButtonWarningHoverColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonWarningPressedBrush" Color="{ThemeResource SpDialogButtonWarningPressedColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonWarningTextBrush" Color="{ThemeResource SpDialogButtonWarningTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonWarningPressedTextBrush" Color="{ThemeResource SpDialogButtonWarningPressedTextColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonWarningDisabledBrush" Color="{ThemeResource SpDialogButtonDisabledColor}"/>
    <SolidColorBrush x:Key="SpDialogButtonWarningDisabledTextBrush" Color="{ThemeResource SpDialogButtonDisabledTextColor}"/>

    <FontWeight x:Key="SpDialogBtnPrimaryWeight">Bold</FontWeight>

    <FontWeight x:Key="SpDialogBtnSecondaryWeight">Bold</FontWeight>

    <FontWeight x:Key="SpDialogBtnWarningWeight">Bold</FontWeight>

    <FontFamily x:Key="SpDialogBtnFontFace">Segoe UI</FontFamily>
    <x:Double x:Key="SpDialogBtnFontSize">12</x:Double>
    <x:Double x:Key="SpDialogBtnFontSizeSmall">10</x:Double>
    <x:Double x:Key="SpDialogBtnBorderWidth">2</x:Double>
    <x:Double x:Key="SpDialogBtnMinimumWidth">50</x:Double>
    <x:Double x:Key="SpShareBtnMinimumWidth">80</x:Double>
    <x:Double x:Key="SpShareBtnMaximumWidth">130</x:Double>
    <FontWeight x:Key="SpSpectrumOvalButtonFontWeight">Bold</FontWeight>
    <x:Double x:Key="SpSpectrumOvalButtonFontSize">12</x:Double>

    <!-- Action Button -->

    <x:Double x:Key="SpSpectrumActionButtonBorderThickness">1</x:Double>
    <x:Double x:Key="SpSpectrumActionButtonCornerRadius">4</x:Double>

    <FontWeight x:Key="SpSpectrumActionButtonFontWeight">Normal</FontWeight>
    <FontFamily x:Key="SpSpectrumActionButtonFontFace">Segoe UI</FontFamily>
    <x:Double x:Key="SpSpectrumActionButtonFontSize">12</x:Double>

    <Color x:Key="SpSpectrumActionButtonTextColor">#3A3A3A</Color>
    <Color x:Key="SpSpectrumActionButtonPressedTextColor">#212121</Color>
    <Color x:Key="SpSpectrumActionButtonDisabledTextColor">#A4A4A4</Color>

    <Color x:Key="SpSpectrumActionButtonBackgroundColor">#F9F9F9</Color>
    <Color x:Key="SpSpectrumActionButtonHoverBackgroundColor">#FFFFFF</Color>
    <Color x:Key="SpSpectrumActionButtonPressedBackgroundColor">#E5E5E5</Color>
    <Color x:Key="SpSpectrumActionButtonDisabledBackgroundColor">#E5E5E5</Color>

    <Color x:Key="SpSpectrumActionButtonBorderColor">#DADADA</Color>
    <Color x:Key="SpSpectrumActionButtonPressedBorderColor">#BEBEBE</Color>

    <SolidColorBrush x:Key="SpSpectrumActionButtonTextBrush" Color="{ThemeResource SpSpectrumActionButtonTextColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonHoverTextBrush" Color="{ThemeResource SpSpectrumActionButtonPressedTextColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonPressedTextBrush" Color="{ThemeResource SpSpectrumActionButtonPressedTextColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonDisabledTextBrush" Color="{ThemeResource SpSpectrumActionButtonDisabledTextColor}"/>

    <SolidColorBrush x:Key="SpSpectrumActionButtonBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonBackgroundColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonHoverBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonHoverBackgroundColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonPressedBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonPressedBackgroundColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonDisabledBackgroundBrush" Color="{ThemeResource SpSpectrumActionButtonDisabledBackgroundColor}"/>

    <SolidColorBrush x:Key="SpSpectrumActionButtonBorderBrush" Color="{ThemeResource SpSpectrumActionButtonBorderColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonHoverBorderBrush" Color="{ThemeResource SpSpectrumActionButtonPressedBorderColor}"/>
    <SolidColorBrush x:Key="SpSpectrumActionButtonPressedBorderBrush" Color="{ThemeResource SpSpectrumActionButtonPressedBorderColor}"/>

    <Style x:Key="SpSpectrumActionButtonBaseStyle" TargetType="ButtonBase">
        <Setter Property="Background" Value="{ThemeResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
        <Setter Property="Padding" Value="8,4,8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="FocusVisualMargin" Value="-3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.HoverBackground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.HoverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.HoverForeground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.PressedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.DisabledBackground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.DisabledBackground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.DisabledTextBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                                          AutomationProperties.AccessibilityView="Raw"
                                          CornerRadius="{ThemeResource SpSpectrumActionButtonCornerRadius}"
                                          Background="{TemplateBinding Background}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="SpSharingRoundedButtonDisabledBackgroundColor">#FFF4F4F4</Color>
    <Color x:Key="SpSharingRoundedButtonDisabledTextColor">#FFBCBCBC</Color>
    <Color x:Key="SpSharingRegularButtonDisabledTextColor">#FFB3B3B3</Color>
    <SolidColorBrush x:Key="SpBlueButtonPrimaryHoverBrush" Color="{ThemeResource StaticBlue600}"/>
    <SolidColorBrush x:Key="SpBlueButtonPrimaryBackgroundBrush" Color="{ThemeResource StaticBlue500}"/>
    <SolidColorBrush x:Key="SpBlueButtonPressedBackgroundBrush" Color="{ThemeResource StaticBlue700}"/>
    <SolidColorBrush x:Key="SpLinkButtonPressedBackgroundBrush" Color="{ThemeResource Gray200}"/>
    <SolidColorBrush x:Key="SpBlueButtonFocusBackgroundBrush" Color="#FF378EF0" />
    <SolidColorBrush x:Key="SpSharingInviteHyperlinkColor" Color="#1592E6" />
    <SolidColorBrush x:Key="SpSharingInviteHyperlinkUnderlineColor" Color="Transparent" />

    <Style x:Key="SpSpectrumActionButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource SpSpectrumActionButtonBaseStyle}">
        <Setter Property="BorderThickness" Value="{ThemeResource SpSpectrumActionButtonBorderThickness}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpSpectrumActionButtonFontWeight}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpSpectrumActionButtonFontSize}"/>
        <Setter Property="FontFamily" Value="{ThemeResource SpSpectrumActionButtonFontFace}"/>

        <Setter Property="Foreground" Value="{ThemeResource SpSpectrumActionButtonTextBrush}"/>
        <Setter Property="components:SpControlProperties.HoverForeground" Value="{ThemeResource SpSpectrumActionButtonHoverTextBrush}" />
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpSpectrumActionButtonPressedTextBrush}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpSpectrumActionButtonDisabledTextBrush}" />

        <Setter Property="Background" Value="{ThemeResource SpSpectrumActionButtonBackgroundBrush}"/>
        <Setter Property="components:SpControlProperties.HoverBackground" Value="{ThemeResource SpSpectrumActionButtonHoverBackgroundBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpSpectrumActionButtonPressedBackgroundBrush}" />
        <Setter Property="components:SpControlProperties.DisabledBackground" Value="{ThemeResource SpSpectrumActionButtonDisabledBackgroundBrush}" />

        <Setter Property="BorderBrush" Value="{ThemeResource SpSpectrumActionButtonBorderBrush}"/>
        <Setter Property="components:SpControlProperties.HoverBorderBrush" Value="{ThemeResource SpSpectrumActionButtonHoverBorderBrush}" />
        <Setter Property="components:SpControlProperties.PressedBorderBrush" Value="{ThemeResource SpSpectrumActionButtonPressedBorderBrush}" />
    </Style>

    <Style x:Key="SpSpectrumActionButtonQuietStyle" TargetType="ButtonBase" BasedOn="{StaticResource SpSpectrumActionButtonStyle}">
        <Setter Property="Background" Value="{ThemeResource TransparentBrush}"/>
        <Setter Property="components:SpControlProperties.HoverBackground" Value="{ThemeResource TransparentBrush}" />
        <Setter Property="components:SpControlProperties.DisabledBackground" Value="{ThemeResource TransparentBrush}" />

        <Setter Property="BorderBrush" Value="{ThemeResource TransparentBrush}"/>
        <Setter Property="components:SpControlProperties.HoverBorderBrush" Value="{ThemeResource TransparentBrush}" />
        <Setter Property="components:SpControlProperties.PressedBorderBrush" Value="{ThemeResource TransparentBrush}" />
    </Style>

    <Style x:Key="RoundedBlueButtonVisualStatesStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="16,-2,16,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="FontFamily" Value="{ThemeResource SpDialogBtnFontFace}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDialogBtnFontSize}"/>
        <Setter Property="MinWidth" Value="{ThemeResource SpDialogBtnMinimumWidth}" />
        <Setter Property="components:SpControlProperties.PressedForeground" Value="White" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpBlueButtonPrimaryBackgroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpBlueButtonPrimaryBackgroundBrush}"/>
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpBlueButtonPrimaryHoverBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpBlueButtonPressedBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="HoverBorder.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="CustomLabel"
                                                                    Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="NormalBorder"
                                                                    Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="PressedBorder.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="CustomLabel"
                                                                    Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="HoverBorder"
                                                                    Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="NormalBorder"
                                                                    Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpSharingRoundedButtonDisabledBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpSharingRoundedButtonDisabledBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CustomLabel">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpSharingRoundedButtonDisabledTextColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpBlueButtonFocusBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpBlueButtonFocusBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CustomLabel">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource DialogBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <!-- Pressed colors -->
                        <Rectangle
                                x:Name="PressedBorder"
                                Fill="{TemplateBinding components:SpControlProperties.PressedBackground}"
                                RadiusX="16" RadiusY="16"
                                StrokeThickness="0"
                                Width="Auto" Height="32"
                                Visibility="Collapsed"/>
                        <!-- Hover colors -->
                        <Rectangle x:Name="HoverBorder"
                                Fill="{TemplateBinding components:SpControlProperties.HoverBrush}"
                                RadiusX="16" RadiusY="16"
                                StrokeThickness="0"
                                Width="Auto" Height="32"
                                Visibility="Collapsed"/>
                        <!-- Normal colors -->
                        <Rectangle x:Name="NormalBorder"
                                Fill="{TemplateBinding Background}"
                                RadiusX="16" RadiusY="16"
                                StrokeThickness="2" Stroke="{TemplateBinding BorderBrush}"
                                Width="Auto" Height="32"/>
                        <ContentPresenter x:Name="MainContent"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                Foreground="{TemplateBinding components:SpControlProperties.PressedForeground}"
                                Padding="{TemplateBinding Padding}"
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                        <ContentPresenter x:Name="CustomLabel"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                Foreground="{TemplateBinding Foreground}"
                                Padding="{TemplateBinding Padding}"
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dialog boxes -->
    <CornerRadius x:Key="DialogCornerRadius">4</CornerRadius>

    <!-- Progress Bar -->
    <Color x:Key="ProgressBarForegroundColor">#1592E6</Color>
    <SolidColorBrush x:Key="ProgressBarForegroundBrush" Color="{StaticResource ProgressBarForegroundColor}"/>

    <!--ContextMenu-->
    <Color x:Key="MenuFlyoutBackgroundColor">#323232</Color>
    <Color x:Key="MenuItemNameDisabledForegroundColor">#FF606060</Color>
    <Color x:Key="MenuItemShortcutDisabledForegroundColor">#FF606060</Color>
    <Color x:Key="MenuItemPointerOverBackgroundColor">#2A2A2A</Color>
    <Color x:Key="MenuItemHighlightAltBaseHighBrush">#FFD1D1D1</Color>
    <Color x:Key="MenuSubItemChevronForegroundColor">#FFD1D1D1</Color>
    <Color x:Key="MenuItemSeparatorColor">#2A2A2A</Color>
    <Color x:Key="MenuFlyoutBorderBrush">#2A2A2A</Color>
    <CornerRadius x:Key="MenuFlyoutCornerRadius">0</CornerRadius>
    <Thickness x:Key="MenuFlyoutBorderThickness">0</Thickness>

    <!--SpScrollbar -->
    <Color x:Key="SpScrollbarForegroundColor">#8E8E8E</Color>
    <SolidColorBrush x:Key="SpScrollbarForegroundBrush"  Color="{StaticResource SpScrollbarForegroundColor}"/>
    <x:Double x:Key="SpScrollbarRadius">2</x:Double>
    <CornerRadius x:Key="SpScrollbarTouchThumbRadius">2</CornerRadius>
    <x:Double x:Key="SpScrollbarWidth">4</x:Double>

    <!-- ScrollViewerTemplate -->
    <x:String x:Key="SpScrollViewerSeparatorExpandDuration">0</x:String>
    <x:String x:Key="SpScrollViewerSeparatorContractDelay">00:00:01.2</x:String>
    <x:String x:Key="SpScrollViewerSeparatorContractDuration">0</x:String>
    <x:String x:Key="SpScrollViewerSeparatorContractFinalKeyframe">00:00:01.2</x:String>

    <Style TargetType="ToolTip">
        <Setter Property="Placement" Value="Bottom"/>
        <Setter Property="Background" Value="{ThemeResource TooltipBackgroundColor}"/>
    </Style>

    <SolidColorBrush x:Key="TitlebarButtonBackgroundBrush" Color="#242424"/>
    <SolidColorBrush x:Key="TitlebarButtonInactiveBackgroundBrush" Color="#242424"/>
    <SolidColorBrush x:Key="TitlebarButtonHoverBackgroundBrush" Color="#3A3A3A"/>
    <SolidColorBrush x:Key="TitlebarButtonHoverForegroundBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TitlebarButtonPressedBackgroundBrush" Color="#CCCCCC"/>
    <SolidColorBrush x:Key="TitlebarButtonPressedForegroundBrush" Color="#000000"/>
    <SolidColorBrush x:Key="TitlebarButtonForegroundBrush" Color="#666666"/>
    <SolidColorBrush x:Key="UiTextBrush" Color="{ThemeResource UiTextColour}" />
    <SolidColorBrush x:Key="UiTextLightBrush" Color="{ThemeResource UiTextColourLight}" />
    <SolidColorBrush x:Key="UiChromeBrush" Color="{ThemeResource UiChromeColour}" />
    <SolidColorBrush x:Key="SelectedBorderBrush" Color="{ThemeResource SelectedBorder}" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="{ThemeResource HoverBorder}" />
    <SolidColorBrush x:Key="UiBackgroundBrush" Color="{ThemeResource UiBackgroundColour}" />
    <SolidColorBrush x:Key="BtnBackgroundBrush" Color="{ThemeResource BtnBackground}" />
    <SolidColorBrush x:Key="BtnLightByBackgroundBrush" Color="{ThemeResource BtnLightByBackground}" />
    <SolidColorBrush x:Key="BtnDarkByBackgroundBrush" Color="{ThemeResource BtnDarkByBackground}" />
    <SolidColorBrush x:Key="BtnSelectedForegroundBrush" Color="{ThemeResource BtnSelectedForeground}" />
    <SolidColorBrush x:Key="DefaultAccentBrush" Color="{ThemeResource SystemAccentColor}" />
    <SolidColorBrush x:Key="DefaultDisabledBrush" Color="{ThemeResource ToolDisabledColor}" />

    <SolidColorBrush x:Key="DropAreaBackgroundBrush" Color="{ThemeResource DropAreaBackgroundColor}" Opacity="0.1" />
    <SolidColorBrush x:Key="DropAreaForegroundBrush" Color="{ThemeResource DropAreaBackgroundColor}" />
    <SolidColorBrush x:Key="HighlightedButtonBrush" Color="{ThemeResource HighlightedButtonColor}" />
    <SolidColorBrush x:Key="CircularProgressBarBrush" Color="{ThemeResource CircularProgressBarColor}" />

    <SolidColorBrush x:Key="ControlNormalFillColorBrush" Color="{ThemeResource ControlNormalFillColor}" />
    <SolidColorBrush x:Key="ControlDisabledFillColorBrush" Color="{ThemeResource ControlDisabledFillColor}" />

    <Style TargetType="components:SpTitlebar">
        <Setter Property="Height" Value="{ThemeResource TitlebarHeight}" />
    </Style>

    <Style x:Key="TitleBarStyle" TargetType="RelativePanel">
        <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
    </Style>

    <Style x:Key="TitlebarThemeSwitcherStyle" TargetType="StackPanel">
        <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="BorderThickness" Value="0,0,0,0" />
    </Style>

    <Style x:Key="ListHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource TextBoxLabelFontSize}" />
        <Setter Property="Foreground" Value="{ThemeResource UiTextColourLight}"/>
        <Setter Property="Padding" Value="16 20 20 25"/>
    </Style>

    <Style x:Key="PaneContainerStyle" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Vertical" />
    </Style>

    <Style x:Key="PropertyPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
        <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
    </Style>

    <Style x:Key="TextPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    </Style>

    <Style x:Key="AppearancePaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    </Style>

    <Style x:Key="EffectsPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    </Style>

    <Style x:Key="FillsPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    </Style>

    <Style x:Key="StrokesPaneContainerStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    </Style>

    <Style x:Key="ResizeConstraintsPaneStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    </Style>

    <Style x:Key="PaddingPaneStyle" TargetType="StackPanel" BasedOn="{StaticResource PaneContainerStyle}">
    </Style>

    <!-- Layers Panel -->
    <Color x:Key="SpColorLayerItemText">#3F3F3F</Color>
    <Color x:Key="SpColorLayerRowInEditContext">#FFFFFF</Color>
    <SolidColorBrush x:Key="SpBrushLayerRowHiglightHovered" Color="#EAF7FF"/>
    <SolidColorBrush x:Key="SpBrushLayerRowHiglightPressed" Color="#EAF7FF"/>
    <SolidColorBrush x:Key="SpBrushLayerRowHiglightSelected" Color="#E0F0FA"/>
    <SolidColorBrush x:Key="SpBrushLayerRowHiglightSelectedHovered" Color="#EAF7FF"/>
    <SolidColorBrush x:Key="SpBrushLayerRowHiglightSelectedPressed" Color="#EAF7FF"/>

    <!-- These are system controls that are mainly used in the multidrag indicator in the layers panel (dragging more than 1 item) -->
    <!-- These brushes are used for the border and background -->
    <SolidColorBrush x:Key="SystemControlBackgroundChromeWhiteBrush" Color="#00FFFFFF" Opacity="0" />
    <SolidColorBrush x:Key="SystemControlBackgroundAccentBrush" Color="{ThemeResource DropAreaBackgroundColor}" />
    <!-- This is the style for the number in the box -->
    <Style x:Key="CaptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>


    <Style x:Key="PropertyPaneStyle" TargetType="StackPanel">
        <Setter Property="BorderBrush" Value="{StaticResource ApplicationBackgroundColorBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
    </Style>

    <CornerRadius x:Key="ColorControlCornerRadii">3,3,3,3</CornerRadius>
    <x:Double x:Key="ColorControlCornerRadius">3</x:Double>

    <Style TargetType="components:SpGradientEditor">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="components:SpGradientEditor">
                    <Grid Name="Body">
                        <Rectangle Name="BackgroundRectangle"
                                   RadiusX="{StaticResource ColorControlCornerRadius}"
                                   RadiusY="{StaticResource ColorControlCornerRadius}">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="ms-appx:///SP_OpacityBg_Sm.png"  Stretch="None" AlignmentX="Center" AlignmentY="Bottom"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Name="GradientRectangle"
                                   RadiusX="{StaticResource ColorControlCornerRadius}"
                                   RadiusY="{StaticResource ColorControlCornerRadius}"
                                   Fill="#FF0000"/>

                        <Canvas Name="ThumbContainer" />

                        <Border x:Name="Border" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.08" Color="#000000"/>
                            </Border.BorderBrush>
                            <Border x:Name="BorderShadow" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Opacity="0.02" Color="#000000"/>
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="components:SpSuperSliderControl">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="components:SpSuperSliderControl">
                    <Grid Name="Body">
                        <Rectangle Name="BackgroundRectangle"
                                   RadiusX="{StaticResource ColorControlCornerRadius}"
                                   RadiusY="{StaticResource ColorControlCornerRadius}"
                                   Fill="{TemplateBinding Background}"/>
                        <Rectangle RadiusX="{StaticResource ColorControlCornerRadius}"
                                   RadiusY="{StaticResource ColorControlCornerRadius}"
                                   Fill="{TemplateBinding Foreground}"/>
                        <ContentPresenter Content="{TemplateBinding Thumb}" />

                        <Border x:Name="Border" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.08" Color="#000000"/>
                            </Border.BorderBrush>
                            <Border x:Name="BorderShadow" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Opacity="0.02" Color="#000000"/>
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="components:SpColorPickerControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="components:SpColorPickerControl">
                    <Grid Name="Body">
                        <!-- Fill is changed dynamically based on colorpicker value -->
                        <Rectangle Name="SelectedHueColor" Fill="Red"
                                   RadiusX="{StaticResource ColorControlCornerRadius}"
                                   RadiusY="{StaticResource ColorControlCornerRadius}"/>

                        <!-- Horizontal gradient for Saturation axis + vertical gradient for Brightness axis -->
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="White" />
                                    <GradientStop Offset="1" Color="Transparent" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Rectangle RadiusX="{StaticResource ColorControlCornerRadius}" RadiusY="{StaticResource ColorControlCornerRadius}">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0, 0">
                                    <GradientStop Offset="0" Color="Black" />
                                    <GradientStop Offset="1" Color="Transparent" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Canvas> <!-- TODO: why is this in a canvas while the 2D slider thumb isn't? -->
                            <ContentPresenter Content="{TemplateBinding Thumb}" Name="SampleSelector" />
                        </Canvas>

                        <Border x:Name="Border" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.08" Color="#000000"/>
                            </Border.BorderBrush>
                            <Border x:Name="BorderShadow" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="{StaticResource ColorControlCornerRadii}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Opacity="0.02" Color="#000000"/>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="components:SpColorSliderThumb">
        <!-- Note: SpGradientEditor::kThumbRadius should match this size -->
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="components:SpColorSliderThumb">
                    <Grid Height="16" Width="16">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="Unselected">
                                    <VisualState.Setters>
                                        <Setter Target="MainThumb.Fill" Value="White"/>
                                        <Setter Target="MainThumb.Margin" Value="3"/>
                                        <Setter Target="OuterBorder.Margin" Value="1"/>
                                        <Setter Target="OuterBorder.StrokeThickness" Value="2"/>
                                        <Setter Target="InnerBorder.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Ellipse Name="MainThumb" StrokeThickness="2" Stroke="White" Margin="1" />
                        <Ellipse Name="OuterBorder" Stroke="#FF000000" Opacity="0.2" />
                        <Ellipse Name="InnerBorder" Stroke="#FF000000" Opacity="0.2" Margin="3" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="components:SpButton" x:Key="DefaultSpButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="components:SpControlProperties.IconOpacity" Value="1" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="0,0,0,0" />
        <Setter Property="components:SpControlProperties.DisabledOpacity" Value="{ThemeResource ControlDisabledOpacity}" />
        <Setter Property="components:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}" />
        <Setter Property="components:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}" />
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}" />
        <Setter Property="components:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                                  Background="{TemplateBinding Background}"
                                  CornerRadius="{Binding Path=(components:SpControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                  Padding="0"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusRing.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Opacity" Value="1"/>
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{Binding Path=(components:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.IconPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Opacity" Value="{Binding Path=(components:SpControlProperties.DisabledOpacity), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            x:Name="RootContainer"
                                            Margin="{TemplateBinding Padding}"
                                            >
                            <components:SpIcon x:Name="buttonIcon" Icon="{Binding Path=(components:SpControlProperties.Icon),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding Path=(components:SpControlProperties.IconOpacity), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Line Width="{Binding Path=(components:SpControlProperties.Spacing),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Height="0"/>
                            <ContentPresenter x:Name="ContentPresenter"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      AutomationProperties.AccessibilityView="Raw"
                                                      />
                        </StackPanel>

                        <!--
                                /**
                                * The focus ring is displayed on top of the button content but it is not hit test visible.
                                * Use negative FocusOffset values to have the focus ring displayed outside the button content.
                                * Use the same values for FocusBrush, FocusThickness, FocusCornerRadius as for the button BorderBrush,
                                * BorderThickness, CornerRadius to have the focus ring displayed over the button border.
                                **/
                                -->
                        <Border x:Name="FocusRing"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Stretch"
                                        IsHitTestVisible="False"
                                        Visibility="Collapsed"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        CornerRadius="{Binding Path=(components:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Margin="{Binding Path=(components:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyButtonStyle" TargetType="components:SpButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Foreground" Value="{ThemeResource UiTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="buttonBorder.Background" Value="Transparent"/>
                                        <Setter Target="buttonBorder.BorderThickness" Value="2"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="buttonBorder.Background" Value="Transparent"/>
                                        <Setter Target="buttonBorder.BorderThickness" Value="2"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="buttonBorder.Background" Value="{ThemeResource UiTextBrush}"/>
                                        <Setter Target="buttonText.Foreground" Value="{ThemeResource InteractionBackgroundColor}"/>
                                        <Setter Target="buttonBorder.BorderThickness" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="buttonBorder.Background" Value="{StaticResource BtnBackgroundBrush}" />
                                        <Setter Target="buttonBorder.BorderThickness" Value="2" />
                                        <Setter Target="buttonBorder.BorderBrush" Value="{StaticResource ApplicationBackgroundColorBrush}" />
                                        <Setter Target="buttonText.Foreground" Value="{StaticResource ToolDisabledColor}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="{StaticResource SpRoundedButtonBorderRadius}"
                                        BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                        x:Name="buttonBorder">
                            <TextBlock TextAlignment="Center"
                                               VerticalAlignment="Center"
                                               Margin="{StaticResource SmallSidesMargin}"
                                               FontSize="{ThemeResource ControlContentThemeFontSize}"
                                               FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                               Foreground="{Binding Path=Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                               x:Name="buttonText"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="ScrollViewer" x:Key="ScrollViewerTemplate">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ScrollingIndicatorStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition From="MouseIndicator" To="NoIndicator">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="MouseIndicatorFull" To="NoIndicator">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScrollBarSeparator"
                                                                           Storyboard.TargetProperty="Opacity">
                                    <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDuration}" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractFinalKeyframe}" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="MouseIndicatorFull" To="MouseIndicator">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScrollBarSeparator"
                                                                           Storyboard.TargetProperty="Opacity">
                                    <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDuration}" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractFinalKeyframe}" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource SpScrollViewerSeparatorContractDelay}">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="TouchIndicator" To="NoIndicator">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                        <DiscreteObjectKeyFrame.Value>
                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="NoIndicator">
                        <Storyboard>
                            <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorContractDuration}"
                                                         Storyboard.TargetName="ScrollBarSeparator"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="TouchIndicator">
                        <Storyboard>
                            <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorContractDuration}"
                                                         Storyboard.TargetName="ScrollBarSeparator"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseIndicator">
                        <Storyboard>
                            <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorContractDuration}"
                                                         Storyboard.TargetName="ScrollBarSeparator"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseIndicatorFull">
                        <Storyboard>
                            <DoubleAnimation Duration="{ThemeResource SpScrollViewerSeparatorExpandDuration}"
                                                         Storyboard.TargetName="ScrollBarSeparator"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollContentPresenter x:Name="ScrollContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" Grid.RowSpan="2"/>
                <Grid Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" HorizontalAlignment="Right" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource SpScrollBar}"/>
                <ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource SpScrollBar}"/>
                <Border x:Name="ScrollBarSeparator" Background="{ThemeResource ScrollViewerScrollBarSeparatorBackground}" Grid.Column="1" Grid.Row="1"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="FocusCaptureScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="FocusVisualPrimaryThickness" Value="0"/>
        <Setter Property="FocusVisualSecondaryThickness" Value="0"/>
        <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}"/>
        <Setter Property="utils:SpFocusManager.IsFocusCaptureEnabled" Value="True"/>
    </Style>

    <Style x:Key="FocusCaptureContentControlStyle" TargetType="ContentControl">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="utils:SpFocusManager.IsFocusCaptureEnabled" Value="True"/>
    </Style>

    <Style x:Key="NoScrollFocusCaptureScrollViewerStyle" TargetType="ScrollViewer" BasedOn="{StaticResource FocusCaptureScrollViewerStyle}">
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="VerticalScrollMode" Value="Disabled"/>
    </Style>

    <Style x:Key="ToolbarContainerStyle" TargetType="ScrollViewer" BasedOn="{StaticResource NoScrollFocusCaptureScrollViewerStyle}">
        <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}" />
        <Setter Property="BorderThickness" Value="0,0,2,0" />
        <Setter Property="Width" Value="{ThemeResource ToolbarWidth}" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <Style x:Key="PIScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Background" Value="{ThemeResource PanelBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}" />
        <Setter Property="BorderThickness" Value="2,0,0,0" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}"/>
        <!-- These are added just to be sure that if the SV gains focus it will not be visible -->
        <Setter Property="FocusVisualPrimaryThickness" Value="0"/>
        <Setter Property="FocusVisualSecondaryThickness" Value="0"/>
    </Style>

    <Style x:Key="panelSplitter" TargetType="Grid">
        <!-- whole column used as resizer so background here is ame as border in ToolbarContainerStyle -->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value ="4" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="BorderThickness" Value="0 0 2 0" />
        <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColor}"/>
    </Style>

    <Style TargetType="components:SpTextBox">
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
    </Style>

    <Style x:Key="ListViewNoAnimationStyle"  TargetType="ListView">
        <Setter Property="ItemContainerTransitions">
            <Setter.Value>
                <TransitionCollection/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpToggleButtonBaseStyle" TargetType="components:SpToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8,8,8,8" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{ThemeResource ApplicationBackgroundColorBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="Transparent" />
        <Setter Property="components:SpControlProperties.DisabledOpacity" Value="{ThemeResource ControlDisabledOpacity}" />
        <Setter Property="components:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}" />
        <Setter Property="components:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}" />
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}" />
        <Setter Property="components:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}" />
        <Setter Property="components:SpControlProperties.Spacing" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="components:SpToggleButton">
                    <Grid x:Name="RootGrid"
                          UseLayoutRounding="False"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{Binding Path=(components:SpControlProperties.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                          CornerRadius="{Binding Path=(components:SpControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusRing.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Opacity" Value="1"/>
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="RootGrid.Background" Value="{Binding Path=(components:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Opacity" Value="{Binding Path=(components:SpControlProperties.DisabledOpacity), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Opacity" Value="1"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{Binding Path=(components:SpControlProperties.PressedBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.IconPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="CheckedDisabled" >
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Target="ContentPresenter.Opacity" Value="{Binding Path=(components:SpControlProperties.DisabledOpacity), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter Target="buttonIcon.Icon" Value="{Binding Path=(components:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed" To="Normal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Icon" Storyboard.TargetName="buttonIcon">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.Icon), RelativeSource={RelativeSource TemplatedParent}}">
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" To="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Icon" Storyboard.TargetName="buttonIcon">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.IconChecked), RelativeSource={RelativeSource TemplatedParent}}">
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel x:Name="ContentBox"
                                    Orientation="Horizontal"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <components:SpIcon x:Name="buttonIcon" Icon="{Binding Path=(components:SpControlProperties.Icon),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Line Width="{Binding Path=(components:SpControlProperties.Spacing),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Height="0"/>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Foreground="{TemplateBinding Foreground}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              AutomationProperties.AccessibilityView="Raw"/>
                        </StackPanel>
                        <Grid x:Name="badgeGridWithText"
                              Visibility="Collapsed"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Top"
                              Padding="2"
                              x:DeferLoadStrategy="Lazy">
                            <Rectangle x:Name="badgeRect"
                                       Width="19"
                                       Height="19"
                                       Fill="{ThemeResource StaticBlue500}"
                                       Stroke="{ThemeResource Grey3}"
                                       StrokeThickness="1"
                                       RadiusX="9.5"
                                       RadiusY="9.5" />
                            <TextBlock x:Name="badge"
                                       Text=""
                                       FontFamily="SpDialogBtnFontFace"
                                       FontSize="11"
                                       Foreground="White"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                        </Grid>
                        <Grid x:Name="badgeGrid"
                              Visibility="Collapsed"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Top"
                              Padding="8"
                              x:DeferLoadStrategy="Lazy">
                            <Ellipse Width="10"
                                     Height="10"
                                     Fill="{ThemeResource StaticBlue500}"
                                     Stroke="{ThemeResource Grey3}"
                                     StrokeThickness="1" />
                        </Grid>
                        <!--
                        /**
                        * The focus ring is displayed on top of the button content but it is not hit test visible.
                        * Use negative FocusOffset values to have the focus ring displayed outside the button content.
                        * Use the same values for FocusBrush, FocusThickness, FocusCornerRadius as for the button BorderBrush,
                        * BorderThickness, CornerRadius to have the focus ring displayed over the button border.
                        **/
                        -->
                        <Border x:Name="FocusRing"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                IsHitTestVisible="False"
                                Visibility="Collapsed"
                                BorderBrush="{Binding Path=(components:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding Path=(components:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                CornerRadius="{Binding Path=(components:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="{Binding Path=(components:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpToggleButtonQuietStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleButtonBaseStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.PressedBackground" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.BorderThickness" Value="0"/>
        <Setter Property="components:SpControlProperties.CornerRadius" Value="3,3,3,3"/>
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="3,3,3,3" />
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>
    </Style>

    <!-- Rounded SpToggleButton style for use in standalone applications (outside of SpToggle). -->
    <Style x:Key="SpToggleButtonRoundedStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleButtonBaseStyle}">
        <Setter Property="Background" Value="{ThemeResource BtnBackgroundBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource BtnBackgroundBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="Padding" Value="7.5,7.5,7.5,7.5" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="3,3,3,3"/>
        <Setter Property="components:SpControlProperties.BorderThickness" Value="1,1,1,1"/>
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="3,3,3,3"/>
        <Setter Property="components:SpControlProperties.FocusOffset" Value="-1,-1,-1,-1"/>
    </Style>

    <!-- Square middle button for use in SpToggle. Borders are augmented to accommodate so not a good candidate for a standalone button. -->
    <Style x:Key="SpToggleMiddleButtonStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleButtonRoundedStyle}">
        <Setter Property="Padding" Value="7.5,7,7.5,7" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="0,0,0,0"/>
        <Setter Property="components:SpControlProperties.BorderThickness" Value="0.5,1,0.5,1"/>
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="0,0,0,0"/>
        <Setter Property="components:SpControlProperties.FocusOffset" Value="-0.5,-1,-0.5,-1"/>
    </Style>

    <!-- Left-rounded button for use as the first button in SpToggle -->
    <Style x:Key="SpToggleFirstButtonStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleMiddleButtonStyle}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="7,7,7.5,7" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="3,0,0,3"/>
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="3,0,0,3"/>
        <Setter Property="components:SpControlProperties.FocusOffset" Value="-1,-1,-0.5,-1"/>
        <Setter Property="components:SpControlProperties.BorderThickness" Value="1,1,0.5,1"/>
    </Style>

    <!-- Right-rounded button for use as the first button in SpToggle -->
    <Style x:Key="SpToggleLastButtonStyle" TargetType="components:SpToggleButton" BasedOn="{StaticResource SpToggleMiddleButtonStyle}">
        <Setter Property="Padding" Value="7.5,7,7,7" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="0,3,3,0"/>
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="0,3,3,0"/>
        <Setter Property="components:SpControlProperties.FocusOffset" Value="-0.5,-1,-1,-1"/>
        <Setter Property="components:SpControlProperties.BorderThickness" Value="0.5,1,1,1"/>
    </Style>

    <components:SpToggleButtonStyleSelector x:Key="SpToggleItemSelector"
                                               standardStyle="{StaticResource SpToggleMiddleButtonStyle}"
                                               firstButtonStyle="{StaticResource SpToggleFirstButtonStyle}"
                                               lastButtonStyle="{StaticResource SpToggleLastButtonStyle}"/>

    <Style TargetType="components:SpProgressBar">
        <Setter Property="Foreground" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource ProgressBarBorderThemeThickness}"/>
        <Setter Property="MinHeight" Value="{ThemeResource ProgressBarThemeMinHeight}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid Background="#FFCFBD36" x:Name="MasterGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Updating" To="Determinate"/>
                                    <VisualTransition From="Paused" To="Determinate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarDisplay"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Indeterminate" To="Determinate">
                                        <Storyboard>
                                            <FadeInThemeAnimation TargetName="EllipseGrid"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Updating"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Error">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarDisplay">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Paused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ProgressBarDisplay">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.25" To="{ThemeResource ProgressBarIndicatorPauseOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarDisplay"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="EllipseGrid" Opacity="0" />
                        <Grid
                                x:Name="DeterminateRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <Grid
                                x:Name="ProgressBarDisplay"
                                Background="{TemplateBinding Foreground}">
                            </Grid>
                            <Rectangle x:Name="ProgressBarIndicator"
                                        Fill="Transparent"
                                        HorizontalAlignment="Left"
                                        Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpCheckBox" TargetType="CheckBox">
        <Setter Property="Padding" Value="12,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{ThemeResource SpCheckBoxTextFontFace}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpCheckBoxFontSize}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="RootGrid" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CombinedStates">
                                <VisualState x:Name="UncheckedNormal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxUnchecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UncheckedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus States-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxUnchecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UncheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UncheckedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedNormal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus states -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus states -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminateNormal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminatePointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminatePressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminateDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />

                                        <!-- Focus States -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="UncheckedPointerOver" To="UncheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />

                                            <!-- Focus States -->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="UncheckedNormal" To="UncheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />

                                            <!-- Focus States -->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="UncheckedPressed" To="UncheckedNormal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteractiveBrush}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxNonInteracting}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />

                                            <!-- Focus States -->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="CheckedPointerOver" To="UncheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />

                                            <!-- Focus States -->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{ThemeResource SpCheckBoxUnchecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="CheckedPointerOver" To="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />

                                            <!-- Focus States -->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="IndeterminatePointerOver" To="UncheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteractiveBrush}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{TemplateBinding Background}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxInteracting}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />

                                            <!-- Focus States -->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangleFocus">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpCheckBoxFocusBrush}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{ThemeResource SpCheckBoxUnchecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckTransitionRectangleFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="CheckGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="IndeterminateGlyphFocus" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusComponents">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NonFocusComponents">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="NonFocusComponents" Height="Auto" VerticalAlignment="Center">
                            <Rectangle
                                    x:Name="NormalRectangle"
                                    Fill="{TemplateBinding Background}"
                                    Height="{StaticResource SpCheckBoxCheckSize}"
                                    Stroke="{ThemeResource SpCheckBoxNonInteractiveBrush}"
                                    StrokeThickness="{ThemeResource SpCheckBoxBorderThemeThickness}"
                                    RadiusX="{ThemeResource SpCheckBoxBorderRadius}"
                                    RadiusY="{ThemeResource SpCheckBoxBorderRadius}"
                                    UseLayoutRounding="False"
                                    Width="{StaticResource SpCheckBoxCheckSize}"
                                    Canvas.ZIndex="300"/>
                            <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="IndeterminateGlyph" Source="SP_Checkbox_Indeterminate16px.png" RenderTransformOrigin="0.5,0.5" Canvas.ZIndex="400">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Image.RenderTransform>
                            </Image>
                            <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="CheckGlyph" Source="SP_Checkbox16px.png" RenderTransformOrigin="0.5,0.5" Canvas.ZIndex="400">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Image.RenderTransform>
                            </Image>
                            <Rectangle
                                    x:Name="CheckTransitionRectangle"
                                    Fill="{TemplateBinding Background}"
                                    Height="{StaticResource SpCheckBoxTransitionPanelSize}"
                                    Stroke="Transparent"
                                    StrokeThickness="0"
                                    Width="{StaticResource SpCheckBoxTransitionPanelSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RadiusX="{ThemeResource SpCheckBoxBorderRadius}"
                                    RadiusY="{ThemeResource SpCheckBoxBorderRadius}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <Grid x:Name="FocusComponents" Height="Auto" VerticalAlignment="Center" Visibility="Collapsed">
                            <Rectangle
                                    x:Name="NormalRectangleFocus"
                                    Fill="{TemplateBinding Background}"
                                    Height="{StaticResource SpCheckBoxCheckSize}"
                                    Stroke="{ThemeResource SpCheckBoxFocusBrush}"
                                    StrokeThickness="{ThemeResource SpCheckBoxBorderThemeThickness}"
                                    RadiusX="{ThemeResource SpCheckBoxBorderRadius}"
                                    RadiusY="{ThemeResource SpCheckBoxBorderRadius}"
                                    UseLayoutRounding="False"
                                    Width="{StaticResource SpCheckBoxCheckSize}"/>
                            <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="IndeterminateGlyphFocus" Source="SP_Checkbox_Indeterminate16px.png" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Image.RenderTransform>
                            </Image>
                            <Image Width="{StaticResource SpCheckBoxGlyphSize}" Height="{StaticResource SpCheckBoxGlyphSize}" x:Name="CheckGlyphFocus" Source="SP_Checkbox16px.png" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Image.RenderTransform>
                            </Image>
                            <Rectangle
                                    x:Name="CheckTransitionRectangleFocus"
                                    Fill="{TemplateBinding Background}"
                                    Height="{StaticResource SpCheckBoxTransitionPanelSize}"
                                    Stroke="Transparent"
                                    StrokeThickness="0"
                                    Width="{StaticResource SpCheckBoxTransitionPanelSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RadiusX="{ThemeResource SpCheckBoxBorderRadius}"
                                    RadiusY="{ThemeResource SpCheckBoxBorderRadius}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <ContentPresenter
                                x:Name="ContentPresenter"
                                AutomationProperties.AccessibilityView="Raw"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Content="{TemplateBinding Content}"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                TextWrapping="Wrap"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpRadio" TargetType="RadioButton">
        <Setter Property="Padding" Value="12,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="AnimatingInEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:0.125"/>
                                        <DoubleAnimation Storyboard.TargetName="AnimatingInEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SpRadioForegroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ellipses">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <!--
                                        PLATFORM ISSUE -> including this animation can cause the duration for pressed state to run for 1s

                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckOuterEllipse">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetName="AnimatingOutEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0" To="1" Duration="0:0:0.125"/>
                                                <DoubleAnimation Storyboard.TargetName="AnimatingOutEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.125"/>
                                            </Storyboard>
                                        </VisualTransition>-->
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpRadioFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ellipses" Height="Auto" VerticalAlignment="Center">
                            <Ellipse
                                    x:Name="CheckOuterEllipse"
                                    Fill="{StaticResource SpRadioForegroundBrush}"
                                    Height="{StaticResource SpRadioButtonEllipsSize}"
                                    Opacity="0"
                                    Stroke="{ThemeResource SpRadioForegroundColor}"
                                    StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}"
                                    UseLayoutRounding="False"
                                    Width="{StaticResource SpRadioButtonEllipsSize}"/>
                            <Ellipse
                                    x:Name="AnimatingOutEllipse"
                                    Width="{StaticResource SpRadioButtonEllipsSize}"
                                    Height="{StaticResource SpRadioButtonEllipsSize}"
                                    IsHitTestVisible="False"
                                    UseLayoutRounding="False"
                                    Stroke="Transparent"
                                    StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}"
                                    Fill="{StaticResource SpRadioBackgroundColorBrush}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse
                                    x:Name="CheckGlyph"
                                    Fill="{StaticResource SpRadioBackgroundColorBrush}"
                                    Height="{StaticResource SpRadioButtonEllipsSize}"
                                    Opacity="0"
                                    UseLayoutRounding="False"
                                    Width="{StaticResource SpRadioButtonEllipsSize}"
                                    Stroke="{ThemeResource SpRadioForegroundBrush}"
                                    StrokeThickness="5.5"/>
                            <Ellipse
                                    x:Name="AnimatingInEllipse"
                                    Width="{StaticResource SpRadioButtonEllipsSize}"
                                    Height="{StaticResource SpRadioButtonEllipsSize}"
                                    IsHitTestVisible="False"
                                    UseLayoutRounding="False"
                                    Stroke="Transparent"
                                    StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}"
                                    Fill="{StaticResource SpRadioForegroundBrush}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse
                                    x:Name="OuterEllipse"
                                    Height="{StaticResource SpRadioButtonEllipsSize}"
                                    Stroke="{ThemeResource SpRadioForegroundColor}"
                                    StrokeThickness="{StaticResource SpRadioButtonEllipsBorderSize}"
                                    UseLayoutRounding="False"
                                    Width="{StaticResource SpRadioButtonEllipsSize}"/>
                        </Grid>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            AutomationProperties.AccessibilityView="Raw"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Content="{TemplateBinding Content}"
                            Grid.Column="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            TextWrapping="Wrap"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpCrossButton" TargetType="Button">
        <Setter Property="Padding" Value="8,4,8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalImageIcon" >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedImageIcon" >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalImageIcon" >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedImageIcon" >
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalImageIcon" >
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusImageIcon" >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Image x:Name="PressedImageIcon" Source="SP_CloseCancel2_Sm_S.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Image x:Name="NormalImageIcon" Source="SP_CloseCancel2_Sm.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Image x:Name="FocusImageIcon" Source="SP_CloseSmall_R.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpDropdownStandardItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
                                <Setter Property="TextLineBounds" Value="Full"/>
                                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
                                <Setter Property="FontFamily" Value="Segoe UI Normal"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="FontSize" Value="12"/>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundHover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundHover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundSelected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundSelected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemBackgroundHover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboboxItemForegroundSelected}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="26" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"/>
                        <Grid Margin="-2,0,0,0"> <!-- Counter FocusRect's BorderThickness -->
                            <ContentPresenter x:Name="ContentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              Style="{StaticResource BodyContentPresenterStyle}"
                                              TextWrapping="NoWrap"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock x:Name="comboBoxItemText"
                                           Text="{TemplateBinding Content}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top"
                                           TextTrimming="CharacterEllipsis" />
                            </ContentPresenter>
                        </Grid>
                        <Image x:Name="Tick"
                               Source="SP_Check_R.png"
                               Stretch="None"
                               AutomationProperties.AccessibilityView="Raw"
                               Grid.Column="1"
                               HorizontalAlignment="Right"
                               IsHitTestVisible="False"
                               Margin="0,10,10,10"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"/>
                        <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="2,0,0,0" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="SpDropdownItemSeparatorStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="LayoutRoot"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Control.IsTemplateFocusTarget="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                                <VisualState x:Name="SelectedDisabled"/>
                                <VisualState x:Name="SelectedPointerOver"/>
                                <VisualState x:Name="SelectedPressed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                                                  Height="{ThemeResource SpDropdownSeparatorThickness}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  BorderBrush="{ThemeResource SpDropdownSeparatorBrush}"
                                                  BorderThickness="{ThemeResource SpDropdownSeparatorBorderThickness}"
                                                  Margin="{ThemeResource SpDropdownSeparatorPadding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpDropdownQuietItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#242424"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
                                <Setter Property="TextLineBounds" Value="Full"/>
                                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
                                <Setter Property="FontFamily" Value="Segoe UI Normal"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="FontSize" Value="12"/>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="26" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"/>
                        <ContentPresenter x:Name="ContentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          Style="{StaticResource BodyContentPresenterStyle}"
                                          TextWrapping="NoWrap"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextBlock x:Name="comboBoxItemText"
                                       Text="{TemplateBinding Content}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       TextTrimming="CharacterEllipsis" />
                        </ContentPresenter>
                        <Image x:Name="Tick"
                               Source="SP_Check_R.png"
                               Stretch="None"
                               AutomationProperties.AccessibilityView="Raw"
                               Grid.Column="1"
                               HorizontalAlignment="Right"
                               IsHitTestVisible="False"
                               Margin="0,10,10,10"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"/>
                        <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <converter:SpVisibilityConverter x:Key="VisibilityConverter"/>

    <Style x:Key="SpDropdownRichItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
                                <Setter Property="TextLineBounds" Value="Full"/>
                                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
                                <Setter Property="FontFamily" Value="Segoe UI Normal"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="FontSize" Value="12"/>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                         <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                         <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                         <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                         <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconHover">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftIconDefault">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                         <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextDesc">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="34" />
                            </Grid.RowDefinitions>
                            <Grid  Margin="8,0,10,0"
                                AutomationProperties.AccessibilityView="Raw"
                                HorizontalAlignment="Left"
                                IsHitTestVisible="False"
                                VerticalAlignment="Center"
                                Grid.Column="0"
                                Visibility="{Binding LeftIconDefault, Converter={StaticResource VisibilityConverter}}">
                                <Image x:Name="LeftIconDefault"
                                    Stretch="None"
                                    Visibility="Visible"
                                    Source="{Binding LeftIconDefault, Mode=TwoWay }"/>
                                <Image x:Name="LeftIconHover"
                                    Stretch="None"
                                    Visibility="Collapsed"
                                    Source="{Binding LeftIconHover, Mode=TwoWay }"/>
                                <Image x:Name="LeftIconSelected"
                                    Stretch="None"
                                    Visibility="Collapsed"
                                    Source="{Binding LeftIconSelected, Mode=TwoWay }"/>
                            </Grid>
                            <StackPanel Orientation="Vertical"
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Grid.Column="1">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="{Binding ToolTipText}" 
                                    Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}}"/>
                                </ToolTipService.ToolTip>
                                <TextBlock x:Name="RichComboTextTitle"
                                    Text="{Binding Title}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    TextTrimming="CharacterEllipsis"/>
                                <TextBlock x:Name="RichComboTextDesc"
                                    Text="{Binding Description }"
                                    Foreground="{ThemeResource SpectrumGray1 }"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    TextTrimming="CharacterEllipsis"
                                    Visibility="{Binding Description, Converter={StaticResource VisibilityConverter}}"/>
                            </StackPanel>
                        </Grid>

                        <!-- Set the Visibility of ContentPresenter to Collapsed as the ComboBoxItem content ie. icon, title and detail is bind with the SpDropDownRichItem above. -->
                        <ContentPresenter x:Name="ContentPresenter"
                            Visibility="Collapsed">
                        </ContentPresenter>
                        <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed" >
                            <ToolTipService.ToolTip>
                                <ToolTip Content="{Binding ToolTipText}" 
                                    Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}}"/>
                            </ToolTipService.ToolTip>
                        </Border> 
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpDropdownRichSimpleItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
                                <Setter Property="TextLineBounds" Value="Full"/>
                                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
                                <Setter Property="FontFamily" Value="Segoe UI Normal"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="FontSize" Value="12"/>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="RichComboTextTitle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Vertical"
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Grid.Column="1">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="{Binding ToolTipText}" 
                                    Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}}"/>
                                </ToolTipService.ToolTip>
                                <TextBlock x:Name="RichComboTextTitle"
                                    Text="{Binding Title}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    TextTrimming="CharacterEllipsis"/>
                            </StackPanel>
                        </Grid>

                        <!-- Set the Visibility of ContentPresenter to Collapsed as the ComboBoxItem content ie. icon, title and detail is bind with the SpDropDownRichItem above. -->
                        <ContentPresenter x:Name="ContentPresenter"
                            Visibility="Collapsed">
                        </ContentPresenter>
                        <Image x:Name="Tick"
                               Source="SP_Check_R.png"
                               Stretch="None"
                               AutomationProperties.AccessibilityView="Raw"
                               Grid.Column="1"
                               HorizontalAlignment="Right"
                               IsHitTestVisible="False"
                               Margin="0,10,10,10"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"/>
                        <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed" >
                            <ToolTipService.ToolTip>
                                <ToolTip Content="{Binding ToolTipText}" 
                                    Visibility="{Binding ToolTipText, Converter={StaticResource VisibilityConverter}}"/>
                            </ToolTipService.ToolTip>
                        </Border> 
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <components:SpDropdownItemSelector x:Key="SpDropdownItemSelector"
                                               standardStyle="{StaticResource SpDropdownStandardItemStyle}"
                                               separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"/>

    <components:SpDropdownItemSelector x:Key="SpDropdownQuietItemSelector"
                                               standardStyle="{StaticResource SpDropdownQuietItemStyle}"
                                               separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"/>

    <components:SpDropdownItemSelector x:Key="SpDropdownRichItemSelector"
                                               standardStyle="{StaticResource SpDropdownRichItemStyle}"
                                               separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"/>

    <components:SpDropdownItemSelector x:Key="SpDropdownRichSimpleItemSelector"
                                               standardStyle="{StaticResource SpDropdownRichSimpleItemStyle}"
                                               separatorStyle="{StaticResource SpDropdownItemSeparatorStyle}"/>

    <Style x:Key="SpScrollBar" TargetType="ScrollBar">
        <Setter Property="MinWidth" Value="12"/>
        <Setter Property="MinHeight" Value="12"/>
        <Setter Property="Background" Value="{ThemeResource ScrollBarBackground}"/>
        <Setter Property="Foreground" Value="{ThemeResource ScrollBarForeground}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource ScrollBarBorderBrush}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E3;" MirroredWhenRightToLeft="True"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E2;" MirroredWhenRightToLeft="True"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E5;"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" BorderBrush="{ThemeResource ScrollBarButtonBorderBrush}" Background="{ThemeResource ScrollBarButtonBackground}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonBorderBrushDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarButtonArrowForegroundDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" Foreground="{ThemeResource ScrollBarButtonArrowForeground}" FontSize="6" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E4;"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                <Grid Background="Transparent" Width="12">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="ThumbVisual" Margin="0,0,2,0" HorizontalAlignment="Right" Fill="{StaticResource SpScrollbarForegroundBrush}" RadiusX="{StaticResource SpScrollbarRadius}" RadiusY="{StaticResource SpScrollbarRadius}" Width="{StaticResource SpScrollbarWidth}"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                <Grid Background="Transparent" Height="12">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ThumbVisual">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarThumbFillDisabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="ThumbVisual" Margin="0,0,0,2" VerticalAlignment="Bottom" Fill="{StaticResource SpScrollbarForegroundBrush}" RadiusX="{StaticResource SpScrollbarRadius}" RadiusY="{StaticResource SpScrollbarRadius}" Height="{StaticResource SpScrollbarWidth}"/>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBackgroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBorderBrushPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokePointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokePointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokeDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackStrokeDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarTrackFillDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalPanningThumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarPanningThumbBackgroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalPanningThumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ScrollBarPanningThumbBackgroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ScrollingIndicatorStates">
                                <VisualState x:Name="TouchIndicator">
                                    <Storyboard>
                                        <FadeInThemeAnimation TargetName="HorizontalPanningRoot"/>
                                        <FadeInThemeAnimation TargetName="VerticalPanningRoot"/>
                                        <FadeOutThemeAnimation TargetName="HorizontalRoot"/>
                                        <FadeOutThemeAnimation TargetName="VerticalRoot"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIndicator">
                                    <Storyboard>
                                        <FadeInThemeAnimation TargetName="HorizontalRoot"/>
                                        <FadeInThemeAnimation TargetName="VerticalRoot"/>
                                        <FadeOutThemeAnimation TargetName="HorizontalPanningRoot"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalPanningRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <FadeOutThemeAnimation TargetName="VerticalPanningRoot"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalPanningRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="HorizontalRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Boolean>True</x:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="VerticalRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Boolean>True</x:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoIndicator">
                                    <Storyboard>
                                        <FadeOutThemeAnimation BeginTime="0" TargetName="HorizontalPanningRoot"/>
                                        <FadeOutThemeAnimation BeginTime="0" TargetName="VerticalPanningRoot"/>
                                        <FadeOutThemeAnimation BeginTime="0" TargetName="HorizontalRoot"/>
                                        <FadeOutThemeAnimation BeginTime="0" TargetName="VerticalRoot"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalRoot" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsHitTestVisible="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="5" Fill="{ThemeResource ScrollBarTrackFill}" Margin="0" Stroke="{ThemeResource ScrollBarTrackStroke}" StrokeThickness="{ThemeResource ScrollBarTrackBorderThemeThickness}" Visibility="Collapsed"/>
                            <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" IsTabStop="False" Interval="50" Margin="0" MinHeight="12" Template="{StaticResource HorizontalDecrementTemplate}" VerticalAlignment="Center" Width="12" Visibility="Collapsed"/>
                            <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" HorizontalAlignment="Stretch" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" VerticalAlignment="Stretch" Width="0"/>
                            <Thumb x:Name="HorizontalThumb" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource ScrollBarThumbBackground}" Grid.Column="2" Height="12" MinWidth="12" Template="{StaticResource HorizontalThumbTemplate}"/>
                            <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" HorizontalAlignment="Stretch" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" VerticalAlignment="Stretch" />
                            <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" IsTabStop="False" Interval="50" Margin="0" MinHeight="12" Template="{StaticResource HorizontalIncrementTemplate}" VerticalAlignment="Center"  Width="12" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="HorizontalPanningRoot" MinWidth="24">
                            <Border x:Name="HorizontalPanningThumb" CornerRadius="{StaticResource SpScrollbarTouchThumbRadius}" BorderThickness="0" Background="{ThemeResource ScrollBarPanningThumbBackground}" HorizontalAlignment="Left" Height="{StaticResource SpScrollbarWidth}" Margin="0,2,0,2" MinWidth="32" VerticalAlignment="Bottom"/>
                        </Grid>
                        <Grid x:Name="VerticalRoot" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsHitTestVisible="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="VerticalTrackRect" Fill="{ThemeResource ScrollBarTrackFill}" Margin="0" Grid.RowSpan="5" Stroke="{ThemeResource ScrollBarTrackStroke}" StrokeThickness="{ThemeResource ScrollBarTrackBorderThemeThickness}" Visibility="Collapsed"/>
                            <RepeatButton x:Name="VerticalSmallDecrease" HorizontalAlignment="Center" Height="12" IsTabStop="False" Interval="50" Margin="0" MinWidth="12" Grid.Row="0" Template="{StaticResource VerticalDecrementTemplate}" Visibility="Collapsed"/>
                            <RepeatButton x:Name="VerticalLargeDecrease" HorizontalAlignment="Stretch" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}"  VerticalAlignment="Stretch"/>
                            <Thumb x:Name="VerticalThumb" HorizontalAlignment="Right" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource ScrollBarThumbBackground}" MinHeight="12" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}" Width="12"/>
                            <RepeatButton x:Name="VerticalLargeIncrease" HorizontalAlignment="Stretch" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}" VerticalAlignment="Stretch" />
                            <RepeatButton x:Name="VerticalSmallIncrease" HorizontalAlignment="Center" Height="12" IsTabStop="False" Interval="50" Margin="0" MinWidth="12" Grid.Row="4" Template="{StaticResource VerticalIncrementTemplate}" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="VerticalPanningRoot" MinHeight="24">
                            <Border x:Name="VerticalPanningThumb"  CornerRadius="{StaticResource SpScrollbarTouchThumbRadius}" BorderThickness="0" Background="{ThemeResource ScrollBarPanningThumbBackground}" HorizontalAlignment="Right" Margin="2,0,2,0" MinHeight="32" VerticalAlignment="Top" Width="{StaticResource SpScrollbarWidth}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpScrollViewer" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollMode" Value="Auto"/>
        <Setter Property="VerticalScrollMode" Value="Auto"/>
        <Setter Property="IsHorizontalRailEnabled" Value="True"/>
        <Setter Property="IsVerticalRailEnabled" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ZoomMode" Value="Disabled"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="#323232"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}" />
    </Style>

    <!-- this additional scroll viewer style is required for the Standard dropdown to re-allign the vertical scrollbar with a 2px right margin
         because the standard style scroll viewer uses a -1 margin for placement in the popup to keep the border alignment with the main
         control correct. -->
    <Style x:Key="SpScrollViewerStandardDropdown" TargetType="ScrollViewer" BasedOn="{StaticResource SpScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ScrollingIndicatorStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseIndicator" To="NoIndicator">
                                        <Storyboard>
                                            <FadeOutThemeAnimation BeginTime="0:0:3" TargetName="ScrollBarSeparator"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="TouchIndicator" To="NoIndicator">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ScrollBarSeparator"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoIndicator">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ScrollBarSeparator"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TouchIndicator">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ScrollBarSeparator"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIndicator">
                                    <Storyboard>
                                        <FadeInThemeAnimation TargetName="ScrollBarSeparator"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="VerticalScrollBar">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IndicatorMode" Storyboard.TargetName="HorizontalScrollBar">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" Grid.RowSpan="2"/>
                            <Grid Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                            <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" HorizontalAlignment="Right" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource SpScrollBar}" Margin="0,0,1,0"/>
                            <ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource SpScrollBar}"/>
                            <Border x:Name="ScrollBarSeparator" Background="{ThemeResource ScrollViewerScrollBarSeparatorBackground}" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="SpDropDownDefaultTemplate">
        <Grid>
            <TextBlock x:Name="comboBoxText" Text="{Binding}" HorizontalAlignment="Left" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" />
        </Grid>
    </DataTemplate>

    <Style x:Key="SpDropdownQuietStyle" TargetType="components:SpDropdown">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="components:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"/>
        <Setter Property="components:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.HeaderBorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"/>
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownQuietItemSelector}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource SpDropDownDefaultTemplate}" />
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"/>
                                        <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.Visibility" Value="Visible"/>
                                        <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"/>
                                        <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
                                                                         OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                         OpenedTargetName="PopupBorder"
                                                                         OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
                                                                          OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                          OpenedTargetName="PopupBorder"
                                                                          OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownShowPosition">
                                <VisualState x:Name="DropDownShowClosed"/>
                                <VisualState x:Name="DropDownShowBelow"/>
                                <VisualState x:Name="DropDownShowAbove"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter"
                                                  Padding="{ThemeResource SpDropdownLabelPadding}"
                                                  Content="{TemplateBinding Header}"
                                                  FontSize="{ThemeResource SpDropdownLabelFontSize}"
                                                  FontWeight="{ThemeResource SpDropdownFontWeight}"
                                                  FlowDirection="{TemplateBinding FlowDirection}"
                                                  Visibility="Collapsed"
                                                  Foreground="{ThemeResource SpDropdownLabelBrush}"
                                                  x:DeferLoadStrategy="Lazy"/>
                        <Border x:Name="Background"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>
                        <Border x:Name="HighlightBackground"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>

                        <!-- Give the ComboBox a default ContentPresneter. To have full control of how things get presented,
                             make it invisible and use our ComboContentPresenter instead -->
                        <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"/>
                        <ContentPresenter
                                    x:Name="ComboContentPresenter"
                                    Height="{ThemeResource SpDropdownHeight}"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontWeight="{ThemeResource SpDropdownFontWeight}"
                                    Grid.Row="1"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ContentTemplate="{TemplateBinding ItemTemplate}"/>

                        <ContentPresenter x:Name="DropDownGlyph"
                                                  Grid.Column="1"
                                                  Grid.Row="1"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch">
                            <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                                <Border Width="{StaticResource SpDropdownHeight}">
                                    <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ContentPresenter>
                        <Border x:Name="FocusIndicator"
                                        BorderBrush="{StaticResource SpDropdownFocusBorderBrush}"
                                        BorderThickness="1"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        Height="1"
                                        Visibility="Collapsed" />
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                            HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer"
                                        Style="{StaticResource SpScrollViewer}"
                                        AutomationProperties.AccessibilityView="Raw"
                                        BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                        Background="Transparent"
                                        Foreground="{ThemeResource SpDropdownTextBrush}"
                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                        IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        VerticalSnapPointsType="OptionalSingle"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                        VerticalSnapPointsAlignment="Near"
                                        ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpDropdownRichStyle" TargetType="components:SpDropdown" BasedOn="{StaticResource SpDropdownQuietStyle}">
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownRichItemSelector}"/>
    </Style>

    <Style x:Key="SpDropdownRichSimpleStyle" TargetType="components:SpDropdown" BasedOn="{StaticResource SpDropdownQuietStyle}">
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownRichSimpleItemSelector}"/>
    </Style>

    <Style x:Key="SpDropdownStandardStyle" TargetType="components:SpDropdown">
        <Setter Property="Padding" Value="{StaticResource SpDropdownMainPadding}"/>
        <Setter Property="MinWidth" Value="{StaticResource SpDropdownMinWidth}"/>
        <Setter Property="DropdownPopupLeftPosition" Value="0"/>
        <Setter Property="components:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"/>
        <Setter Property="components:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.HeaderBorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"/>
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownItemSelector}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource SpDropDownDefaultTemplate}" />
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="ComboBoxGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{ThemeResource SpDropdownGridSize}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"/>
                                        <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="Background.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"/>
                                        <Setter Target="HightlightBackground.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"/>
                                        <Setter Target="Background.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"/>
                                        <Setter Target="HightlightBackground.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <VisualState.Setters>
                                        <Setter Target="DropSeparator.Visibility" Value="Visible"/>
                                        <Setter Target="Background.Visibility" Value="Collapsed"/>
                                        <Setter Target="BackgroundOpen.Visibility" Value="Visible"/>
                                        <Setter Target="HightlightBackground.Visibility" Value="Collapsed"/>
                                        <Setter Target="HightlightBackgroundOpen.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownShowPosition">
                                <VisualState x:Name="DropDownShowClosed"/>
                                <VisualState x:Name="DropDownShowBelow">
                                    <VisualState.Setters>
                                        <Setter Target="BackgroundOpenUp.Visibility" Value="Collapsed"/>
                                        <Setter Target="BackgroundOpenDown.Visibility" Value="Visible"/>
                                        <Setter Target="HightlightBackgroundOpenUp.Visibility" Value="Collapsed"/>
                                        <Setter Target="HightlightBackgroundOpenDown.Visibility" Value="Visible"/>
                                        <Setter Target="DropSeparatorBar.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="PopupBorder.BorderThickness" Value="1,0,1,1"/>
                                        <Setter Target="PopupBorder.CornerRadius" Value="{StaticResource SpDropdownOpenListBorderRadius}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DropDownShowAbove">
                                    <VisualState.Setters>
                                        <Setter Target="BackgroundOpenUp.Visibility" Value="Visible"/>
                                        <Setter Target="BackgroundOpenDown.Visibility" Value="Collapsed"/>
                                        <Setter Target="HightlightBackgroundOpenUp.Visibility" Value="Visible"/>
                                        <Setter Target="HightlightBackgroundOpenDown.Visibility" Value="Collapsed"/>
                                        <Setter Target="DropSeparatorBar.VerticalAlignment" Value="Top"/>
                                        <Setter Target="PopupBorder.BorderThickness" Value="1,1,1,0"/>
                                        <Setter Target="PopupBorder.CornerRadius" Value="{StaticResource SpDropdownOpenListUpBorderRadius}"/>
                                        <Setter Target="PopupBorder.Padding" Value="0,0,0,14"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
                                                                         OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                         OpenedTargetName="PopupBorder"
                                                                         OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
                                                                          OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                          OpenedTargetName="PopupBorder"
                                                                          OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter"
                                                  Padding="{StaticResource SpDropdownLabelPadding}"
                                                  Content="{TemplateBinding Header}"
                                                  FontSize="{StaticResource SpDropdownLabelFontSize}"
                                                  FontWeight="{StaticResource SpDropdownFontWeight}"
                                                  FlowDirection="{TemplateBinding FlowDirection}"
                                                  Visibility="Collapsed"
                                                  Foreground="{StaticResource SpDropdownLabelBrush}"
                                                  x:DeferLoadStrategy="Lazy"/>
                        <Border x:Name="Background"
                                        CornerRadius="{StaticResource SpDropdownBorderRadius}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>
                        <Grid x:Name="BackgroundOpen"
                                        Background="Transparent"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        Visibility="Collapsed">
                            <Border x:Name="BackgroundOpenDown"
                                        CornerRadius="{StaticResource SpDropdownOpenBorderRadius}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,1,1,0"
                                        Background="{TemplateBinding Background}"
                                        Visibility="Visible"/>
                            <Border x:Name="BackgroundOpenUp"
                                        CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,0,1,1"
                                        Background="{TemplateBinding Background}"
                                        Visibility="Collapsed"/>
                        </Grid>
                        <Border x:Name="HightlightBackground"
                                        CornerRadius="{StaticResource SpDropdownBorderRadius}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>
                        <Grid  x:Name="HightlightBackgroundOpen"
                                        Background="Transparent"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        Visibility="Collapsed">
                            <Border x:Name="HightlightBackgroundOpenDown"
                                            CornerRadius="{StaticResource SpDropdownOpenBorderRadius}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1,1,1,0"
                                            Background="{TemplateBinding Background}"/>
                            <Border x:Name="HightlightBackgroundOpenUp"
                                            CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1,0,1,1"
                                            Background="{TemplateBinding Background}"/>
                        </Grid>

                        <!-- Give the ComboBox a default ContentPresneter. To have full control of how things get presented,
                             make it invisible and use our ComboContentPresenter instead -->
                        <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"/>
                        <ContentPresenter
                                    x:Name="ComboContentPresenter"
                                    Height="{ThemeResource SpDropdownHeight}"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontWeight="{ThemeResource SpDropdownFontWeight}"
                                    Grid.Row="1"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ContentTemplate="{TemplateBinding ItemTemplate}"/>

                        <Grid x:Name="DropSeparator"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        Visibility="Collapsed">
                            <Border x:Name="DropSeparatorBar"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0,0,0,1"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Bottom"
                                            Height="1"/>
                        </Grid>
                        <ContentPresenter x:Name="DropDownGlyph"
                                                  Grid.Column="1"
                                                  Grid.Row="1"
                                                  Margin="0"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch">
                            <Grid>
                                <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                        </ContentPresenter>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,1,1"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{StaticResource SpDropdownOpenListBorderRadius}"
                                HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer"
                                    Style="{StaticResource SpScrollViewerStandardDropdown}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                    Background="Transparent"
                                    Foreground="{ThemeResource SpDropdownTextBrush}"
                                    HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                    IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                    VerticalSnapPointsType="OptionalSingle"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                    VerticalSnapPointsAlignment="Near"
                                    ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpDropdownRichStandardStyle" TargetType="components:SpDropdown" BasedOn="{StaticResource SpDropdownStandardStyle}">
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SpDropdownRichItemSelector}"/>
    </Style>

    <Style x:Key="SpDialogButtonStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{ThemeResource SpDialogBtnFontFace}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDialogBtnFontSize}"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Padding" Value="16,-2,16,0"/>
        <Setter Property="MinWidth" Value="{ThemeResource SpDialogBtnMinimumWidth}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="HoverBorder.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="NormalBorder"
                                                                           Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="PressedBorder.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.PressedForeground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="HoverBorder"
                                                                           Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="NormalBorder"
                                                                           Duration="0:0:0.1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="StrokeThickness" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.DisabledBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.DisabledTextBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpDialogButtonFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SpDialogButtonFocusBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource DialogBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <!-- Pressed colors -->
                        <Rectangle
                                       x:Name="PressedBorder"
                                       Fill="{TemplateBinding components:SpControlProperties.PressedBackground}"
                                       RadiusX="16" RadiusY="16"
                                       StrokeThickness="0"
                                       Width="Auto" Height="32"
                                       Visibility="Collapsed"/>
                        <!-- Hover colors -->
                        <Rectangle x:Name="HoverBorder"
                                       Fill="{TemplateBinding components:SpControlProperties.HoverBrush}"
                                       RadiusX="16" RadiusY="16"
                                       StrokeThickness="0"
                                       Width="Auto" Height="32"
                                       Visibility="Collapsed"/>
                        <!-- Normal colors -->
                        <Rectangle x:Name="NormalBorder"
                                       Fill="{TemplateBinding Background}"
                                       RadiusX="16" RadiusY="16"
                                       StrokeThickness="2" Stroke="{TemplateBinding BorderBrush}"
                                       Width="Auto" Height="32"/>
                        <ContentPresenter x:Name="ContentPresenter"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Content="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="{TemplateBinding Padding}"
                                       FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="SpDropdownImageTemplate">
        <Grid>
            <Image x:Name="Icon" Source="{Binding}" Width="16" Height="16"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="SpImageDropdownQuietItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
                                <Setter Property="TextLineBounds" Value="Full"/>
                                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>

                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#F5F5F5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#1592E6"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="26" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True" Grid.ColumnSpan="2"/>
                        <ContentPresenter x:Name="ContentPresenter"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"

                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">


                        </ContentPresenter>
                        <Image x:Name="Tick"
                                    Source="SP_Check_R.png"
                                    Stretch="None"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    IsHitTestVisible="False"
                                    Margin="0,10,10,10"
                                    VerticalAlignment="Center"
                                    Visibility="Collapsed"/>
                        <Border x:Name="FocusRect" Background="Transparent" Grid.ColumnSpan="2" BorderBrush="{StaticResource SpDropdownFocusBorderBrush}" BorderThickness="{StaticResource SpDropdownFocusBarThickness}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SpImageDropdownQuietStyle" TargetType="components:SpImageDropdown">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="components:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"/>
        <Setter Property="components:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.HeaderBorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource SpImageDropdownQuietItemStyle}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource SpDropdownImageTemplate}" />
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"/>
                                        <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.Visibility" Value="Visible"/>
                                        <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"/>
                                        <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
                                                                    OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                    OpenedTargetName="PopupBorder"
                                                                    OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
                                                                    OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                    OpenedTargetName="PopupBorder"
                                                                    OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownShowPosition">
                                <VisualState x:Name="DropDownShowClosed"/>
                                <VisualState x:Name="DropDownShowBelow"/>
                                <VisualState x:Name="DropDownShowAbove"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter"
                                            Padding="{ThemeResource SpDropdownLabelPadding}"
                                            Content="{TemplateBinding Header}"
                                            FontSize="{ThemeResource SpDropdownLabelFontSize}"
                                            FontWeight="{ThemeResource SpDropdownFontWeight}"
                                            FlowDirection="{TemplateBinding FlowDirection}"
                                            Visibility="Collapsed"
                                            Foreground="{ThemeResource SpDropdownLabelBrush}"
                                            x:DeferLoadStrategy="Lazy"/>
                        <Border x:Name="Background"
                                CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                RelativeSource={RelativeSource TemplatedParent}}"
                                Grid.ColumnSpan="2"
                                Grid.Row="1"/>
                        <Grid x:Name="BackgroundOpen"
                                Background="Transparent"
                                Grid.ColumnSpan="2"
                                Grid.Row="1"
                                Visibility="Collapsed">
                            <Border x:Name="BackgroundOpenDown"
                                    CornerRadius="{StaticResource SpDropdownOpenBorderRadius}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    Background="{TemplateBinding Background}"
                                    Visibility="Visible"/>
                            <Border x:Name="BackgroundOpenUp"
                                    CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,1"
                                    Background="{TemplateBinding Background}"
                                    Visibility="Collapsed"/>
                        </Grid>
                        <Border x:Name="HighlightBackground"
                                CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                RelativeSource={RelativeSource TemplatedParent}}"
                                Grid.ColumnSpan="2"
                                            Grid.Row="1"/>
                        <Grid  x:Name="HightlightBackgroundOpen"
                                Background="Transparent"
                                Grid.ColumnSpan="2"
                                Grid.Row="1"
                                Visibility="Collapsed">
                            <Border x:Name="HightlightBackgroundOpenDown"
                                    CornerRadius="{StaticResource SpDropdownOpenBorderRadius}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    Background="{TemplateBinding Background}"/>
                            <Border x:Name="HightlightBackgroundOpenUp"
                                    CornerRadius="{StaticResource SpDropdownOpenUpBorderRadius}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,1"
                                    Background="{TemplateBinding Background}"/>
                        </Grid>

                        <!-- Give the ComboBox a default ContentPresneter. To have full control of how things get presented,
                        make it invisible and use our ComboContentPresenter instead -->
                        <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"/>
                        <ContentPresenter
                                x:Name="ComboContentPresenter"
                                Height="{ThemeResource SpDropdownHeight}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                FontWeight="{ThemeResource SpDropdownFontWeight}"
                                Grid.Row="1"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentTemplate="{TemplateBinding ItemTemplate}"/>

                        <Image x:Name="ComboBoxEditor"
                                 Grid.Column="2"
                                 Grid.Row="1"
                                 Margin="0 0 16 0"
                                 Width="16"
                                 Height="16"
                                 HorizontalAlignment="Stretch"/>

                        <Border Grid.Row="1" Width="16" Height="16" Grid.Column="2" x:Name="IndeterminateBorder"
                                Visibility="Collapsed" Margin="0 0 16 0"  CornerRadius="2">
                            <Rectangle Width="8" Height="2" Fill="{ThemeResource ColorButtonIndeterminateDashColor}" RadiusX="0" RadiusY="0"></Rectangle>
                        </Border>

                        <ContentPresenter x:Name="DropDownGlyph"
                                            Grid.Column="1"
                                            Grid.Row="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                            <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                                <Border Width="{StaticResource SpDropdownHeight}">
                                    <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ContentPresenter>
                        <Border x:Name="FocusIndicator"
                                BorderBrush="{StaticResource SpDropdownFocusBorderBrush}"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                Height="1"
                                Visibility="Collapsed" />
                        <Border x:Name="FieldIndicator"
                                BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                Height="1"
                                Visibility="Collapsed"/>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="White"
                                    CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                    HorizontalAlignment="Stretch" >
                                <ScrollViewer x:Name="ScrollViewer"
                                                Style="{StaticResource SpScrollViewer}"
                                                AutomationProperties.AccessibilityView="Raw"
                                                BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                                Background="Transparent"
                                                Foreground="{ThemeResource SpDropdownTextBrush}"
                                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                MinWidth="{TemplateBinding MinWidth}"
                                                VerticalSnapPointsType="OptionalSingle"
                                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                VerticalSnapPointsAlignment="Near"
                                                ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="SpectrumButtonCtaStatesDefaultTextColor"
                     Color="{ThemeResource StaticWhite}" />
    <SolidColorBrush x:Key="SpectrumButtonCtaStatesDownTextColor"
                     Color="{ThemeResource StaticWhite}" />
    <SolidColorBrush x:Key="SpectrumButtonCtaStatesDownBackgroundColor"
                     Color="{ThemeResource StaticBlue700}" />
    <SolidColorBrush x:Key="SpectrumButtonCtaStatesHoverBackgroundColor"
                     Color="{StaticResource StaticBlue600}" />
    <SolidColorBrush x:Key="SpectrumButtonCtaStatesDefaultBackgroundColor"
                     Color="{ThemeResource StaticBlue500}" />
    <SolidColorBrush x:Key="SpectrumButtonCtaStatesDefaultBorderColor"
                     Color="{ThemeResource StaticBlue500}" />
    <SolidColorBrush x:Key="SpectrumButtonPrimaryStatesDisabledBackgroundColor"
                     Color="{ThemeResource Gray200}" />
    <SolidColorBrush x:Key="SpectrumButtonPrimaryStatesDisabledTextColor"
                     Color="{ThemeResource Gray500}" />

    <Style x:Key="SpDialogCallToActionButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
        <Setter Property="Foreground" Value="{ThemeResource SpectrumButtonCtaStatesDefaultTextColor}"/>
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpectrumButtonCtaStatesDownTextColor}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpectrumButtonCtaStatesDownBackgroundColor}" />
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpectrumButtonCtaStatesHoverBackgroundColor}" />
        <Setter Property="Background" Value="{ThemeResource SpectrumButtonCtaStatesDefaultBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SpectrumButtonCtaStatesDefaultBorderColor}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"/>
        <Setter Property="components:SpControlProperties.DisabledBrush" Value="{ThemeResource SpectrumButtonPrimaryStatesDisabledBackgroundColor}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpectrumButtonPrimaryStatesDisabledTextColor}" />
    </Style>

    <Style x:Key="SpDialogPrimaryButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
        <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonPrimaryTextBrush}"/>
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonPrimaryPressedTextBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonPrimaryPressedBrush}" />
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonPrimaryHoverBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonPrimaryHoverBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDialogButtonPrimaryBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"/>
        <Setter Property="components:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonPrimaryDisabledBrush}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonPrimaryDisabledTextBrush}" />
    </Style>

    <Style x:Key="SpDialogSecondaryButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
        <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonSecondaryTextBrush}"/>
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonSecondaryPressedTextBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonSecondaryPressedBrush}" />
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonSecondaryHoverBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonSecondaryHoverBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDialogButtonSecondaryBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnSecondaryWeight}"/>
        <Setter Property="components:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonSecondaryDisabledBrush}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonSecondaryDisabledTextBrush}" />
    </Style>

    <Style x:Key="SpDialogWarningButtonBorderedStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
        <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonWarningTextBrush}"/>
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonWarningPressedTextBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonWarningPressedBrush}" />
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonWarningHoverBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonWarningHoverBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDialogButtonWarningBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnWarningWeight}"/>
        <Setter Property="components:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonWarningDisabledBrush}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonWarningDisabledTextBrush}" />
    </Style>

    <Style x:Key="SpDialogPrimaryButtonQuietStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
        <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonQuietPrimaryTextBrush}"/>
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonQuietPrimaryPressedTextBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonQuietPrimaryPressedBrush}" />
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryHoverBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryBackgroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDialogButtonQuietPrimaryBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"/>
        <Setter Property="components:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryDisabledBrush}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonQuietPrimaryDisabledTextBrush}" />
    </Style>

    <Style x:Key="SpDialogSecondaryButtonQuietStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
        <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonQuietSecondaryTextBrush}"/>
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonQuietSecondaryPressedTextBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonQuietSecondaryPressedBrush}" />
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryHoverBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryBackgroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDialogButtonQuietSecondaryBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnPrimaryWeight}"/>
        <Setter Property="components:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryDisabledBrush}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonQuietSecondaryDisabledTextBrush}" />
    </Style>

    <Style x:Key="SpDialogWarningButtonQuietStyle" TargetType="Button" BasedOn="{StaticResource SpDialogButtonStyle}">
        <Setter Property="Foreground" Value="{ThemeResource SpDialogButtonQuietWarningTextBrush}"/>
        <Setter Property="components:SpControlProperties.PressedForeground" Value="{ThemeResource SpDialogButtonQuietWarningPressedTextBrush}" />
        <Setter Property="components:SpControlProperties.PressedBackground" Value="{ThemeResource SpDialogButtonQuietWarningPressedBrush}" />
        <Setter Property="components:SpControlProperties.HoverBrush" Value="{ThemeResource SpDialogButtonQuietWarningHoverBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpDialogButtonQuietWarningBackgroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDialogButtonQuietWarningBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="{ThemeResource SpDialogBtnWarningWeight}"/>
        <Setter Property="components:SpControlProperties.DisabledBrush" Value="{ThemeResource SpDialogButtonQuietWarningDisabledBrush}" />
        <Setter Property="components:SpControlProperties.DisabledTextBrush" Value="{ThemeResource SpDialogButtonQuietWarningDisabledTextBrush}" />
    </Style>

    <Style x:Key="SpEditableDropdownQuietStyle" TargetType="components:SpDropdown">
        <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="components:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"/>
        <Setter Property="components:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.HeaderBorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource SpDropdownQuietItemStyle}"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"/>
                                        <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CombinedFocusStates">
                                <VisualState x:Name="CombinedUnFocused"/>
                                <VisualState x:Name="CombinedFocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardFocusStates">
                                <VisualState x:Name="NotKeyboardFocused"/>
                                <VisualState x:Name="KeyboardFocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"/>
                                        <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
                                                                         OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                         OpenedTargetName="PopupBorder"
                                                                         OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
                                                                          OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                          OpenedTargetName="PopupBorder"
                                                                          OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownShowPosition">
                                <VisualState x:Name="DropDownShowClosed">
                                    <VisualState.Setters>
                                        <Setter Target="FieldIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DropDownShowBelow">
                                    <VisualState.Setters>
                                        <Setter Target="FieldIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DropDownShowAbove">
                                    <VisualState.Setters>
                                        <Setter Target="FieldIndicator.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter"
                                                  Padding="{ThemeResource SpDropdownLabelPadding}"
                                                  Content="{TemplateBinding Header}"
                                                  FontSize="{ThemeResource SpDropdownLabelFontSize}"
                                                  FontWeight="{ThemeResource SpDropdownFontWeight}"
                                                  FlowDirection="{TemplateBinding FlowDirection}"
                                                  Visibility="Collapsed"
                                                  Foreground="{ThemeResource SpDropdownLabelBrush}"
                                                  x:DeferLoadStrategy="Lazy"/>
                        <Border x:Name="Background"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>
                        <Border x:Name="HighlightBackground"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>
                        <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"/>
                        <ContentPresenter
                                    x:Name="ComboContentPresenter"
                                    Visibility="Collapsed"/>

                        <components:SpTextBox x:Name="comboBoxEditor"
                                 Grid.Row="1"
                                 HorizontalAlignment="Stretch"
                                 EnableUpDownKeyHandling="False"
                                 Style="{StaticResource SpDropdownTextBoxStyle}" />

                        <ContentPresenter x:Name="DropDownGlyph"
                                                  Grid.Column="1"
                                                  Grid.Row="1"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch">
                            <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                                <Border Width="{StaticResource SpDropdownHeight}">
                                    <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ContentPresenter>
                        <Border x:Name="FocusIndicator"
                                        BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}"
                                        BorderThickness="1"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        Height="1"/>

                        <Border x:Name="FieldIndicator"
                                        BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}"
                                        BorderThickness="1"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        Height="1"
                                        Visibility="Collapsed"/>

                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                            HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer"
                                        Style="{StaticResource SpScrollViewer}"
                                        AutomationProperties.AccessibilityView="Raw"
                                        BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                        Background="Transparent"
                                        Foreground="{ThemeResource SpDropdownTextBrush}"
                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                        IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        VerticalSnapPointsType="OptionalSingle"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                        VerticalSnapPointsAlignment="Near"
                                        ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpEditableDropdownHUDQuietStyle" TargetType="components:SpDropdown">
        <Setter Property="components:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"/>
        <Setter Property="components:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.HeaderBorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource SpDropdownQuietItemStyle}"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="106"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"/>
                                        <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CombinedFocusStates">
                                <VisualState x:Name="CombinedUnFocused"/>
                                <VisualState x:Name="CombinedFocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardFocusStates">
                                <VisualState x:Name="NotKeyboardFocused"/>
                                <VisualState x:Name="KeyboardFocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"/>
                                        <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
                                                                         OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                         OpenedTargetName="PopupBorder"
                                                                         OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
                                                                          OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                          OpenedTargetName="PopupBorder"
                                                                          OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownShowPosition">
                                <VisualState x:Name="DropDownShowClosed">
                                    <VisualState.Setters>
                                        <Setter Target="FieldIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DropDownShowBelow">
                                    <VisualState.Setters>
                                        <Setter Target="FieldIndicator.Visibility" Value="Collapsed"/>
                                        <Setter Target="Popup.Margin" Value="142,0,0,0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DropDownShowAbove">
                                    <VisualState.Setters>
                                        <Setter Target="FieldIndicator.Visibility" Value="Visible"/>
                                        <Setter Target="Popup.Margin" Value="142,0,0,0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter"
                                                  Content="{TemplateBinding Header}"
                                                  FontSize="{ThemeResource SpDropdownLabelFontSize}"
                                                  FontWeight="{ThemeResource SpDropdownFontWeight}"
                                                  FlowDirection="{TemplateBinding FlowDirection}"
                                                  HorizontalAlignment="Left"
                                                  HorizontalContentAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Visibility="Collapsed"
                                                  Margin="12,0,0,0"
                                                  Foreground="{ThemeResource SpDropdownLabelBrush}"
                                                  x:DeferLoadStrategy="Lazy"
                                                  Grid.Row="1"
                                                  Grid.Column="0"/>
                        <Border x:Name="Background"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.Row="0"
                                        Grid.Column="1"/>

                        <Border x:Name="HighlightBackground"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.Row="0"
                                        Grid.Column="1"/>

                        <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"/>
                        <ContentPresenter
                                    x:Name="ComboContentPresenter"
                                    Visibility="Collapsed"/>

                        <components:SpTextBox x:Name="comboBoxEditor"
                                 Grid.Row="1"
                                 Grid.Column="2"
                                 HorizontalAlignment="Left"
                                 EnableUpDownKeyHandling="False"
                                 Padding="36,0,24,0"
                                 MinWidth="52"
                                 Style="{StaticResource SpDropdownTextBoxStyle}" />

                        <ContentPresenter x:Name="DropDownGlyph"
                                                  Grid.Row="1"
                                                  Grid.Column="2"
                                                  Margin="0,1,12,0"
                                                  HorizontalAlignment="Right"
                                                  VerticalAlignment="Stretch">
                            <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                                <Border Width="{StaticResource SpDropdownHeight}">
                                    <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ContentPresenter>
                        <Border x:Name="FocusIndicator"
                                        BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}"
                                        BorderThickness="1"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Height="1"
                                        MinWidth="64"
                                        Margin="36,0,12,0"
                                />

                        <Border x:Name="FieldIndicator"
                                        BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}"
                                        BorderThickness="1"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        Height="1"
                                        MinWidth="64"
                                        Margin="36,0,12,0"
                                        Visibility="Collapsed"/>

                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                            HorizontalAlignment="Right">
                                <ScrollViewer x:Name="ScrollViewer"
                                        Style="{StaticResource SpScrollViewer}"
                                        AutomationProperties.AccessibilityView="Raw"
                                        BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                        Background="Transparent"
                                        Foreground="{ThemeResource SpDropdownTextBrush}"
                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                        IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        VerticalSnapPointsType="OptionalSingle"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                        VerticalSnapPointsAlignment="Near"
                                        ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpEditableDropdownHUDStringQuietStyle" TargetType="components:SpDropdown">
        <Setter Property="DropdownPopupLeftPosition" Value="{StaticResource SpDropdownListItemPadding}"/>
        <Setter Property="components:SpControlProperties.HeaderBorderBrush" Value="{x:Null}"/>
        <Setter Property="components:SpControlProperties.HeaderBackgroundBrush" Value="Transparent"/>
        <Setter Property="components:SpControlProperties.HeaderBorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{ThemeResource SpDropdownTextBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SpDropdownFillBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SpDropdownBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource SpDropdownBorderTickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource SpDropdownFontSize}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource SpDropdownQuietItemStyle}"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="102"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ComboContentPresenter.Foreground" Value="{ThemeResource SpDropdownDisabledBrush}"/>
                                        <Setter Target="DropDownGlyphContent.Opacity" Value="{ThemeResource DropdownDisabledImageOpacity}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CombinedFocusStates">
                                <VisualState x:Name="CombinedUnFocused"/>
                                <VisualState x:Name="CombinedFocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.BorderBrush" Value="{StaticResource SpDropdownFocusBorderBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardFocusStates">
                                <VisualState x:Name="NotKeyboardFocused"/>
                                <VisualState x:Name="KeyboardFocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.BorderThickness" Value="{StaticResource SpDropdownFocusThickness}"/>
                                        <Setter Target="FocusIndicator.Height" Value="{StaticResource SpDropdownFocusSize}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <VisualState.Setters>
                                        <Setter Target="FocusIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
                                                                         OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                         OpenedTargetName="PopupBorder"
                                                                         OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
                                                                          OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                          OpenedTargetName="PopupBorder"
                                                                          OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownShowPosition">
                                <VisualState x:Name="DropDownShowClosed">
                                    <VisualState.Setters>
                                        <Setter Target="FieldIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DropDownShowBelow">
                                    <VisualState.Setters>
                                        <Setter Target="Popup.Margin" Value="106,0,0,0"/>
                                        <Setter Target="FieldIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DropDownShowAbove">
                                    <VisualState.Setters>
                                        <Setter Target="Popup.Margin" Value="70,0,0,0"/>
                                        <Setter Target="FieldIndicator.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter"
                                                  Padding="{ThemeResource SpDropdownLabelPadding}"
                                                  Content="{TemplateBinding Header}"
                                                  FontSize="{ThemeResource SpDropdownLabelFontSize}"
                                                  FontWeight="{ThemeResource SpDropdownFontWeight}"
                                                  FlowDirection="{TemplateBinding FlowDirection}"
                                                  HorizontalAlignment="Left"
                                                  HorizontalContentAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Visibility="Collapsed"
                                                  Margin="12,0,0,0"
                                                  Foreground="{ThemeResource SpDropdownLabelBrush}"
                                                  x:DeferLoadStrategy="Lazy"/>
                        <Border x:Name="Background"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.Column="2"
                                        Grid.Row="1"/>
                        <Border x:Name="HighlightBackground"
                                        CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                        BorderBrush="{Binding Path=(components:SpControlProperties.HeaderBorderBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{Binding Path=(components:SpControlProperties.HeaderBorderThickness),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{Binding Path=(components:SpControlProperties.HeaderBackgroundBrush),
                                               RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.Column="2"
                                        Grid.Row="1"/>
                        <ContentPresenter x:Name="ContentPresenter" Visibility="Collapsed"
                                          Grid.Column="2"/>
                        <ContentPresenter
                                    x:Name="ComboContentPresenter"
                                    Visibility="Collapsed"
                                    Grid.Column="2"/>

                        <components:SpTextBox x:Name="comboBoxEditor"
                                 Grid.Column="2"
                                 Grid.Row="1"
                                 Margin="0 0 32 0"
                                 HorizontalAlignment="Stretch"
                                 EnableUpDownKeyHandling="False"
                                 Style="{StaticResource SpDropdownTextBoxStyle}" />

                        <ContentPresenter x:Name="DropDownGlyph"
                                                  Grid.Column="2"
                                                  Grid.Row="1"
                                                  Margin="0,1,12,0"
                                                  HorizontalAlignment="Right"
                                                  VerticalAlignment="Stretch">
                            <Grid RenderTransform="{StaticResource SpEditableDropdownGlyphTranslation}">
                                <Border Width="{StaticResource SpDropdownHeight}">
                                    <Image x:Name="DropDownGlyphContent" Source="SP_Dropdown_Xs.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ContentPresenter>
                        <Border x:Name="FocusIndicator"
                                        BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}"
                                        BorderThickness="1"
                                        Grid.Column="2"
                                        Grid.Row="1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        Margin="0,0,12,0"
                                        Height="1"/>

                        <Border x:Name="FieldIndicator"
                                        BorderBrush="{StaticResource SpDropdownUnfocusBorderBrush}"
                                        BorderThickness="1"
                                        Grid.Column="2"
                                        Grid.Row="1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        Margin="0,0,12,0"
                                        Height="1"
                                        Visibility="Collapsed"/>

                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{ThemeResource SpDropdownBorderRadius}"
                                            HorizontalAlignment="Right">
                                <ScrollViewer x:Name="ScrollViewer"
                                        Style="{StaticResource SpScrollViewer}"
                                        AutomationProperties.AccessibilityView="Raw"
                                        BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                        Background="Transparent"
                                        Foreground="{ThemeResource SpDropdownTextBrush}"
                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                        IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        VerticalSnapPointsType="OptionalSingle"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                        VerticalSnapPointsAlignment="Near"
                                        ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpDropdownTextBoxStyle" TargetType="TextBox">
        <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{ThemeResource UiTextBrush}"/>
        <Setter Property="Background" Value="{ThemeResource TransparentBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TransparentBrush}"/>
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource SelectedBorder}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="IsTextPredictionEnabled" Value="False" />
        <Setter Property="IsSpellCheckEnabled" Value="False" />
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Padding="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentElement.Foreground" Value="{ThemeResource TextBoxLabelColorBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible"/>
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Opacity="{ThemeResource TextControlBackgroundRestOpacity}" />
                        <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" />
                        <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw"
                                VerticalAlignment="Center"
                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                        <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2"
                                Content="{TemplateBinding PlaceholderText}"
                                Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False"
                                IsTabStop="False" Margin="0" Padding="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpTorqSearchBoxBaseStyle" TargetType="TextBox">
        <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltHighBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderColorBrush}" />
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="0"/>
        <Setter Property="components:SpControlProperties.DisabledBackground" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="23, 0, 8, 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.Resources>
                            <x:Double x:Key="QueryButtonDimension">11</x:Double>
                            <x:Double x:Key="ImageDimension">9</x:Double>
                            <x:Double x:Key="ButtonWidth">15</x:Double>
                            <x:Double x:Key="ButtonHeight">20</x:Double>
                            <Style x:Name="QueryButtonStyle" TargetType="Button">
                                <Setter Property="Foreground" Value="{ThemeResource BrushGrey7}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid Width="{StaticResource ButtonWidth}"
                                                Height="{StaticResource ButtonHeight}">
                                                <BitmapIcon x:Name="QueryIcon"
                                                    Width="{StaticResource QueryButtonDimension}"
                                                    Height="{StaticResource QueryButtonDimension}"
                                                    Margin="0,0,0,0"
                                                    HorizontalAlignment="Right"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    UriSource="ms-appx:///SP_MagnifyingGlass.png" />
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="PointerOver" />
                                                        <VisualState x:Name="Pressed" />
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="QueryIcon.Foreground" Value="{ThemeResource BrushGrey3}" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                <Setter Property="Foreground" Value="{ThemeResource BrushGrey7}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid Width="{StaticResource ButtonWidth}"
                                                Height="{StaticResource ButtonHeight}">
                                                <BitmapIcon x:Name="DeleteIcon"
                                                    Width="{StaticResource ImageDimension}"
                                                    Height="{StaticResource ImageDimension}"
                                                    Margin="0,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    UriSource="ms-appx:///SP_CloseX_9.png" />
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="PointerOver" />
                                                        <VisualState x:Name="Pressed" />
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="DeleteIcon.Foreground" Value="{ThemeResource BrushGrey3}" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
                                                 Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                               Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=(components:SpControlProperties.DisabledBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                               Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
                                               Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                               Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
                                               Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxPlaceholderForegroundColorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                               Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxActiveBorderColorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                               Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ForegroundColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton"
                                               Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="BorderElement"
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(components:SpControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Grid.ColumnSpan="2"
                            Grid.RowSpan="1"/>
                        <ContentPresenter x:Name="HeaderContentPresenter"
                            x:DeferLoadStrategy="Lazy"
                            Visibility="Collapsed"
                            Grid.Row="0"
                            Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                            Margin="0,0,0,8"
                            Grid.ColumnSpan="2"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            FontWeight="Normal" />
                        <ScrollViewer x:Name="ContentElement"
                            Grid.Row="1"
                            VerticalAlignment="Center"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw"
                            ZoomMode="Disabled" />
                        <ContentControl x:Name="PlaceholderTextContentPresenter"
                            Grid.Row="1"
                            VerticalAlignment="Center"
                            Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            Grid.ColumnSpan="2"
                            Content="{TemplateBinding PlaceholderText}"
                            IsHitTestVisible="False"/>
                        <Button x:Name="QueryButton"
                            Grid.Row="1"
                            Style="{StaticResource QueryButtonStyle}"
                            BorderThickness="0"
                            Margin="0,0,0,0"
                            IsTabStop="False"
                            Grid.Column="0"/>
                        <Button x:Name="DeleteButton"
                            Grid.Row="1"
                            Style="{StaticResource DeleteButtonStyle}"
                            BorderThickness="0"
                            Margin="0,0,0,0"
                            IsTabStop="False"
                            Grid.Column="1"
                            Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpTorqSearchBoxStyle" TargetType="TextBox" BasedOn="{StaticResource SpTorqSearchBoxBaseStyle}">
        <Setter Property="BorderThickness" Value="{ThemeResource TextBoxSpectrumStandardStyleBorderThickness}" />
        <Setter Property="Background" Value="{ThemeResource Grey2}" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="{ThemeResource TextBoxSpectrumStandardStyleBorderCornerRadius}"/>
        <Setter Property="components:SpControlProperties.DisabledBackground" Value="{ThemeResource ControlDisabledFillColorBrush}" />
    </Style>

    <Style x:Key="SpTorqSearchBoxQuietStyle" TargetType="TextBox" BasedOn="{StaticResource SpTorqSearchBoxBaseStyle}">
        <Setter Property="BorderThickness" Value="{ThemeResource TextBoxSpectrumQuietStyleBorderThickness}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="components:SpControlProperties.CornerRadius" Value="0"/>
        <Setter Property="components:SpControlProperties.DisabledBackground" Value="Transparent" />
    </Style>

    <Style x:Key="ContextMenuItemSeparatorTemplate" TargetType="MenuFlyoutSeparator">
        <Setter Property="Opacity">
            <Setter.Value>0.2</Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{ThemeResource InteractionBorderColor}"/>
    </Style>

    <Style x:Key="ContextMenuStyleTemplate" TargetType="MenuFlyoutPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuFlyoutPresenter">
                    <Border CornerRadius="{ThemeResource MenuFlyoutCornerRadius}"
                    Background="{ThemeResource MenuFlyoutBackgroundColor}"
                    BorderThickness="{ThemeResource MenuFlyoutBorderThickness}"
                    BorderBrush="{ThemeResource MenuFlyoutBorderBrush}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Note for future refactorings: I tried removing the style for SpContextMenuItem from SpContextMenu.xaml and
    encapsulate it inside a SpContextMenuItem.xaml, just like with SpSlider.xaml.
    However, that approach didn't seem to work. The code was compiling, the generated files looked correct,
    but at runtime the style from SpContextMenuItem.xaml was not applied. Maybe it was a problem specific to MenuFlyoutItem.
    For MenuFlyoutSubItem creating a subclass with its own XAML file is not an option because MenuFlyoutSubItem is sealed.
    -->
    <Style x:Key="ContextMenuItemTemplate" TargetType="components:SpContextMenuItem">
        <Setter Property="components:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}" />
        <Setter Property="components:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}" />
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}" />
        <Setter Property="components:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}" />
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="components:SpContextMenuItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPointerOverBackgroundColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="NameBlock" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="NameShortcut" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemNameDisabledForegroundColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemShortcutDisabledForegroundColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="NameBlock" />
                                            <PointerUpThemeAnimation Storyboard.TargetName="NameShortcut" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" To="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="NameBlock" />
                                            <PointerUpThemeAnimation Storyboard.TargetName="NameShortcut" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckPlaceholderStates">
                                <VisualState x:Name="NoPlaceholder" />
                                <VisualState x:Name="CheckPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameBlock" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NameShortcut" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaddingSizeStates">
                                <VisualState x:Name="DefaultPadding" />
                                <!-- Animation for NarrowPadding padding removed because at this time we want the same look for both mouse and touch.
                      Use the default MenuFlyoutItem template if you need to regenerate the animation. -->
                                <VisualState x:Name="NarrowPadding" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusRing.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{ThemeResource MenuFlyoutBorderThickness}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{ThemeResource MenuFlyoutCornerRadius}"
                    Padding="{ThemeResource MenuFlyoutItemThemePaddingNarrow}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition MinWidth="140" Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <FontIcon x:Name="CheckGlyph" AutomationProperties.AccessibilityView="Raw" Grid.Column="0"
                          Foreground="{ThemeResource UiTextColour}" FontSize="{StaticResource SpDropdownFontSize}"  Opacity="0"
                          FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE001;"/>
                            <TextBlock x:Name="NameBlock" Grid.Column="1" Text="{TemplateBinding Text}" FontSize="{StaticResource SpDropdownFontSize}"
                           Foreground="{ThemeResource UiTextColour}" Padding="0, 1, 0, 1" AutomationProperties.AutomationId="{Binding Path=(components:SpControlProperties.AutomationId), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBlock x:Name="NameShortcut" Grid.Column="2" Text="{TemplateBinding Shortcut}" FontSize="{StaticResource SpDropdownFontSize}"
                           HorizontalAlignment="Right" Padding="10, 1, 0, 1" Foreground="{ThemeResource UiTextColourLight}"/>
                        </Grid>
                        <Border x:Name="FocusRing"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      IsHitTestVisible="False"
                      Visibility="Collapsed"
                      BorderBrush="{Binding Path=(components:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      BorderThickness="{Binding Path=(components:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      CornerRadius="{Binding Path=(components:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      Margin="{Binding Path=(components:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenuSubItemTemplate" TargetType="MenuFlyoutSubItem">
        <Setter Property="FontSize" Value="{StaticResource SpDropdownFontSize}"/>
        <Setter Property="Foreground" Value="{ThemeResource UiTextColour}"/>
        <Setter Property="components:SpControlProperties.FocusBrush" Value="{ThemeResource FocusBrush}" />
        <Setter Property="components:SpControlProperties.FocusThickness" Value="{ThemeResource FocusThickness}" />
        <Setter Property="components:SpControlProperties.FocusCornerRadius" Value="{ThemeResource FocusCornerRadius}" />
        <Setter Property="components:SpControlProperties.FocusOffset" Value="{ThemeResource FocusOffset}" />
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuFlyoutSubItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPointerOverBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SubMenuOpened">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPointerOverBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemNameDisabledForegroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="SubItemChevron">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemShortcutDisabledForegroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaddingSizeStates">
                                <VisualState x:Name="DefaultPadding"/>
                                <!-- Animation for NarrowPadding padding removed because at this time we want the same look for both mouse and touch.
                          Use the default MenuFlyoutItem template if you need to regenerate the animation. -->
                                <VisualState x:Name="NarrowPadding" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusRing.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{ThemeResource MenuFlyoutBorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{ThemeResource MenuFlyoutCornerRadius}"
                        Padding="{ThemeResource MenuFlyoutItemThemePaddingNarrow}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="TextBlock" Grid.Column="1" Foreground="{ThemeResource UiTextColour}"
                                 FontSize="{StaticResource SpDropdownFontSize}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}"
                                 TextTrimming="CharacterEllipsis" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 AutomationProperties.AutomationId="{Binding Path=(components:SpControlProperties.AutomationId), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <FontIcon x:Name="SubItemChevron" AutomationProperties.AccessibilityView="Raw" Grid.Column="2"
                                Foreground="{ThemeResource MenuSubItemChevronForegroundColor}" FontSize="{StaticResource SpDropdownFontSize}"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E3;" MirroredWhenRightToLeft="True"
                                Margin="{ThemeResource MenuFlyoutItemChevronMargin}"/>
                            </Grid>
                        </Grid>
                        <Border x:Name="FocusRing"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      IsHitTestVisible="False"
                      Visibility="Collapsed"
                      BorderBrush="{Binding Path=(components:SpControlProperties.FocusBrush),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      BorderThickness="{Binding Path=(components:SpControlProperties.FocusThickness),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      CornerRadius="{Binding Path=(components:SpControlProperties.FocusCornerRadius),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      Margin="{Binding Path=(components:SpControlProperties.FocusOffset),Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TorqButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                   Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BtnDarkByBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusRing.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Content="{TemplateBinding Content}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          AutomationProperties.AccessibilityView="Raw"/>
                        <Border x:Name="FocusRing"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                IsHitTestVisible="False"
                                Visibility="Collapsed"
                                BorderBrush="{ThemeResource FocusBrush}"
                                BorderThickness="{ThemeResource FocusThickness}"
                                CornerRadius="{ThemeResource FocusCornerRadius}"
                                Margin="{ThemeResource FocusOffset}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
